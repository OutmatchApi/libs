/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.outmatchapi.apitest


import com.squareup.moshi.Json

/**
 * The different classes of HTTP status codes: - CodeNone = 0 - Code1xx = 100 - Code2xx = 200 - Code3xx = 300 - Code4xx = 400 - Code5xx = 500
 *
 * Values: CodeNone,Code1xx,Code2xx,Code3xx,Code4xx,Code5xx
 */

enum class StatusCodeClass(val value: kotlin.Int) {

    @Json(name = "0")
    CodeNone(0),

    @Json(name = "100")
    Code1xx(100),

    @Json(name = "200")
    Code2xx(200),

    @Json(name = "300")
    Code3xx(300),

    @Json(name = "400")
    Code4xx(400),

    @Json(name = "500")
    Code5xx(500);

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value.toString()

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is StatusCodeClass) "$data" else null

        /**
         * Returns a valid [StatusCodeClass] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): StatusCodeClass? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

