/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.outmatchapi.video-api

import com.outmatchapi.video-api.Metadata
import com.outmatchapi.video-api.VideoAssets
import com.outmatchapi.video-api.VideoSource

import com.squareup.moshi.Json

/**
 * 
 *
 * @param assets 
 * @param description A description for the video content. 
 * @param metadata Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair. 
 * @param mp4Support This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video. 
 * @param panoramic Defines if video is panoramic. 
 * @param playerId The id of the player that will be applied on the video. 
 * @param `public` Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos). 
 * @param publishedAt The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.
 * @param source 
 * @param tags One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces.  
 * @param title The title of the video content. 
 * @param updatedAt The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.
 * @param videoId The unique identifier of the video object.
 */


data class Video (

    @Json(name = "assets")
    val assets: VideoAssets? = null,

    /* A description for the video content.  */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair.  */
    @Json(name = "metadata")
    val metadata: kotlin.collections.List<Metadata>? = null,

    /* This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video.  */
    @Json(name = "mp4Support")
    val mp4Support: kotlin.Boolean? = null,

    /* Defines if video is panoramic.  */
    @Json(name = "panoramic")
    val panoramic: kotlin.Boolean? = null,

    /* The id of the player that will be applied on the video.  */
    @Json(name = "playerId")
    val playerId: kotlin.String? = null,

    /* Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).  */
    @Json(name = "public")
    val `public`: kotlin.Boolean? = null,

    /* The date and time the API created the video. Date and time are provided using ISO-8601 UTC format. */
    @Json(name = "publishedAt")
    val publishedAt: kotlin.String? = null,

    @Json(name = "source")
    val source: VideoSource? = null,

    /* One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces.   */
    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.Any>? = null,

    /* The title of the video content.  */
    @Json(name = "title")
    val title: kotlin.String? = null,

    /* The date and time the video was updated. Date and time are provided using ISO-8601 UTC format. */
    @Json(name = "updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null,

    /* The unique identifier of the video object. */
    @Json(name = "videoId")
    val videoId: kotlin.String? = null

)

