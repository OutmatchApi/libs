/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.outmatchapi.video-api

import com.outmatchapi.video-api.LiveStreamAssets

import com.squareup.moshi.Json

/**
 * 
 *
 * @param assets 
 * @param broadcasting Whether or not you are broadcasting the live video you recorded for others to see. True means you are broadcasting to viewers, false means you are not.
 * @param liveStreamId The unique identifier for the live stream. Live stream IDs begin with \"li.\"
 * @param name The name of your live stream.
 * @param playerId The unique identifier for the player.
 * @param `public` BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
 * @param record Whether you are recording or not.
 * @param streamKey The unique, private stream key that you use to begin streaming.
 */


data class LiveMinusStream (

    @Json(name = "assets")
    val assets: LiveStreamAssets? = null,

    /* Whether or not you are broadcasting the live video you recorded for others to see. True means you are broadcasting to viewers, false means you are not. */
    @Json(name = "broadcasting")
    val broadcasting: kotlin.Boolean? = null,

    /* The unique identifier for the live stream. Live stream IDs begin with \"li.\" */
    @Json(name = "liveStreamId")
    val liveStreamId: kotlin.String? = null,

    /* The name of your live stream. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* The unique identifier for the player. */
    @Json(name = "playerId")
    val playerId: kotlin.String? = null,

    /* BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view. */
    @Json(name = "public")
    val `public`: kotlin.Boolean? = null,

    /* Whether you are recording or not. */
    @Json(name = "record")
    val record: kotlin.Boolean? = null,

    /* The unique, private stream key that you use to begin streaming. */
    @Json(name = "streamKey")
    val streamKey: kotlin.String? = null

)

