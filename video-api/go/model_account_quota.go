/*
api.video

api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package video-api

import (
	"encoding/json"
)

// AccountQuota Deprecated
type AccountQuota struct {
	// Deprecated
	QuotaRemaining *float32 `json:"quotaRemaining,omitempty"`
	// Deprecated
	QuotaTotal *float32 `json:"quotaTotal,omitempty"`
	// Deprecated
	QuotaUsed *float32 `json:"quotaUsed,omitempty"`
}

// NewAccountQuota instantiates a new AccountQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountQuota() *AccountQuota {
	this := AccountQuota{}
	return &this
}

// NewAccountQuotaWithDefaults instantiates a new AccountQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountQuotaWithDefaults() *AccountQuota {
	this := AccountQuota{}
	return &this
}

// GetQuotaRemaining returns the QuotaRemaining field value if set, zero value otherwise.
func (o *AccountQuota) GetQuotaRemaining() float32 {
	if o == nil || isNil(o.QuotaRemaining) {
		var ret float32
		return ret
	}
	return *o.QuotaRemaining
}

// GetQuotaRemainingOk returns a tuple with the QuotaRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountQuota) GetQuotaRemainingOk() (*float32, bool) {
	if o == nil || isNil(o.QuotaRemaining) {
    return nil, false
	}
	return o.QuotaRemaining, true
}

// HasQuotaRemaining returns a boolean if a field has been set.
func (o *AccountQuota) HasQuotaRemaining() bool {
	if o != nil && !isNil(o.QuotaRemaining) {
		return true
	}

	return false
}

// SetQuotaRemaining gets a reference to the given float32 and assigns it to the QuotaRemaining field.
func (o *AccountQuota) SetQuotaRemaining(v float32) {
	o.QuotaRemaining = &v
}

// GetQuotaTotal returns the QuotaTotal field value if set, zero value otherwise.
func (o *AccountQuota) GetQuotaTotal() float32 {
	if o == nil || isNil(o.QuotaTotal) {
		var ret float32
		return ret
	}
	return *o.QuotaTotal
}

// GetQuotaTotalOk returns a tuple with the QuotaTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountQuota) GetQuotaTotalOk() (*float32, bool) {
	if o == nil || isNil(o.QuotaTotal) {
    return nil, false
	}
	return o.QuotaTotal, true
}

// HasQuotaTotal returns a boolean if a field has been set.
func (o *AccountQuota) HasQuotaTotal() bool {
	if o != nil && !isNil(o.QuotaTotal) {
		return true
	}

	return false
}

// SetQuotaTotal gets a reference to the given float32 and assigns it to the QuotaTotal field.
func (o *AccountQuota) SetQuotaTotal(v float32) {
	o.QuotaTotal = &v
}

// GetQuotaUsed returns the QuotaUsed field value if set, zero value otherwise.
func (o *AccountQuota) GetQuotaUsed() float32 {
	if o == nil || isNil(o.QuotaUsed) {
		var ret float32
		return ret
	}
	return *o.QuotaUsed
}

// GetQuotaUsedOk returns a tuple with the QuotaUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountQuota) GetQuotaUsedOk() (*float32, bool) {
	if o == nil || isNil(o.QuotaUsed) {
    return nil, false
	}
	return o.QuotaUsed, true
}

// HasQuotaUsed returns a boolean if a field has been set.
func (o *AccountQuota) HasQuotaUsed() bool {
	if o != nil && !isNil(o.QuotaUsed) {
		return true
	}

	return false
}

// SetQuotaUsed gets a reference to the given float32 and assigns it to the QuotaUsed field.
func (o *AccountQuota) SetQuotaUsed(v float32) {
	o.QuotaUsed = &v
}

func (o AccountQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.QuotaRemaining) {
		toSerialize["quotaRemaining"] = o.QuotaRemaining
	}
	if !isNil(o.QuotaTotal) {
		toSerialize["quotaTotal"] = o.QuotaTotal
	}
	if !isNil(o.QuotaUsed) {
		toSerialize["quotaUsed"] = o.QuotaUsed
	}
	return json.Marshal(toSerialize)
}

type NullableAccountQuota struct {
	value *AccountQuota
	isSet bool
}

func (v NullableAccountQuota) Get() *AccountQuota {
	return v.value
}

func (v *NullableAccountQuota) Set(val *AccountQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountQuota(val *AccountQuota) *NullableAccountQuota {
	return &NullableAccountQuota{value: val, isSet: true}
}

func (v NullableAccountQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


