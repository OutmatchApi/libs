openapi: 3.0.3
info:
  description: Smooth API
  title: Smooth API
  version: 0.0.1
servers:
- url: http://localhost:8000
tags:
- description: Operations about user
  name: user
- description: apiApp
  name: apiApp
paths:
  /user:
    post:
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
      summary: Create user
      tags:
      - user
  /user/{id}:
    put:
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - description: name that need to be deleted
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPutRequest'
        description: Update an existent user in the store
      responses:
        default:
          description: successful operation
      summary: Update user
      tags:
      - user
  /apiApp:
    post:
      description: Create an api app for the authenticated user
      operationId: createApiApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAppRequest'
        description: Created api app object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApp'
          description: successful operation
      summary: Create api app
      tags:
      - apiApp
  /apiApp/{id}/release:
    post:
      description: Create an api app release
      operationId: createApiAppRelease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseRequest'
        description: Created release object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
          description: successful operation
      summary: Create api app release
      tags:
      - apiApp
  /apiApp/{id}/release/{id}/sdk:
    post:
      description: Generate sdks for a relase
      operationId: createApiAppReleaseSdks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdkRequest'
        description: Created sdks objects
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkResponse'
          description: successful operation
      summary: Generate sdks for a relase
      tags:
      - apiApp
components:
  schemas:
    UserPutRequest:
      example:
        firstName: John
        lastName: James
        company: My Company
      properties:
        firstName:
          example: John
          type: string
        lastName:
          example: James
          type: string
        company:
          example: My Company
          type: string
      type: object
    User:
      example:
        firstName: John
        lastName: James
        company: My Company
        id: 0000-0000-0000-0000
        email: john@email.com
      properties:
        id:
          example: 0000-0000-0000-0000
          format: string
          type: string
        email:
          example: john@email.com
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: James
          type: string
        company:
          example: My Company
          type: string
      type: object
    ApiAppRequest:
      example:
        name: My Api
      properties:
        name:
          example: My Api
          type: string
      type: object
    ApiApp:
      example:
        name: My Api
        id: 0000-0000-0000-0000
      properties:
        id:
          example: 0000-0000-0000-0000
          format: string
          type: string
        name:
          example: My Api
          type: string
      type: object
    Spec:
      example:
        specType: openapi 3.0.3
        docsLink: https://linktodocs.com
        link: https://linktoschema.com
        description: my api description
        logo:
          altText: my logo
          url: https://linktoschema.com
        id: 0000-0000-0000-0000
        title: my api
        version: 1.0.0
      properties:
        id:
          example: 0000-0000-0000-0000
          format: string
          type: string
        specType:
          example: openapi 3.0.3
          format: string
          type: string
        link:
          example: https://linktoschema.com
          format: string
          type: string
        title:
          example: my api
          format: string
          type: string
        description:
          example: my api description
          format: string
          type: string
        version:
          example: 1.0.0
          format: string
          type: string
        docsLink:
          example: https://linktodocs.com
          format: string
          type: string
        logo:
          $ref: '#/components/schemas/Logo'
      type: object
    Logo:
      example:
        altText: my logo
        url: https://linktoschema.com
      properties:
        url:
          example: https://linktoschema.com
          format: string
          type: string
        altText:
          example: my logo
          format: string
          type: string
      type: object
    ReleaseRequest:
      example:
        specString: a json/yaml open api spec
      properties:
        specString:
          example: a json/yaml open api spec
          format: string
          type: string
      type: object
    Release:
      example:
        id: 0000-0000-0000-0000
        spec:
          specType: openapi 3.0.3
          docsLink: https://linktodocs.com
          link: https://linktoschema.com
          description: my api description
          logo:
            altText: my logo
            url: https://linktoschema.com
          id: 0000-0000-0000-0000
          title: my api
          version: 1.0.0
      properties:
        id:
          example: 0000-0000-0000-0000
          format: string
          type: string
        spec:
          $ref: '#/components/schemas/Spec'
      type: object
    Language:
      enum:
      - go
      - javascript
      - java
      - ruby
      - php
      - python
      - rust
      - csharp
      - kotlin
      - cli
      type: string
    Sdk:
      example:
        codeUrl: https://linktocode.com
        packageUrl: https://linktopackage.com
        language: null
        sdkVersion: 1.0.0
        id: 0000-0000-0000-0000
      properties:
        id:
          example: 0000-0000-0000-0000
          format: string
          type: string
        language:
          $ref: '#/components/schemas/Language'
        sdkVersion:
          example: 1.0.0
          format: string
          type: string
        codeUrl:
          example: https://linktocode.com
          format: string
          type: string
        packageUrl:
          example: https://linktopackage.com
          format: string
          type: string
      type: object
    SdkRequest:
      example:
        languages:
        - null
        - null
      properties:
        languages:
          items:
            $ref: '#/components/schemas/Language'
          type: array
          uniqueItems: true
      type: object
    SdkResponse:
      example:
        sdks:
        - codeUrl: https://linktocode.com
          packageUrl: https://linktopackage.com
          language: null
          sdkVersion: 1.0.0
          id: 0000-0000-0000-0000
        - codeUrl: https://linktocode.com
          packageUrl: https://linktopackage.com
          language: null
          sdkVersion: 1.0.0
          id: 0000-0000-0000-0000
      properties:
        sdks:
          items:
            $ref: '#/components/schemas/Sdk'
          type: array
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
