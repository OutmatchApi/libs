/*
api.video

Testing ChaptersApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package testing-api-video

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_testing-api-video_ChaptersApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test ChaptersApiService DELETEVideosVideoIdChaptersLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.ChaptersApi.DELETEVideosVideoIdChaptersLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ChaptersApiService GETVideosVideoIdChapters", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string

        resp, httpRes, err := apiClient.ChaptersApi.GETVideosVideoIdChapters(context.Background(), videoId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ChaptersApiService GETVideosVideoIdChaptersLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.ChaptersApi.GETVideosVideoIdChaptersLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ChaptersApiService POSTVideosVideoIdChaptersLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.ChaptersApi.POSTVideosVideoIdChaptersLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
