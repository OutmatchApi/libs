/*
api.video

api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testing-api-video

import (
	"encoding/json"
)

// LiveStreamSessionDevice What type of device the user is on when in the live stream session.
type LiveStreamSessionDevice struct {
	// The specific model of the device, if known.
	Model *string `json:"model,omitempty"`
	// What the type is like desktop, laptop, mobile.
	Type *string `json:"type,omitempty"`
	// If known, what the brand of the device is, like Apple, Dell, etc.
	Vendor *string `json:"vendor,omitempty"`
}

// NewLiveStreamSessionDevice instantiates a new LiveStreamSessionDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamSessionDevice() *LiveStreamSessionDevice {
	this := LiveStreamSessionDevice{}
	return &this
}

// NewLiveStreamSessionDeviceWithDefaults instantiates a new LiveStreamSessionDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamSessionDeviceWithDefaults() *LiveStreamSessionDevice {
	this := LiveStreamSessionDevice{}
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *LiveStreamSessionDevice) GetModel() string {
	if o == nil || isNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionDevice) GetModelOk() (*string, bool) {
	if o == nil || isNil(o.Model) {
    return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *LiveStreamSessionDevice) HasModel() bool {
	if o != nil && !isNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *LiveStreamSessionDevice) SetModel(v string) {
	o.Model = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LiveStreamSessionDevice) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionDevice) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LiveStreamSessionDevice) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LiveStreamSessionDevice) SetType(v string) {
	o.Type = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *LiveStreamSessionDevice) GetVendor() string {
	if o == nil || isNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamSessionDevice) GetVendorOk() (*string, bool) {
	if o == nil || isNil(o.Vendor) {
    return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *LiveStreamSessionDevice) HasVendor() bool {
	if o != nil && !isNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *LiveStreamSessionDevice) SetVendor(v string) {
	o.Vendor = &v
}

func (o LiveStreamSessionDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamSessionDevice struct {
	value *LiveStreamSessionDevice
	isSet bool
}

func (v NullableLiveStreamSessionDevice) Get() *LiveStreamSessionDevice {
	return v.value
}

func (v *NullableLiveStreamSessionDevice) Set(val *LiveStreamSessionDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamSessionDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamSessionDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamSessionDevice(val *LiveStreamSessionDevice) *NullableLiveStreamSessionDevice {
	return &NullableLiveStreamSessionDevice{value: val, isSet: true}
}

func (v NullableLiveStreamSessionDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamSessionDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


