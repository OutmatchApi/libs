/*
api.video

api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testing-api-video

import (
	"encoding/json"
)

// VideoSession struct for VideoSession
type VideoSession struct {
	Client *VideoSessionClient `json:"client,omitempty"`
	Device *VideoSessionDevice `json:"device,omitempty"`
	Location *VideoSessionLocation `json:"location,omitempty"`
	Os *VideoSessionOs `json:"os,omitempty"`
	Referrer *VideoSessionReferrer `json:"referrer,omitempty"`
	Session *VideoSessionSession `json:"session,omitempty"`
}

// NewVideoSession instantiates a new VideoSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoSession() *VideoSession {
	this := VideoSession{}
	return &this
}

// NewVideoSessionWithDefaults instantiates a new VideoSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoSessionWithDefaults() *VideoSession {
	this := VideoSession{}
	return &this
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *VideoSession) GetClient() VideoSessionClient {
	if o == nil || isNil(o.Client) {
		var ret VideoSessionClient
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSession) GetClientOk() (*VideoSessionClient, bool) {
	if o == nil || isNil(o.Client) {
    return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *VideoSession) HasClient() bool {
	if o != nil && !isNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given VideoSessionClient and assigns it to the Client field.
func (o *VideoSession) SetClient(v VideoSessionClient) {
	o.Client = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *VideoSession) GetDevice() VideoSessionDevice {
	if o == nil || isNil(o.Device) {
		var ret VideoSessionDevice
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSession) GetDeviceOk() (*VideoSessionDevice, bool) {
	if o == nil || isNil(o.Device) {
    return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *VideoSession) HasDevice() bool {
	if o != nil && !isNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given VideoSessionDevice and assigns it to the Device field.
func (o *VideoSession) SetDevice(v VideoSessionDevice) {
	o.Device = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *VideoSession) GetLocation() VideoSessionLocation {
	if o == nil || isNil(o.Location) {
		var ret VideoSessionLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSession) GetLocationOk() (*VideoSessionLocation, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *VideoSession) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given VideoSessionLocation and assigns it to the Location field.
func (o *VideoSession) SetLocation(v VideoSessionLocation) {
	o.Location = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *VideoSession) GetOs() VideoSessionOs {
	if o == nil || isNil(o.Os) {
		var ret VideoSessionOs
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSession) GetOsOk() (*VideoSessionOs, bool) {
	if o == nil || isNil(o.Os) {
    return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *VideoSession) HasOs() bool {
	if o != nil && !isNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given VideoSessionOs and assigns it to the Os field.
func (o *VideoSession) SetOs(v VideoSessionOs) {
	o.Os = &v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *VideoSession) GetReferrer() VideoSessionReferrer {
	if o == nil || isNil(o.Referrer) {
		var ret VideoSessionReferrer
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSession) GetReferrerOk() (*VideoSessionReferrer, bool) {
	if o == nil || isNil(o.Referrer) {
    return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *VideoSession) HasReferrer() bool {
	if o != nil && !isNil(o.Referrer) {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given VideoSessionReferrer and assigns it to the Referrer field.
func (o *VideoSession) SetReferrer(v VideoSessionReferrer) {
	o.Referrer = &v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *VideoSession) GetSession() VideoSessionSession {
	if o == nil || isNil(o.Session) {
		var ret VideoSessionSession
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoSession) GetSessionOk() (*VideoSessionSession, bool) {
	if o == nil || isNil(o.Session) {
    return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *VideoSession) HasSession() bool {
	if o != nil && !isNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given VideoSessionSession and assigns it to the Session field.
func (o *VideoSession) SetSession(v VideoSessionSession) {
	o.Session = &v
}

func (o VideoSession) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !isNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !isNil(o.Referrer) {
		toSerialize["referrer"] = o.Referrer
	}
	if !isNil(o.Session) {
		toSerialize["session"] = o.Session
	}
	return json.Marshal(toSerialize)
}

type NullableVideoSession struct {
	value *VideoSession
	isSet bool
}

func (v NullableVideoSession) Get() *VideoSession {
	return v.value
}

func (v *NullableVideoSession) Set(val *VideoSession) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoSession) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoSession(val *VideoSession) *NullableVideoSession {
	return &NullableVideoSession{value: val, isSet: true}
}

func (v NullableVideoSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


