/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LiveStream {
    #[serde(rename = "assets", skip_serializing_if = "Option::is_none")]
    pub assets: Option<Box<crate::models::LiveStreamAssets>>,
    /// Whether or not you are broadcasting the live video you recorded for others to see. True means you are broadcasting to viewers, false means you are not.
    #[serde(rename = "broadcasting", skip_serializing_if = "Option::is_none")]
    pub broadcasting: Option<bool>,
    /// The unique identifier for the live stream. Live stream IDs begin with \"li.\"
    #[serde(rename = "liveStreamId", skip_serializing_if = "Option::is_none")]
    pub live_stream_id: Option<String>,
    /// The name of your live stream.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The unique identifier for the player.
    #[serde(rename = "playerId", skip_serializing_if = "Option::is_none")]
    pub player_id: Option<String>,
    /// BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
    #[serde(rename = "public", skip_serializing_if = "Option::is_none")]
    pub public: Option<bool>,
    /// Whether you are recording or not.
    #[serde(rename = "record", skip_serializing_if = "Option::is_none")]
    pub record: Option<bool>,
    /// The unique, private stream key that you use to begin streaming.
    #[serde(rename = "streamKey", skip_serializing_if = "Option::is_none")]
    pub stream_key: Option<String>,
}

impl LiveStream {
    pub fn new() -> LiveStream {
        LiveStream {
            assets: None,
            broadcasting: None,
            live_stream_id: None,
            name: None,
            player_id: None,
            public: None,
            record: None,
            stream_key: None,
        }
    }
}


