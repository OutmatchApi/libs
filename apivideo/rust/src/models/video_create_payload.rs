/*
 * api.video
 *
 * api.video is an API that encodes on the go to facilitate immediate playback, enhancing viewer streaming experiences across multiple devices and platforms. You can stream live or on-demand online videos within minutes.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VideoCreatePayload {
    /// A brief description of your video.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A list of key value pairs that you use to provide metadata for your video. These pairs can be made dynamic, allowing you to segment your audience. Read more on [dynamic metadata](https://api.video/blog/endpoints/dynamic-metadata).
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Vec<crate::models::Metadata>>,
    /// Enables mp4 version in addition to streamed version.
    #[serde(rename = "mp4Support", skip_serializing_if = "Option::is_none")]
    pub mp4_support: Option<bool>,
    /// Indicates if your video is a 360/immersive video.
    #[serde(rename = "panoramic", skip_serializing_if = "Option::is_none")]
    pub panoramic: Option<bool>,
    /// The unique identification number for your video player.
    #[serde(rename = "playerId", skip_serializing_if = "Option::is_none")]
    pub player_id: Option<String>,
    /// Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).
    #[serde(rename = "public", skip_serializing_if = "Option::is_none")]
    pub public: Option<bool>,
    /// The API uses ISO-8601 format for time, and includes 3 places for milliseconds.
    #[serde(rename = "publishedAt", skip_serializing_if = "Option::is_none")]
    pub published_at: Option<String>,
    /// If you add a video already on the web, this is where you enter the url for the video.
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
    /// A list of tags you want to use to describe your video.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// The title of your new video.
    #[serde(rename = "title")]
    pub title: String,
}

impl VideoCreatePayload {
    pub fn new(title: String) -> VideoCreatePayload {
        VideoCreatePayload {
            description: None,
            metadata: None,
            mp4_support: None,
            panoramic: None,
            player_id: None,
            public: None,
            published_at: None,
            source: None,
            tags: None,
            title,
        }
    }
}


