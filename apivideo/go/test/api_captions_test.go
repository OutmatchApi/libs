/*
api.video

Testing CaptionsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package apivideo

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_apivideo_CaptionsApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test CaptionsApiService DELETEVideosVideoIdCaptionsLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.CaptionsApi.DELETEVideosVideoIdCaptionsLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test CaptionsApiService GETVideosVideoIdCaptions", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string

        resp, httpRes, err := apiClient.CaptionsApi.GETVideosVideoIdCaptions(context.Background(), videoId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test CaptionsApiService GETVideosVideoIdCaptionsLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.CaptionsApi.GETVideosVideoIdCaptionsLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test CaptionsApiService PATCHVideosVideoIdCaptionsLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.CaptionsApi.PATCHVideosVideoIdCaptionsLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test CaptionsApiService POSTVideosVideoIdCaptionsLanguage", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var videoId string
        var language string

        resp, httpRes, err := apiClient.CaptionsApi.POSTVideosVideoIdCaptionsLanguage(context.Background(), videoId, language).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
