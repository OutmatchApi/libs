/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.outmatchapi.slack

import com.outmatchapi.slack.ConversationObjectDisplayCounts
import com.outmatchapi.slack.ConversationObjectParentConversationInner
import com.outmatchapi.slack.ConversationObjectSharesInner
import com.outmatchapi.slack.ObjsChannelLatestInner
import com.outmatchapi.slack.ObjsChannelPurpose

import com.squareup.moshi.Json

/**
 * 
 *
 * @param created 
 * @param creator 
 * @param id 
 * @param isArchived 
 * @param isChannel 
 * @param isGeneral 
 * @param isGroup 
 * @param isIm 
 * @param isMpim 
 * @param isOrgShared 
 * @param isPrivate 
 * @param isShared 
 * @param name 
 * @param nameNormalized 
 * @param purpose 
 * @param topic 
 * @param acceptedUser 
 * @param connectedTeamIds 
 * @param conversationHostId 
 * @param displayCounts 
 * @param internalTeamIds 
 * @param isExtShared 
 * @param isFrozen 
 * @param isMember 
 * @param isMoved 
 * @param isNonThreadable 
 * @param isOpen 
 * @param isPendingExtShared 
 * @param isReadOnly 
 * @param isStarred 
 * @param isThreadOnly 
 * @param lastRead 
 * @param latest 
 * @param members 
 * @param numMembers 
 * @param parentConversation 
 * @param pendingConnectedTeamIds 
 * @param pendingShared 
 * @param pinCount 
 * @param previousNames 
 * @param priority 
 * @param sharedTeamIds 
 * @param shares 
 * @param timezoneCount 
 * @param unlinked 
 * @param unreadCount 
 * @param unreadCountDisplay 
 * @param user 
 * @param version 
 */


data class ConversationMPIMObject (

    @Json(name = "created")
    val created: kotlin.Int,

    @Json(name = "creator")
    val creator: kotlin.String,

    @Json(name = "id")
    val id: kotlin.String,

    @Json(name = "is_archived")
    val isArchived: kotlin.Boolean,

    @Json(name = "is_channel")
    val isChannel: kotlin.Boolean,

    @Json(name = "is_general")
    val isGeneral: kotlin.Boolean,

    @Json(name = "is_group")
    val isGroup: kotlin.Boolean,

    @Json(name = "is_im")
    val isIm: kotlin.Boolean,

    @Json(name = "is_mpim")
    val isMpim: ConversationMPIMObject.IsMpim,

    @Json(name = "is_org_shared")
    val isOrgShared: kotlin.Boolean,

    @Json(name = "is_private")
    val isPrivate: kotlin.Boolean,

    @Json(name = "is_shared")
    val isShared: kotlin.Boolean,

    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "name_normalized")
    val nameNormalized: kotlin.String,

    @Json(name = "purpose")
    val purpose: ObjsChannelPurpose,

    @Json(name = "topic")
    val topic: ObjsChannelPurpose,

    @Json(name = "accepted_user")
    val acceptedUser: kotlin.String? = null,

    @Json(name = "connected_team_ids")
    val connectedTeamIds: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "conversation_host_id")
    val conversationHostId: kotlin.String? = null,

    @Json(name = "display_counts")
    val displayCounts: ConversationObjectDisplayCounts? = null,

    @Json(name = "internal_team_ids")
    val internalTeamIds: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "is_ext_shared")
    val isExtShared: kotlin.Boolean? = null,

    @Json(name = "is_frozen")
    val isFrozen: kotlin.Boolean? = null,

    @Json(name = "is_member")
    val isMember: kotlin.Boolean? = null,

    @Json(name = "is_moved")
    val isMoved: kotlin.Int? = null,

    @Json(name = "is_non_threadable")
    val isNonThreadable: kotlin.Boolean? = null,

    @Json(name = "is_open")
    val isOpen: kotlin.Boolean? = null,

    @Json(name = "is_pending_ext_shared")
    val isPendingExtShared: kotlin.Boolean? = null,

    @Json(name = "is_read_only")
    val isReadOnly: kotlin.Boolean? = null,

    @Json(name = "is_starred")
    val isStarred: kotlin.Boolean? = null,

    @Json(name = "is_thread_only")
    val isThreadOnly: kotlin.Boolean? = null,

    @Json(name = "last_read")
    val lastRead: kotlin.String? = null,

    @Json(name = "latest")
    val latest: kotlin.collections.List<ObjsChannelLatestInner>? = null,

    @Json(name = "members")
    val members: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "num_members")
    val numMembers: kotlin.Int? = null,

    @Json(name = "parent_conversation")
    val parentConversation: kotlin.collections.List<ConversationObjectParentConversationInner>? = null,

    @Json(name = "pending_connected_team_ids")
    val pendingConnectedTeamIds: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "pending_shared")
    val pendingShared: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "pin_count")
    val pinCount: kotlin.Int? = null,

    @Json(name = "previous_names")
    val previousNames: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "priority")
    val priority: java.math.BigDecimal? = null,

    @Json(name = "shared_team_ids")
    val sharedTeamIds: kotlin.collections.Set<kotlin.String>? = null,

    @Json(name = "shares")
    val shares: kotlin.collections.Set<ConversationObjectSharesInner>? = null,

    @Json(name = "timezone_count")
    val timezoneCount: kotlin.Int? = null,

    @Json(name = "unlinked")
    val unlinked: kotlin.Int? = null,

    @Json(name = "unread_count")
    val unreadCount: kotlin.Int? = null,

    @Json(name = "unread_count_display")
    val unreadCountDisplay: kotlin.Int? = null,

    @Json(name = "user")
    val user: kotlin.String? = null,

    @Json(name = "version")
    val version: kotlin.Int? = null

) {

    /**
     * 
     *
     * Values: `true`
     */
    enum class IsMpim(val value: kotlin.Boolean) {
        @Json(name = ""true"") `true`("true");
    }
}

