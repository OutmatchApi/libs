/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.outmatchapi.slack

import com.outmatchapi.slack.DefsOkFalse

import com.squareup.moshi.Json

/**
 * Schema for error response chat.scheduleMessage method
 *
 * @param error 
 * @param ok 
 * @param callstack Note: PHP callstack is only visible in dev/qa
 */


data class ChatScheduleMessageErrorSchema (

    @Json(name = "error")
    val error: ChatScheduleMessageErrorSchema.Error,

    @Json(name = "ok")
    val ok: DefsOkFalse,

    /* Note: PHP callstack is only visible in dev/qa */
    @Json(name = "callstack")
    val callstack: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: invalidTime,timeInPast,timeTooFar,channelNotFound,notInChannel,isArchived,msgTooLong,noText,restrictedAction,restrictedActionReadOnlyChannel,restrictedActionThreadOnlyChannel,restrictedActionNonThreadableChannel,tooManyAttachments,rateLimited,notAuthed,invalidAuth,accountInactive,tokenRevoked,noPermission,orgLoginRequired,ekmAccessDenied,missingScope,invalidArguments,invalidArgName,invalidCharset,invalidFormData,invalidPostType,missingPostType,teamAddedToOrg,invalidJson,jsonNotObject,requestTimeout,upgradeRequired,fatalError
     */
    enum class Error(val value: kotlin.String) {
        @Json(name = "invalid_time") invalidTime("invalid_time"),
        @Json(name = "time_in_past") timeInPast("time_in_past"),
        @Json(name = "time_too_far") timeTooFar("time_too_far"),
        @Json(name = "channel_not_found") channelNotFound("channel_not_found"),
        @Json(name = "not_in_channel") notInChannel("not_in_channel"),
        @Json(name = "is_archived") isArchived("is_archived"),
        @Json(name = "msg_too_long") msgTooLong("msg_too_long"),
        @Json(name = "no_text") noText("no_text"),
        @Json(name = "restricted_action") restrictedAction("restricted_action"),
        @Json(name = "restricted_action_read_only_channel") restrictedActionReadOnlyChannel("restricted_action_read_only_channel"),
        @Json(name = "restricted_action_thread_only_channel") restrictedActionThreadOnlyChannel("restricted_action_thread_only_channel"),
        @Json(name = "restricted_action_non_threadable_channel") restrictedActionNonThreadableChannel("restricted_action_non_threadable_channel"),
        @Json(name = "too_many_attachments") tooManyAttachments("too_many_attachments"),
        @Json(name = "rate_limited") rateLimited("rate_limited"),
        @Json(name = "not_authed") notAuthed("not_authed"),
        @Json(name = "invalid_auth") invalidAuth("invalid_auth"),
        @Json(name = "account_inactive") accountInactive("account_inactive"),
        @Json(name = "token_revoked") tokenRevoked("token_revoked"),
        @Json(name = "no_permission") noPermission("no_permission"),
        @Json(name = "org_login_required") orgLoginRequired("org_login_required"),
        @Json(name = "ekm_access_denied") ekmAccessDenied("ekm_access_denied"),
        @Json(name = "missing_scope") missingScope("missing_scope"),
        @Json(name = "invalid_arguments") invalidArguments("invalid_arguments"),
        @Json(name = "invalid_arg_name") invalidArgName("invalid_arg_name"),
        @Json(name = "invalid_charset") invalidCharset("invalid_charset"),
        @Json(name = "invalid_form_data") invalidFormData("invalid_form_data"),
        @Json(name = "invalid_post_type") invalidPostType("invalid_post_type"),
        @Json(name = "missing_post_type") missingPostType("missing_post_type"),
        @Json(name = "team_added_to_org") teamAddedToOrg("team_added_to_org"),
        @Json(name = "invalid_json") invalidJson("invalid_json"),
        @Json(name = "json_not_object") jsonNotObject("json_not_object"),
        @Json(name = "request_timeout") requestTimeout("request_timeout"),
        @Json(name = "upgrade_required") upgradeRequired("upgrade_required"),
        @Json(name = "fatal_error") fatalError("fatal_error");
    }
}

