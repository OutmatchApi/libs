/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsSubteamPrefs struct for ObjsSubteamPrefs
type ObjsSubteamPrefs struct {
	Channels []string `json:"channels"`
	Groups []string `json:"groups"`
}

// NewObjsSubteamPrefs instantiates a new ObjsSubteamPrefs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsSubteamPrefs(channels []string, groups []string) *ObjsSubteamPrefs {
	this := ObjsSubteamPrefs{}
	this.Channels = channels
	this.Groups = groups
	return &this
}

// NewObjsSubteamPrefsWithDefaults instantiates a new ObjsSubteamPrefs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsSubteamPrefsWithDefaults() *ObjsSubteamPrefs {
	this := ObjsSubteamPrefs{}
	return &this
}

// GetChannels returns the Channels field value
func (o *ObjsSubteamPrefs) GetChannels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *ObjsSubteamPrefs) GetChannelsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Channels, true
}

// SetChannels sets field value
func (o *ObjsSubteamPrefs) SetChannels(v []string) {
	o.Channels = v
}

// GetGroups returns the Groups field value
func (o *ObjsSubteamPrefs) GetGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *ObjsSubteamPrefs) GetGroupsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ObjsSubteamPrefs) SetGroups(v []string) {
	o.Groups = v
}

func (o ObjsSubteamPrefs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channels"] = o.Channels
	}
	if true {
		toSerialize["groups"] = o.Groups
	}
	return json.Marshal(toSerialize)
}

type NullableObjsSubteamPrefs struct {
	value *ObjsSubteamPrefs
	isSet bool
}

func (v NullableObjsSubteamPrefs) Get() *ObjsSubteamPrefs {
	return v.value
}

func (v *NullableObjsSubteamPrefs) Set(val *ObjsSubteamPrefs) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsSubteamPrefs) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsSubteamPrefs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsSubteamPrefs(val *ObjsSubteamPrefs) *NullableObjsSubteamPrefs {
	return &NullableObjsSubteamPrefs{value: val, isSet: true}
}

func (v NullableObjsSubteamPrefs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsSubteamPrefs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


