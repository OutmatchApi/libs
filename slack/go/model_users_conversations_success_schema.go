/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// UsersConversationsSuccessSchema Schema for successful response from users.conversations method. Returned conversation objects do not include `num_members` or `is_member`
type UsersConversationsSuccessSchema struct {
	Channels [][]ObjsConversationInner `json:"channels"`
	Ok DefsOkTrue `json:"ok"`
	ResponseMetadata *AdminConversationsGetTeamsSchemaResponseMetadata `json:"response_metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UsersConversationsSuccessSchema UsersConversationsSuccessSchema

// NewUsersConversationsSuccessSchema instantiates a new UsersConversationsSuccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersConversationsSuccessSchema(channels [][]ObjsConversationInner, ok DefsOkTrue) *UsersConversationsSuccessSchema {
	this := UsersConversationsSuccessSchema{}
	this.Channels = channels
	this.Ok = ok
	return &this
}

// NewUsersConversationsSuccessSchemaWithDefaults instantiates a new UsersConversationsSuccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersConversationsSuccessSchemaWithDefaults() *UsersConversationsSuccessSchema {
	this := UsersConversationsSuccessSchema{}
	return &this
}

// GetChannels returns the Channels field value
func (o *UsersConversationsSuccessSchema) GetChannels() [][]ObjsConversationInner {
	if o == nil {
		var ret [][]ObjsConversationInner
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *UsersConversationsSuccessSchema) GetChannelsOk() ([][]ObjsConversationInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.Channels, true
}

// SetChannels sets field value
func (o *UsersConversationsSuccessSchema) SetChannels(v [][]ObjsConversationInner) {
	o.Channels = v
}

// GetOk returns the Ok field value
func (o *UsersConversationsSuccessSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *UsersConversationsSuccessSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *UsersConversationsSuccessSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetResponseMetadata returns the ResponseMetadata field value if set, zero value otherwise.
func (o *UsersConversationsSuccessSchema) GetResponseMetadata() AdminConversationsGetTeamsSchemaResponseMetadata {
	if o == nil || isNil(o.ResponseMetadata) {
		var ret AdminConversationsGetTeamsSchemaResponseMetadata
		return ret
	}
	return *o.ResponseMetadata
}

// GetResponseMetadataOk returns a tuple with the ResponseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersConversationsSuccessSchema) GetResponseMetadataOk() (*AdminConversationsGetTeamsSchemaResponseMetadata, bool) {
	if o == nil || isNil(o.ResponseMetadata) {
    return nil, false
	}
	return o.ResponseMetadata, true
}

// HasResponseMetadata returns a boolean if a field has been set.
func (o *UsersConversationsSuccessSchema) HasResponseMetadata() bool {
	if o != nil && !isNil(o.ResponseMetadata) {
		return true
	}

	return false
}

// SetResponseMetadata gets a reference to the given AdminConversationsGetTeamsSchemaResponseMetadata and assigns it to the ResponseMetadata field.
func (o *UsersConversationsSuccessSchema) SetResponseMetadata(v AdminConversationsGetTeamsSchemaResponseMetadata) {
	o.ResponseMetadata = &v
}

func (o UsersConversationsSuccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channels"] = o.Channels
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if !isNil(o.ResponseMetadata) {
		toSerialize["response_metadata"] = o.ResponseMetadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UsersConversationsSuccessSchema) UnmarshalJSON(bytes []byte) (err error) {
	varUsersConversationsSuccessSchema := _UsersConversationsSuccessSchema{}

	if err = json.Unmarshal(bytes, &varUsersConversationsSuccessSchema); err == nil {
		*o = UsersConversationsSuccessSchema(varUsersConversationsSuccessSchema)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "channels")
		delete(additionalProperties, "ok")
		delete(additionalProperties, "response_metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUsersConversationsSuccessSchema struct {
	value *UsersConversationsSuccessSchema
	isSet bool
}

func (v NullableUsersConversationsSuccessSchema) Get() *UsersConversationsSuccessSchema {
	return v.value
}

func (v *NullableUsersConversationsSuccessSchema) Set(val *UsersConversationsSuccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersConversationsSuccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersConversationsSuccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersConversationsSuccessSchema(val *UsersConversationsSuccessSchema) *NullableUsersConversationsSuccessSchema {
	return &NullableUsersConversationsSuccessSchema{value: val, isSet: true}
}

func (v NullableUsersConversationsSuccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersConversationsSuccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


