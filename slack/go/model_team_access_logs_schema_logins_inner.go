/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// TeamAccessLogsSchemaLoginsInner struct for TeamAccessLogsSchemaLoginsInner
type TeamAccessLogsSchemaLoginsInner struct {
	Count int32 `json:"count"`
	Country NullableString `json:"country"`
	DateFirst int32 `json:"date_first"`
	DateLast int32 `json:"date_last"`
	Ip NullableString `json:"ip"`
	Isp NullableString `json:"isp"`
	Region NullableString `json:"region"`
	UserAgent string `json:"user_agent"`
	UserId string `json:"user_id"`
	Username string `json:"username"`
}

// NewTeamAccessLogsSchemaLoginsInner instantiates a new TeamAccessLogsSchemaLoginsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamAccessLogsSchemaLoginsInner(count int32, country NullableString, dateFirst int32, dateLast int32, ip NullableString, isp NullableString, region NullableString, userAgent string, userId string, username string) *TeamAccessLogsSchemaLoginsInner {
	this := TeamAccessLogsSchemaLoginsInner{}
	this.Count = count
	this.Country = country
	this.DateFirst = dateFirst
	this.DateLast = dateLast
	this.Ip = ip
	this.Isp = isp
	this.Region = region
	this.UserAgent = userAgent
	this.UserId = userId
	this.Username = username
	return &this
}

// NewTeamAccessLogsSchemaLoginsInnerWithDefaults instantiates a new TeamAccessLogsSchemaLoginsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamAccessLogsSchemaLoginsInnerWithDefaults() *TeamAccessLogsSchemaLoginsInner {
	this := TeamAccessLogsSchemaLoginsInner{}
	return &this
}

// GetCount returns the Count field value
func (o *TeamAccessLogsSchemaLoginsInner) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *TeamAccessLogsSchemaLoginsInner) GetCountOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetCount(v int32) {
	o.Count = v
}

// GetCountry returns the Country field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}

	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetCountryOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// SetCountry sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetCountry(v string) {
	o.Country.Set(&v)
}

// GetDateFirst returns the DateFirst field value
func (o *TeamAccessLogsSchemaLoginsInner) GetDateFirst() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DateFirst
}

// GetDateFirstOk returns a tuple with the DateFirst field value
// and a boolean to check if the value has been set.
func (o *TeamAccessLogsSchemaLoginsInner) GetDateFirstOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DateFirst, true
}

// SetDateFirst sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetDateFirst(v int32) {
	o.DateFirst = v
}

// GetDateLast returns the DateLast field value
func (o *TeamAccessLogsSchemaLoginsInner) GetDateLast() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DateLast
}

// GetDateLastOk returns a tuple with the DateLast field value
// and a boolean to check if the value has been set.
func (o *TeamAccessLogsSchemaLoginsInner) GetDateLastOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DateLast, true
}

// SetDateLast sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetDateLast(v int32) {
	o.DateLast = v
}

// GetIp returns the Ip field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetIp() string {
	if o == nil || o.Ip.Get() == nil {
		var ret string
		return ret
	}

	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetIpOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// SetIp sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetIp(v string) {
	o.Ip.Set(&v)
}

// GetIsp returns the Isp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetIsp() string {
	if o == nil || o.Isp.Get() == nil {
		var ret string
		return ret
	}

	return *o.Isp.Get()
}

// GetIspOk returns a tuple with the Isp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetIspOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Isp.Get(), o.Isp.IsSet()
}

// SetIsp sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetIsp(v string) {
	o.Isp.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamAccessLogsSchemaLoginsInner) GetRegionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetUserAgent returns the UserAgent field value
func (o *TeamAccessLogsSchemaLoginsInner) GetUserAgent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value
// and a boolean to check if the value has been set.
func (o *TeamAccessLogsSchemaLoginsInner) GetUserAgentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UserAgent, true
}

// SetUserAgent sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetUserAgent(v string) {
	o.UserAgent = v
}

// GetUserId returns the UserId field value
func (o *TeamAccessLogsSchemaLoginsInner) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *TeamAccessLogsSchemaLoginsInner) GetUserIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetUserId(v string) {
	o.UserId = v
}

// GetUsername returns the Username field value
func (o *TeamAccessLogsSchemaLoginsInner) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *TeamAccessLogsSchemaLoginsInner) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *TeamAccessLogsSchemaLoginsInner) SetUsername(v string) {
	o.Username = v
}

func (o TeamAccessLogsSchemaLoginsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["count"] = o.Count
	}
	if true {
		toSerialize["country"] = o.Country.Get()
	}
	if true {
		toSerialize["date_first"] = o.DateFirst
	}
	if true {
		toSerialize["date_last"] = o.DateLast
	}
	if true {
		toSerialize["ip"] = o.Ip.Get()
	}
	if true {
		toSerialize["isp"] = o.Isp.Get()
	}
	if true {
		toSerialize["region"] = o.Region.Get()
	}
	if true {
		toSerialize["user_agent"] = o.UserAgent
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableTeamAccessLogsSchemaLoginsInner struct {
	value *TeamAccessLogsSchemaLoginsInner
	isSet bool
}

func (v NullableTeamAccessLogsSchemaLoginsInner) Get() *TeamAccessLogsSchemaLoginsInner {
	return v.value
}

func (v *NullableTeamAccessLogsSchemaLoginsInner) Set(val *TeamAccessLogsSchemaLoginsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamAccessLogsSchemaLoginsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamAccessLogsSchemaLoginsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamAccessLogsSchemaLoginsInner(val *TeamAccessLogsSchemaLoginsInner) *NullableTeamAccessLogsSchemaLoginsInner {
	return &NullableTeamAccessLogsSchemaLoginsInner{value: val, isSet: true}
}

func (v NullableTeamAccessLogsSchemaLoginsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamAccessLogsSchemaLoginsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


