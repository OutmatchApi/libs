/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ConversationsOpenSuccessSchemaChannelInnerAnyOf struct for ConversationsOpenSuccessSchemaChannelInnerAnyOf
type ConversationsOpenSuccessSchemaChannelInnerAnyOf struct {
	Created *string `json:"created,omitempty"`
	Id string `json:"id"`
	IsIm *bool `json:"is_im,omitempty"`
	IsOpen *bool `json:"is_open,omitempty"`
	LastRead *string `json:"last_read,omitempty"`
	Latest *ObjsMessage `json:"latest,omitempty"`
	UnreadCount *float32 `json:"unread_count,omitempty"`
	UnreadCountDisplay *float32 `json:"unread_count_display,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewConversationsOpenSuccessSchemaChannelInnerAnyOf instantiates a new ConversationsOpenSuccessSchemaChannelInnerAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationsOpenSuccessSchemaChannelInnerAnyOf(id string) *ConversationsOpenSuccessSchemaChannelInnerAnyOf {
	this := ConversationsOpenSuccessSchemaChannelInnerAnyOf{}
	this.Id = id
	return &this
}

// NewConversationsOpenSuccessSchemaChannelInnerAnyOfWithDefaults instantiates a new ConversationsOpenSuccessSchemaChannelInnerAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationsOpenSuccessSchemaChannelInnerAnyOfWithDefaults() *ConversationsOpenSuccessSchemaChannelInnerAnyOf {
	this := ConversationsOpenSuccessSchemaChannelInnerAnyOf{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetCreated() string {
	if o == nil || isNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetCreatedOk() (*string, bool) {
	if o == nil || isNil(o.Created) {
    return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetCreated(v string) {
	o.Created = &v
}

// GetId returns the Id field value
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetId(v string) {
	o.Id = v
}

// GetIsIm returns the IsIm field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetIsIm() bool {
	if o == nil || isNil(o.IsIm) {
		var ret bool
		return ret
	}
	return *o.IsIm
}

// GetIsImOk returns a tuple with the IsIm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetIsImOk() (*bool, bool) {
	if o == nil || isNil(o.IsIm) {
    return nil, false
	}
	return o.IsIm, true
}

// HasIsIm returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasIsIm() bool {
	if o != nil && !isNil(o.IsIm) {
		return true
	}

	return false
}

// SetIsIm gets a reference to the given bool and assigns it to the IsIm field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetIsIm(v bool) {
	o.IsIm = &v
}

// GetIsOpen returns the IsOpen field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetIsOpen() bool {
	if o == nil || isNil(o.IsOpen) {
		var ret bool
		return ret
	}
	return *o.IsOpen
}

// GetIsOpenOk returns a tuple with the IsOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetIsOpenOk() (*bool, bool) {
	if o == nil || isNil(o.IsOpen) {
    return nil, false
	}
	return o.IsOpen, true
}

// HasIsOpen returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasIsOpen() bool {
	if o != nil && !isNil(o.IsOpen) {
		return true
	}

	return false
}

// SetIsOpen gets a reference to the given bool and assigns it to the IsOpen field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetIsOpen(v bool) {
	o.IsOpen = &v
}

// GetLastRead returns the LastRead field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetLastRead() string {
	if o == nil || isNil(o.LastRead) {
		var ret string
		return ret
	}
	return *o.LastRead
}

// GetLastReadOk returns a tuple with the LastRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetLastReadOk() (*string, bool) {
	if o == nil || isNil(o.LastRead) {
    return nil, false
	}
	return o.LastRead, true
}

// HasLastRead returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasLastRead() bool {
	if o != nil && !isNil(o.LastRead) {
		return true
	}

	return false
}

// SetLastRead gets a reference to the given string and assigns it to the LastRead field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetLastRead(v string) {
	o.LastRead = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetLatest() ObjsMessage {
	if o == nil || isNil(o.Latest) {
		var ret ObjsMessage
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetLatestOk() (*ObjsMessage, bool) {
	if o == nil || isNil(o.Latest) {
    return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasLatest() bool {
	if o != nil && !isNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given ObjsMessage and assigns it to the Latest field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetLatest(v ObjsMessage) {
	o.Latest = &v
}

// GetUnreadCount returns the UnreadCount field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetUnreadCount() float32 {
	if o == nil || isNil(o.UnreadCount) {
		var ret float32
		return ret
	}
	return *o.UnreadCount
}

// GetUnreadCountOk returns a tuple with the UnreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetUnreadCountOk() (*float32, bool) {
	if o == nil || isNil(o.UnreadCount) {
    return nil, false
	}
	return o.UnreadCount, true
}

// HasUnreadCount returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasUnreadCount() bool {
	if o != nil && !isNil(o.UnreadCount) {
		return true
	}

	return false
}

// SetUnreadCount gets a reference to the given float32 and assigns it to the UnreadCount field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetUnreadCount(v float32) {
	o.UnreadCount = &v
}

// GetUnreadCountDisplay returns the UnreadCountDisplay field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetUnreadCountDisplay() float32 {
	if o == nil || isNil(o.UnreadCountDisplay) {
		var ret float32
		return ret
	}
	return *o.UnreadCountDisplay
}

// GetUnreadCountDisplayOk returns a tuple with the UnreadCountDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetUnreadCountDisplayOk() (*float32, bool) {
	if o == nil || isNil(o.UnreadCountDisplay) {
    return nil, false
	}
	return o.UnreadCountDisplay, true
}

// HasUnreadCountDisplay returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasUnreadCountDisplay() bool {
	if o != nil && !isNil(o.UnreadCountDisplay) {
		return true
	}

	return false
}

// SetUnreadCountDisplay gets a reference to the given float32 and assigns it to the UnreadCountDisplay field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetUnreadCountDisplay(v float32) {
	o.UnreadCountDisplay = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetUser() string {
	if o == nil || isNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) GetUserOk() (*string, bool) {
	if o == nil || isNil(o.User) {
    return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) HasUser() bool {
	if o != nil && !isNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *ConversationsOpenSuccessSchemaChannelInnerAnyOf) SetUser(v string) {
	o.User = &v
}

func (o ConversationsOpenSuccessSchemaChannelInnerAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IsIm) {
		toSerialize["is_im"] = o.IsIm
	}
	if !isNil(o.IsOpen) {
		toSerialize["is_open"] = o.IsOpen
	}
	if !isNil(o.LastRead) {
		toSerialize["last_read"] = o.LastRead
	}
	if !isNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	if !isNil(o.UnreadCount) {
		toSerialize["unread_count"] = o.UnreadCount
	}
	if !isNil(o.UnreadCountDisplay) {
		toSerialize["unread_count_display"] = o.UnreadCountDisplay
	}
	if !isNil(o.User) {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableConversationsOpenSuccessSchemaChannelInnerAnyOf struct {
	value *ConversationsOpenSuccessSchemaChannelInnerAnyOf
	isSet bool
}

func (v NullableConversationsOpenSuccessSchemaChannelInnerAnyOf) Get() *ConversationsOpenSuccessSchemaChannelInnerAnyOf {
	return v.value
}

func (v *NullableConversationsOpenSuccessSchemaChannelInnerAnyOf) Set(val *ConversationsOpenSuccessSchemaChannelInnerAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationsOpenSuccessSchemaChannelInnerAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationsOpenSuccessSchemaChannelInnerAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationsOpenSuccessSchemaChannelInnerAnyOf(val *ConversationsOpenSuccessSchemaChannelInnerAnyOf) *NullableConversationsOpenSuccessSchemaChannelInnerAnyOf {
	return &NullableConversationsOpenSuccessSchemaChannelInnerAnyOf{value: val, isSet: true}
}

func (v NullableConversationsOpenSuccessSchemaChannelInnerAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationsOpenSuccessSchemaChannelInnerAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


