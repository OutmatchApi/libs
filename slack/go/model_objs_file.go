/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsFile struct for ObjsFile
type ObjsFile struct {
	Channels []string `json:"channels,omitempty"`
	CommentsCount *int32 `json:"comments_count,omitempty"`
	Created *int32 `json:"created,omitempty"`
	DateDelete *int32 `json:"date_delete,omitempty"`
	DisplayAsBot *bool `json:"display_as_bot,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	Editor *string `json:"editor,omitempty"`
	ExternalId *string `json:"external_id,omitempty"`
	ExternalType *string `json:"external_type,omitempty"`
	ExternalUrl *string `json:"external_url,omitempty"`
	Filetype *string `json:"filetype,omitempty"`
	Groups []string `json:"groups,omitempty"`
	HasRichPreview *bool `json:"has_rich_preview,omitempty"`
	Id *string `json:"id,omitempty"`
	ImageExifRotation *int32 `json:"image_exif_rotation,omitempty"`
	Ims []string `json:"ims,omitempty"`
	IsExternal *bool `json:"is_external,omitempty"`
	IsPublic *bool `json:"is_public,omitempty"`
	IsStarred *bool `json:"is_starred,omitempty"`
	IsTombstoned *bool `json:"is_tombstoned,omitempty"`
	LastEditor *string `json:"last_editor,omitempty"`
	Mimetype *string `json:"mimetype,omitempty"`
	Mode *string `json:"mode,omitempty"`
	Name *string `json:"name,omitempty"`
	NonOwnerEditable *bool `json:"non_owner_editable,omitempty"`
	NumStars *int32 `json:"num_stars,omitempty"`
	OriginalH *int32 `json:"original_h,omitempty"`
	OriginalW *int32 `json:"original_w,omitempty"`
	Permalink *string `json:"permalink,omitempty"`
	PermalinkPublic *string `json:"permalink_public,omitempty"`
	PinnedInfo map[string]interface{} `json:"pinned_info,omitempty"`
	PinnedTo []string `json:"pinned_to,omitempty"`
	PrettyType *string `json:"pretty_type,omitempty"`
	Preview *string `json:"preview,omitempty"`
	PublicUrlShared *bool `json:"public_url_shared,omitempty"`
	Reactions []ObjsReaction `json:"reactions,omitempty"`
	Shares *ObjsFileShares `json:"shares,omitempty"`
	Size *int32 `json:"size,omitempty"`
	SourceTeam *string `json:"source_team,omitempty"`
	State *string `json:"state,omitempty"`
	Thumb1024 *string `json:"thumb_1024,omitempty"`
	Thumb1024H *int32 `json:"thumb_1024_h,omitempty"`
	Thumb1024W *int32 `json:"thumb_1024_w,omitempty"`
	Thumb160 *string `json:"thumb_160,omitempty"`
	Thumb360 *string `json:"thumb_360,omitempty"`
	Thumb360H *int32 `json:"thumb_360_h,omitempty"`
	Thumb360W *int32 `json:"thumb_360_w,omitempty"`
	Thumb480 *string `json:"thumb_480,omitempty"`
	Thumb480H *int32 `json:"thumb_480_h,omitempty"`
	Thumb480W *int32 `json:"thumb_480_w,omitempty"`
	Thumb64 *string `json:"thumb_64,omitempty"`
	Thumb720 *string `json:"thumb_720,omitempty"`
	Thumb720H *int32 `json:"thumb_720_h,omitempty"`
	Thumb720W *int32 `json:"thumb_720_w,omitempty"`
	Thumb80 *string `json:"thumb_80,omitempty"`
	Thumb800 *string `json:"thumb_800,omitempty"`
	Thumb800H *int32 `json:"thumb_800_h,omitempty"`
	Thumb800W *int32 `json:"thumb_800_w,omitempty"`
	Thumb960 *string `json:"thumb_960,omitempty"`
	Thumb960H *int32 `json:"thumb_960_h,omitempty"`
	Thumb960W *int32 `json:"thumb_960_w,omitempty"`
	ThumbTiny *string `json:"thumb_tiny,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	Title *string `json:"title,omitempty"`
	Updated *int32 `json:"updated,omitempty"`
	UrlPrivate *string `json:"url_private,omitempty"`
	UrlPrivateDownload *string `json:"url_private_download,omitempty"`
	User *string `json:"user,omitempty"`
	UserTeam *string `json:"user_team,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewObjsFile instantiates a new ObjsFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsFile() *ObjsFile {
	this := ObjsFile{}
	return &this
}

// NewObjsFileWithDefaults instantiates a new ObjsFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsFileWithDefaults() *ObjsFile {
	this := ObjsFile{}
	return &this
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *ObjsFile) GetChannels() []string {
	if o == nil || isNil(o.Channels) {
		var ret []string
		return ret
	}
	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetChannelsOk() ([]string, bool) {
	if o == nil || isNil(o.Channels) {
    return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *ObjsFile) HasChannels() bool {
	if o != nil && !isNil(o.Channels) {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []string and assigns it to the Channels field.
func (o *ObjsFile) SetChannels(v []string) {
	o.Channels = v
}

// GetCommentsCount returns the CommentsCount field value if set, zero value otherwise.
func (o *ObjsFile) GetCommentsCount() int32 {
	if o == nil || isNil(o.CommentsCount) {
		var ret int32
		return ret
	}
	return *o.CommentsCount
}

// GetCommentsCountOk returns a tuple with the CommentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetCommentsCountOk() (*int32, bool) {
	if o == nil || isNil(o.CommentsCount) {
    return nil, false
	}
	return o.CommentsCount, true
}

// HasCommentsCount returns a boolean if a field has been set.
func (o *ObjsFile) HasCommentsCount() bool {
	if o != nil && !isNil(o.CommentsCount) {
		return true
	}

	return false
}

// SetCommentsCount gets a reference to the given int32 and assigns it to the CommentsCount field.
func (o *ObjsFile) SetCommentsCount(v int32) {
	o.CommentsCount = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ObjsFile) GetCreated() int32 {
	if o == nil || isNil(o.Created) {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetCreatedOk() (*int32, bool) {
	if o == nil || isNil(o.Created) {
    return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ObjsFile) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *ObjsFile) SetCreated(v int32) {
	o.Created = &v
}

// GetDateDelete returns the DateDelete field value if set, zero value otherwise.
func (o *ObjsFile) GetDateDelete() int32 {
	if o == nil || isNil(o.DateDelete) {
		var ret int32
		return ret
	}
	return *o.DateDelete
}

// GetDateDeleteOk returns a tuple with the DateDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetDateDeleteOk() (*int32, bool) {
	if o == nil || isNil(o.DateDelete) {
    return nil, false
	}
	return o.DateDelete, true
}

// HasDateDelete returns a boolean if a field has been set.
func (o *ObjsFile) HasDateDelete() bool {
	if o != nil && !isNil(o.DateDelete) {
		return true
	}

	return false
}

// SetDateDelete gets a reference to the given int32 and assigns it to the DateDelete field.
func (o *ObjsFile) SetDateDelete(v int32) {
	o.DateDelete = &v
}

// GetDisplayAsBot returns the DisplayAsBot field value if set, zero value otherwise.
func (o *ObjsFile) GetDisplayAsBot() bool {
	if o == nil || isNil(o.DisplayAsBot) {
		var ret bool
		return ret
	}
	return *o.DisplayAsBot
}

// GetDisplayAsBotOk returns a tuple with the DisplayAsBot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetDisplayAsBotOk() (*bool, bool) {
	if o == nil || isNil(o.DisplayAsBot) {
    return nil, false
	}
	return o.DisplayAsBot, true
}

// HasDisplayAsBot returns a boolean if a field has been set.
func (o *ObjsFile) HasDisplayAsBot() bool {
	if o != nil && !isNil(o.DisplayAsBot) {
		return true
	}

	return false
}

// SetDisplayAsBot gets a reference to the given bool and assigns it to the DisplayAsBot field.
func (o *ObjsFile) SetDisplayAsBot(v bool) {
	o.DisplayAsBot = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *ObjsFile) GetEditable() bool {
	if o == nil || isNil(o.Editable) {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetEditableOk() (*bool, bool) {
	if o == nil || isNil(o.Editable) {
    return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *ObjsFile) HasEditable() bool {
	if o != nil && !isNil(o.Editable) {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *ObjsFile) SetEditable(v bool) {
	o.Editable = &v
}

// GetEditor returns the Editor field value if set, zero value otherwise.
func (o *ObjsFile) GetEditor() string {
	if o == nil || isNil(o.Editor) {
		var ret string
		return ret
	}
	return *o.Editor
}

// GetEditorOk returns a tuple with the Editor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetEditorOk() (*string, bool) {
	if o == nil || isNil(o.Editor) {
    return nil, false
	}
	return o.Editor, true
}

// HasEditor returns a boolean if a field has been set.
func (o *ObjsFile) HasEditor() bool {
	if o != nil && !isNil(o.Editor) {
		return true
	}

	return false
}

// SetEditor gets a reference to the given string and assigns it to the Editor field.
func (o *ObjsFile) SetEditor(v string) {
	o.Editor = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ObjsFile) GetExternalId() string {
	if o == nil || isNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetExternalIdOk() (*string, bool) {
	if o == nil || isNil(o.ExternalId) {
    return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *ObjsFile) HasExternalId() bool {
	if o != nil && !isNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ObjsFile) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetExternalType returns the ExternalType field value if set, zero value otherwise.
func (o *ObjsFile) GetExternalType() string {
	if o == nil || isNil(o.ExternalType) {
		var ret string
		return ret
	}
	return *o.ExternalType
}

// GetExternalTypeOk returns a tuple with the ExternalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetExternalTypeOk() (*string, bool) {
	if o == nil || isNil(o.ExternalType) {
    return nil, false
	}
	return o.ExternalType, true
}

// HasExternalType returns a boolean if a field has been set.
func (o *ObjsFile) HasExternalType() bool {
	if o != nil && !isNil(o.ExternalType) {
		return true
	}

	return false
}

// SetExternalType gets a reference to the given string and assigns it to the ExternalType field.
func (o *ObjsFile) SetExternalType(v string) {
	o.ExternalType = &v
}

// GetExternalUrl returns the ExternalUrl field value if set, zero value otherwise.
func (o *ObjsFile) GetExternalUrl() string {
	if o == nil || isNil(o.ExternalUrl) {
		var ret string
		return ret
	}
	return *o.ExternalUrl
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetExternalUrlOk() (*string, bool) {
	if o == nil || isNil(o.ExternalUrl) {
    return nil, false
	}
	return o.ExternalUrl, true
}

// HasExternalUrl returns a boolean if a field has been set.
func (o *ObjsFile) HasExternalUrl() bool {
	if o != nil && !isNil(o.ExternalUrl) {
		return true
	}

	return false
}

// SetExternalUrl gets a reference to the given string and assigns it to the ExternalUrl field.
func (o *ObjsFile) SetExternalUrl(v string) {
	o.ExternalUrl = &v
}

// GetFiletype returns the Filetype field value if set, zero value otherwise.
func (o *ObjsFile) GetFiletype() string {
	if o == nil || isNil(o.Filetype) {
		var ret string
		return ret
	}
	return *o.Filetype
}

// GetFiletypeOk returns a tuple with the Filetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetFiletypeOk() (*string, bool) {
	if o == nil || isNil(o.Filetype) {
    return nil, false
	}
	return o.Filetype, true
}

// HasFiletype returns a boolean if a field has been set.
func (o *ObjsFile) HasFiletype() bool {
	if o != nil && !isNil(o.Filetype) {
		return true
	}

	return false
}

// SetFiletype gets a reference to the given string and assigns it to the Filetype field.
func (o *ObjsFile) SetFiletype(v string) {
	o.Filetype = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *ObjsFile) GetGroups() []string {
	if o == nil || isNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetGroupsOk() ([]string, bool) {
	if o == nil || isNil(o.Groups) {
    return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *ObjsFile) HasGroups() bool {
	if o != nil && !isNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *ObjsFile) SetGroups(v []string) {
	o.Groups = v
}

// GetHasRichPreview returns the HasRichPreview field value if set, zero value otherwise.
func (o *ObjsFile) GetHasRichPreview() bool {
	if o == nil || isNil(o.HasRichPreview) {
		var ret bool
		return ret
	}
	return *o.HasRichPreview
}

// GetHasRichPreviewOk returns a tuple with the HasRichPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetHasRichPreviewOk() (*bool, bool) {
	if o == nil || isNil(o.HasRichPreview) {
    return nil, false
	}
	return o.HasRichPreview, true
}

// HasHasRichPreview returns a boolean if a field has been set.
func (o *ObjsFile) HasHasRichPreview() bool {
	if o != nil && !isNil(o.HasRichPreview) {
		return true
	}

	return false
}

// SetHasRichPreview gets a reference to the given bool and assigns it to the HasRichPreview field.
func (o *ObjsFile) SetHasRichPreview(v bool) {
	o.HasRichPreview = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjsFile) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjsFile) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ObjsFile) SetId(v string) {
	o.Id = &v
}

// GetImageExifRotation returns the ImageExifRotation field value if set, zero value otherwise.
func (o *ObjsFile) GetImageExifRotation() int32 {
	if o == nil || isNil(o.ImageExifRotation) {
		var ret int32
		return ret
	}
	return *o.ImageExifRotation
}

// GetImageExifRotationOk returns a tuple with the ImageExifRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetImageExifRotationOk() (*int32, bool) {
	if o == nil || isNil(o.ImageExifRotation) {
    return nil, false
	}
	return o.ImageExifRotation, true
}

// HasImageExifRotation returns a boolean if a field has been set.
func (o *ObjsFile) HasImageExifRotation() bool {
	if o != nil && !isNil(o.ImageExifRotation) {
		return true
	}

	return false
}

// SetImageExifRotation gets a reference to the given int32 and assigns it to the ImageExifRotation field.
func (o *ObjsFile) SetImageExifRotation(v int32) {
	o.ImageExifRotation = &v
}

// GetIms returns the Ims field value if set, zero value otherwise.
func (o *ObjsFile) GetIms() []string {
	if o == nil || isNil(o.Ims) {
		var ret []string
		return ret
	}
	return o.Ims
}

// GetImsOk returns a tuple with the Ims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetImsOk() ([]string, bool) {
	if o == nil || isNil(o.Ims) {
    return nil, false
	}
	return o.Ims, true
}

// HasIms returns a boolean if a field has been set.
func (o *ObjsFile) HasIms() bool {
	if o != nil && !isNil(o.Ims) {
		return true
	}

	return false
}

// SetIms gets a reference to the given []string and assigns it to the Ims field.
func (o *ObjsFile) SetIms(v []string) {
	o.Ims = v
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *ObjsFile) GetIsExternal() bool {
	if o == nil || isNil(o.IsExternal) {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetIsExternalOk() (*bool, bool) {
	if o == nil || isNil(o.IsExternal) {
    return nil, false
	}
	return o.IsExternal, true
}

// HasIsExternal returns a boolean if a field has been set.
func (o *ObjsFile) HasIsExternal() bool {
	if o != nil && !isNil(o.IsExternal) {
		return true
	}

	return false
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *ObjsFile) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetIsPublic returns the IsPublic field value if set, zero value otherwise.
func (o *ObjsFile) GetIsPublic() bool {
	if o == nil || isNil(o.IsPublic) {
		var ret bool
		return ret
	}
	return *o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetIsPublicOk() (*bool, bool) {
	if o == nil || isNil(o.IsPublic) {
    return nil, false
	}
	return o.IsPublic, true
}

// HasIsPublic returns a boolean if a field has been set.
func (o *ObjsFile) HasIsPublic() bool {
	if o != nil && !isNil(o.IsPublic) {
		return true
	}

	return false
}

// SetIsPublic gets a reference to the given bool and assigns it to the IsPublic field.
func (o *ObjsFile) SetIsPublic(v bool) {
	o.IsPublic = &v
}

// GetIsStarred returns the IsStarred field value if set, zero value otherwise.
func (o *ObjsFile) GetIsStarred() bool {
	if o == nil || isNil(o.IsStarred) {
		var ret bool
		return ret
	}
	return *o.IsStarred
}

// GetIsStarredOk returns a tuple with the IsStarred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetIsStarredOk() (*bool, bool) {
	if o == nil || isNil(o.IsStarred) {
    return nil, false
	}
	return o.IsStarred, true
}

// HasIsStarred returns a boolean if a field has been set.
func (o *ObjsFile) HasIsStarred() bool {
	if o != nil && !isNil(o.IsStarred) {
		return true
	}

	return false
}

// SetIsStarred gets a reference to the given bool and assigns it to the IsStarred field.
func (o *ObjsFile) SetIsStarred(v bool) {
	o.IsStarred = &v
}

// GetIsTombstoned returns the IsTombstoned field value if set, zero value otherwise.
func (o *ObjsFile) GetIsTombstoned() bool {
	if o == nil || isNil(o.IsTombstoned) {
		var ret bool
		return ret
	}
	return *o.IsTombstoned
}

// GetIsTombstonedOk returns a tuple with the IsTombstoned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetIsTombstonedOk() (*bool, bool) {
	if o == nil || isNil(o.IsTombstoned) {
    return nil, false
	}
	return o.IsTombstoned, true
}

// HasIsTombstoned returns a boolean if a field has been set.
func (o *ObjsFile) HasIsTombstoned() bool {
	if o != nil && !isNil(o.IsTombstoned) {
		return true
	}

	return false
}

// SetIsTombstoned gets a reference to the given bool and assigns it to the IsTombstoned field.
func (o *ObjsFile) SetIsTombstoned(v bool) {
	o.IsTombstoned = &v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ObjsFile) GetLastEditor() string {
	if o == nil || isNil(o.LastEditor) {
		var ret string
		return ret
	}
	return *o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetLastEditorOk() (*string, bool) {
	if o == nil || isNil(o.LastEditor) {
    return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ObjsFile) HasLastEditor() bool {
	if o != nil && !isNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given string and assigns it to the LastEditor field.
func (o *ObjsFile) SetLastEditor(v string) {
	o.LastEditor = &v
}

// GetMimetype returns the Mimetype field value if set, zero value otherwise.
func (o *ObjsFile) GetMimetype() string {
	if o == nil || isNil(o.Mimetype) {
		var ret string
		return ret
	}
	return *o.Mimetype
}

// GetMimetypeOk returns a tuple with the Mimetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetMimetypeOk() (*string, bool) {
	if o == nil || isNil(o.Mimetype) {
    return nil, false
	}
	return o.Mimetype, true
}

// HasMimetype returns a boolean if a field has been set.
func (o *ObjsFile) HasMimetype() bool {
	if o != nil && !isNil(o.Mimetype) {
		return true
	}

	return false
}

// SetMimetype gets a reference to the given string and assigns it to the Mimetype field.
func (o *ObjsFile) SetMimetype(v string) {
	o.Mimetype = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ObjsFile) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
    return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ObjsFile) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *ObjsFile) SetMode(v string) {
	o.Mode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ObjsFile) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ObjsFile) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ObjsFile) SetName(v string) {
	o.Name = &v
}

// GetNonOwnerEditable returns the NonOwnerEditable field value if set, zero value otherwise.
func (o *ObjsFile) GetNonOwnerEditable() bool {
	if o == nil || isNil(o.NonOwnerEditable) {
		var ret bool
		return ret
	}
	return *o.NonOwnerEditable
}

// GetNonOwnerEditableOk returns a tuple with the NonOwnerEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetNonOwnerEditableOk() (*bool, bool) {
	if o == nil || isNil(o.NonOwnerEditable) {
    return nil, false
	}
	return o.NonOwnerEditable, true
}

// HasNonOwnerEditable returns a boolean if a field has been set.
func (o *ObjsFile) HasNonOwnerEditable() bool {
	if o != nil && !isNil(o.NonOwnerEditable) {
		return true
	}

	return false
}

// SetNonOwnerEditable gets a reference to the given bool and assigns it to the NonOwnerEditable field.
func (o *ObjsFile) SetNonOwnerEditable(v bool) {
	o.NonOwnerEditable = &v
}

// GetNumStars returns the NumStars field value if set, zero value otherwise.
func (o *ObjsFile) GetNumStars() int32 {
	if o == nil || isNil(o.NumStars) {
		var ret int32
		return ret
	}
	return *o.NumStars
}

// GetNumStarsOk returns a tuple with the NumStars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetNumStarsOk() (*int32, bool) {
	if o == nil || isNil(o.NumStars) {
    return nil, false
	}
	return o.NumStars, true
}

// HasNumStars returns a boolean if a field has been set.
func (o *ObjsFile) HasNumStars() bool {
	if o != nil && !isNil(o.NumStars) {
		return true
	}

	return false
}

// SetNumStars gets a reference to the given int32 and assigns it to the NumStars field.
func (o *ObjsFile) SetNumStars(v int32) {
	o.NumStars = &v
}

// GetOriginalH returns the OriginalH field value if set, zero value otherwise.
func (o *ObjsFile) GetOriginalH() int32 {
	if o == nil || isNil(o.OriginalH) {
		var ret int32
		return ret
	}
	return *o.OriginalH
}

// GetOriginalHOk returns a tuple with the OriginalH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetOriginalHOk() (*int32, bool) {
	if o == nil || isNil(o.OriginalH) {
    return nil, false
	}
	return o.OriginalH, true
}

// HasOriginalH returns a boolean if a field has been set.
func (o *ObjsFile) HasOriginalH() bool {
	if o != nil && !isNil(o.OriginalH) {
		return true
	}

	return false
}

// SetOriginalH gets a reference to the given int32 and assigns it to the OriginalH field.
func (o *ObjsFile) SetOriginalH(v int32) {
	o.OriginalH = &v
}

// GetOriginalW returns the OriginalW field value if set, zero value otherwise.
func (o *ObjsFile) GetOriginalW() int32 {
	if o == nil || isNil(o.OriginalW) {
		var ret int32
		return ret
	}
	return *o.OriginalW
}

// GetOriginalWOk returns a tuple with the OriginalW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetOriginalWOk() (*int32, bool) {
	if o == nil || isNil(o.OriginalW) {
    return nil, false
	}
	return o.OriginalW, true
}

// HasOriginalW returns a boolean if a field has been set.
func (o *ObjsFile) HasOriginalW() bool {
	if o != nil && !isNil(o.OriginalW) {
		return true
	}

	return false
}

// SetOriginalW gets a reference to the given int32 and assigns it to the OriginalW field.
func (o *ObjsFile) SetOriginalW(v int32) {
	o.OriginalW = &v
}

// GetPermalink returns the Permalink field value if set, zero value otherwise.
func (o *ObjsFile) GetPermalink() string {
	if o == nil || isNil(o.Permalink) {
		var ret string
		return ret
	}
	return *o.Permalink
}

// GetPermalinkOk returns a tuple with the Permalink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPermalinkOk() (*string, bool) {
	if o == nil || isNil(o.Permalink) {
    return nil, false
	}
	return o.Permalink, true
}

// HasPermalink returns a boolean if a field has been set.
func (o *ObjsFile) HasPermalink() bool {
	if o != nil && !isNil(o.Permalink) {
		return true
	}

	return false
}

// SetPermalink gets a reference to the given string and assigns it to the Permalink field.
func (o *ObjsFile) SetPermalink(v string) {
	o.Permalink = &v
}

// GetPermalinkPublic returns the PermalinkPublic field value if set, zero value otherwise.
func (o *ObjsFile) GetPermalinkPublic() string {
	if o == nil || isNil(o.PermalinkPublic) {
		var ret string
		return ret
	}
	return *o.PermalinkPublic
}

// GetPermalinkPublicOk returns a tuple with the PermalinkPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPermalinkPublicOk() (*string, bool) {
	if o == nil || isNil(o.PermalinkPublic) {
    return nil, false
	}
	return o.PermalinkPublic, true
}

// HasPermalinkPublic returns a boolean if a field has been set.
func (o *ObjsFile) HasPermalinkPublic() bool {
	if o != nil && !isNil(o.PermalinkPublic) {
		return true
	}

	return false
}

// SetPermalinkPublic gets a reference to the given string and assigns it to the PermalinkPublic field.
func (o *ObjsFile) SetPermalinkPublic(v string) {
	o.PermalinkPublic = &v
}

// GetPinnedInfo returns the PinnedInfo field value if set, zero value otherwise.
func (o *ObjsFile) GetPinnedInfo() map[string]interface{} {
	if o == nil || isNil(o.PinnedInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.PinnedInfo
}

// GetPinnedInfoOk returns a tuple with the PinnedInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPinnedInfoOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.PinnedInfo) {
    return map[string]interface{}{}, false
	}
	return o.PinnedInfo, true
}

// HasPinnedInfo returns a boolean if a field has been set.
func (o *ObjsFile) HasPinnedInfo() bool {
	if o != nil && !isNil(o.PinnedInfo) {
		return true
	}

	return false
}

// SetPinnedInfo gets a reference to the given map[string]interface{} and assigns it to the PinnedInfo field.
func (o *ObjsFile) SetPinnedInfo(v map[string]interface{}) {
	o.PinnedInfo = v
}

// GetPinnedTo returns the PinnedTo field value if set, zero value otherwise.
func (o *ObjsFile) GetPinnedTo() []string {
	if o == nil || isNil(o.PinnedTo) {
		var ret []string
		return ret
	}
	return o.PinnedTo
}

// GetPinnedToOk returns a tuple with the PinnedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPinnedToOk() ([]string, bool) {
	if o == nil || isNil(o.PinnedTo) {
    return nil, false
	}
	return o.PinnedTo, true
}

// HasPinnedTo returns a boolean if a field has been set.
func (o *ObjsFile) HasPinnedTo() bool {
	if o != nil && !isNil(o.PinnedTo) {
		return true
	}

	return false
}

// SetPinnedTo gets a reference to the given []string and assigns it to the PinnedTo field.
func (o *ObjsFile) SetPinnedTo(v []string) {
	o.PinnedTo = v
}

// GetPrettyType returns the PrettyType field value if set, zero value otherwise.
func (o *ObjsFile) GetPrettyType() string {
	if o == nil || isNil(o.PrettyType) {
		var ret string
		return ret
	}
	return *o.PrettyType
}

// GetPrettyTypeOk returns a tuple with the PrettyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPrettyTypeOk() (*string, bool) {
	if o == nil || isNil(o.PrettyType) {
    return nil, false
	}
	return o.PrettyType, true
}

// HasPrettyType returns a boolean if a field has been set.
func (o *ObjsFile) HasPrettyType() bool {
	if o != nil && !isNil(o.PrettyType) {
		return true
	}

	return false
}

// SetPrettyType gets a reference to the given string and assigns it to the PrettyType field.
func (o *ObjsFile) SetPrettyType(v string) {
	o.PrettyType = &v
}

// GetPreview returns the Preview field value if set, zero value otherwise.
func (o *ObjsFile) GetPreview() string {
	if o == nil || isNil(o.Preview) {
		var ret string
		return ret
	}
	return *o.Preview
}

// GetPreviewOk returns a tuple with the Preview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPreviewOk() (*string, bool) {
	if o == nil || isNil(o.Preview) {
    return nil, false
	}
	return o.Preview, true
}

// HasPreview returns a boolean if a field has been set.
func (o *ObjsFile) HasPreview() bool {
	if o != nil && !isNil(o.Preview) {
		return true
	}

	return false
}

// SetPreview gets a reference to the given string and assigns it to the Preview field.
func (o *ObjsFile) SetPreview(v string) {
	o.Preview = &v
}

// GetPublicUrlShared returns the PublicUrlShared field value if set, zero value otherwise.
func (o *ObjsFile) GetPublicUrlShared() bool {
	if o == nil || isNil(o.PublicUrlShared) {
		var ret bool
		return ret
	}
	return *o.PublicUrlShared
}

// GetPublicUrlSharedOk returns a tuple with the PublicUrlShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetPublicUrlSharedOk() (*bool, bool) {
	if o == nil || isNil(o.PublicUrlShared) {
    return nil, false
	}
	return o.PublicUrlShared, true
}

// HasPublicUrlShared returns a boolean if a field has been set.
func (o *ObjsFile) HasPublicUrlShared() bool {
	if o != nil && !isNil(o.PublicUrlShared) {
		return true
	}

	return false
}

// SetPublicUrlShared gets a reference to the given bool and assigns it to the PublicUrlShared field.
func (o *ObjsFile) SetPublicUrlShared(v bool) {
	o.PublicUrlShared = &v
}

// GetReactions returns the Reactions field value if set, zero value otherwise.
func (o *ObjsFile) GetReactions() []ObjsReaction {
	if o == nil || isNil(o.Reactions) {
		var ret []ObjsReaction
		return ret
	}
	return o.Reactions
}

// GetReactionsOk returns a tuple with the Reactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetReactionsOk() ([]ObjsReaction, bool) {
	if o == nil || isNil(o.Reactions) {
    return nil, false
	}
	return o.Reactions, true
}

// HasReactions returns a boolean if a field has been set.
func (o *ObjsFile) HasReactions() bool {
	if o != nil && !isNil(o.Reactions) {
		return true
	}

	return false
}

// SetReactions gets a reference to the given []ObjsReaction and assigns it to the Reactions field.
func (o *ObjsFile) SetReactions(v []ObjsReaction) {
	o.Reactions = v
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *ObjsFile) GetShares() ObjsFileShares {
	if o == nil || isNil(o.Shares) {
		var ret ObjsFileShares
		return ret
	}
	return *o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetSharesOk() (*ObjsFileShares, bool) {
	if o == nil || isNil(o.Shares) {
    return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *ObjsFile) HasShares() bool {
	if o != nil && !isNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given ObjsFileShares and assigns it to the Shares field.
func (o *ObjsFile) SetShares(v ObjsFileShares) {
	o.Shares = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ObjsFile) GetSize() int32 {
	if o == nil || isNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetSizeOk() (*int32, bool) {
	if o == nil || isNil(o.Size) {
    return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ObjsFile) HasSize() bool {
	if o != nil && !isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *ObjsFile) SetSize(v int32) {
	o.Size = &v
}

// GetSourceTeam returns the SourceTeam field value if set, zero value otherwise.
func (o *ObjsFile) GetSourceTeam() string {
	if o == nil || isNil(o.SourceTeam) {
		var ret string
		return ret
	}
	return *o.SourceTeam
}

// GetSourceTeamOk returns a tuple with the SourceTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetSourceTeamOk() (*string, bool) {
	if o == nil || isNil(o.SourceTeam) {
    return nil, false
	}
	return o.SourceTeam, true
}

// HasSourceTeam returns a boolean if a field has been set.
func (o *ObjsFile) HasSourceTeam() bool {
	if o != nil && !isNil(o.SourceTeam) {
		return true
	}

	return false
}

// SetSourceTeam gets a reference to the given string and assigns it to the SourceTeam field.
func (o *ObjsFile) SetSourceTeam(v string) {
	o.SourceTeam = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ObjsFile) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ObjsFile) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ObjsFile) SetState(v string) {
	o.State = &v
}

// GetThumb1024 returns the Thumb1024 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb1024() string {
	if o == nil || isNil(o.Thumb1024) {
		var ret string
		return ret
	}
	return *o.Thumb1024
}

// GetThumb1024Ok returns a tuple with the Thumb1024 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb1024Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb1024) {
    return nil, false
	}
	return o.Thumb1024, true
}

// HasThumb1024 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb1024() bool {
	if o != nil && !isNil(o.Thumb1024) {
		return true
	}

	return false
}

// SetThumb1024 gets a reference to the given string and assigns it to the Thumb1024 field.
func (o *ObjsFile) SetThumb1024(v string) {
	o.Thumb1024 = &v
}

// GetThumb1024H returns the Thumb1024H field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb1024H() int32 {
	if o == nil || isNil(o.Thumb1024H) {
		var ret int32
		return ret
	}
	return *o.Thumb1024H
}

// GetThumb1024HOk returns a tuple with the Thumb1024H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb1024HOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb1024H) {
    return nil, false
	}
	return o.Thumb1024H, true
}

// HasThumb1024H returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb1024H() bool {
	if o != nil && !isNil(o.Thumb1024H) {
		return true
	}

	return false
}

// SetThumb1024H gets a reference to the given int32 and assigns it to the Thumb1024H field.
func (o *ObjsFile) SetThumb1024H(v int32) {
	o.Thumb1024H = &v
}

// GetThumb1024W returns the Thumb1024W field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb1024W() int32 {
	if o == nil || isNil(o.Thumb1024W) {
		var ret int32
		return ret
	}
	return *o.Thumb1024W
}

// GetThumb1024WOk returns a tuple with the Thumb1024W field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb1024WOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb1024W) {
    return nil, false
	}
	return o.Thumb1024W, true
}

// HasThumb1024W returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb1024W() bool {
	if o != nil && !isNil(o.Thumb1024W) {
		return true
	}

	return false
}

// SetThumb1024W gets a reference to the given int32 and assigns it to the Thumb1024W field.
func (o *ObjsFile) SetThumb1024W(v int32) {
	o.Thumb1024W = &v
}

// GetThumb160 returns the Thumb160 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb160() string {
	if o == nil || isNil(o.Thumb160) {
		var ret string
		return ret
	}
	return *o.Thumb160
}

// GetThumb160Ok returns a tuple with the Thumb160 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb160Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb160) {
    return nil, false
	}
	return o.Thumb160, true
}

// HasThumb160 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb160() bool {
	if o != nil && !isNil(o.Thumb160) {
		return true
	}

	return false
}

// SetThumb160 gets a reference to the given string and assigns it to the Thumb160 field.
func (o *ObjsFile) SetThumb160(v string) {
	o.Thumb160 = &v
}

// GetThumb360 returns the Thumb360 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb360() string {
	if o == nil || isNil(o.Thumb360) {
		var ret string
		return ret
	}
	return *o.Thumb360
}

// GetThumb360Ok returns a tuple with the Thumb360 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb360Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb360) {
    return nil, false
	}
	return o.Thumb360, true
}

// HasThumb360 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb360() bool {
	if o != nil && !isNil(o.Thumb360) {
		return true
	}

	return false
}

// SetThumb360 gets a reference to the given string and assigns it to the Thumb360 field.
func (o *ObjsFile) SetThumb360(v string) {
	o.Thumb360 = &v
}

// GetThumb360H returns the Thumb360H field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb360H() int32 {
	if o == nil || isNil(o.Thumb360H) {
		var ret int32
		return ret
	}
	return *o.Thumb360H
}

// GetThumb360HOk returns a tuple with the Thumb360H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb360HOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb360H) {
    return nil, false
	}
	return o.Thumb360H, true
}

// HasThumb360H returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb360H() bool {
	if o != nil && !isNil(o.Thumb360H) {
		return true
	}

	return false
}

// SetThumb360H gets a reference to the given int32 and assigns it to the Thumb360H field.
func (o *ObjsFile) SetThumb360H(v int32) {
	o.Thumb360H = &v
}

// GetThumb360W returns the Thumb360W field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb360W() int32 {
	if o == nil || isNil(o.Thumb360W) {
		var ret int32
		return ret
	}
	return *o.Thumb360W
}

// GetThumb360WOk returns a tuple with the Thumb360W field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb360WOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb360W) {
    return nil, false
	}
	return o.Thumb360W, true
}

// HasThumb360W returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb360W() bool {
	if o != nil && !isNil(o.Thumb360W) {
		return true
	}

	return false
}

// SetThumb360W gets a reference to the given int32 and assigns it to the Thumb360W field.
func (o *ObjsFile) SetThumb360W(v int32) {
	o.Thumb360W = &v
}

// GetThumb480 returns the Thumb480 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb480() string {
	if o == nil || isNil(o.Thumb480) {
		var ret string
		return ret
	}
	return *o.Thumb480
}

// GetThumb480Ok returns a tuple with the Thumb480 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb480Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb480) {
    return nil, false
	}
	return o.Thumb480, true
}

// HasThumb480 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb480() bool {
	if o != nil && !isNil(o.Thumb480) {
		return true
	}

	return false
}

// SetThumb480 gets a reference to the given string and assigns it to the Thumb480 field.
func (o *ObjsFile) SetThumb480(v string) {
	o.Thumb480 = &v
}

// GetThumb480H returns the Thumb480H field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb480H() int32 {
	if o == nil || isNil(o.Thumb480H) {
		var ret int32
		return ret
	}
	return *o.Thumb480H
}

// GetThumb480HOk returns a tuple with the Thumb480H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb480HOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb480H) {
    return nil, false
	}
	return o.Thumb480H, true
}

// HasThumb480H returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb480H() bool {
	if o != nil && !isNil(o.Thumb480H) {
		return true
	}

	return false
}

// SetThumb480H gets a reference to the given int32 and assigns it to the Thumb480H field.
func (o *ObjsFile) SetThumb480H(v int32) {
	o.Thumb480H = &v
}

// GetThumb480W returns the Thumb480W field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb480W() int32 {
	if o == nil || isNil(o.Thumb480W) {
		var ret int32
		return ret
	}
	return *o.Thumb480W
}

// GetThumb480WOk returns a tuple with the Thumb480W field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb480WOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb480W) {
    return nil, false
	}
	return o.Thumb480W, true
}

// HasThumb480W returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb480W() bool {
	if o != nil && !isNil(o.Thumb480W) {
		return true
	}

	return false
}

// SetThumb480W gets a reference to the given int32 and assigns it to the Thumb480W field.
func (o *ObjsFile) SetThumb480W(v int32) {
	o.Thumb480W = &v
}

// GetThumb64 returns the Thumb64 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb64() string {
	if o == nil || isNil(o.Thumb64) {
		var ret string
		return ret
	}
	return *o.Thumb64
}

// GetThumb64Ok returns a tuple with the Thumb64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb64Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb64) {
    return nil, false
	}
	return o.Thumb64, true
}

// HasThumb64 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb64() bool {
	if o != nil && !isNil(o.Thumb64) {
		return true
	}

	return false
}

// SetThumb64 gets a reference to the given string and assigns it to the Thumb64 field.
func (o *ObjsFile) SetThumb64(v string) {
	o.Thumb64 = &v
}

// GetThumb720 returns the Thumb720 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb720() string {
	if o == nil || isNil(o.Thumb720) {
		var ret string
		return ret
	}
	return *o.Thumb720
}

// GetThumb720Ok returns a tuple with the Thumb720 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb720Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb720) {
    return nil, false
	}
	return o.Thumb720, true
}

// HasThumb720 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb720() bool {
	if o != nil && !isNil(o.Thumb720) {
		return true
	}

	return false
}

// SetThumb720 gets a reference to the given string and assigns it to the Thumb720 field.
func (o *ObjsFile) SetThumb720(v string) {
	o.Thumb720 = &v
}

// GetThumb720H returns the Thumb720H field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb720H() int32 {
	if o == nil || isNil(o.Thumb720H) {
		var ret int32
		return ret
	}
	return *o.Thumb720H
}

// GetThumb720HOk returns a tuple with the Thumb720H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb720HOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb720H) {
    return nil, false
	}
	return o.Thumb720H, true
}

// HasThumb720H returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb720H() bool {
	if o != nil && !isNil(o.Thumb720H) {
		return true
	}

	return false
}

// SetThumb720H gets a reference to the given int32 and assigns it to the Thumb720H field.
func (o *ObjsFile) SetThumb720H(v int32) {
	o.Thumb720H = &v
}

// GetThumb720W returns the Thumb720W field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb720W() int32 {
	if o == nil || isNil(o.Thumb720W) {
		var ret int32
		return ret
	}
	return *o.Thumb720W
}

// GetThumb720WOk returns a tuple with the Thumb720W field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb720WOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb720W) {
    return nil, false
	}
	return o.Thumb720W, true
}

// HasThumb720W returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb720W() bool {
	if o != nil && !isNil(o.Thumb720W) {
		return true
	}

	return false
}

// SetThumb720W gets a reference to the given int32 and assigns it to the Thumb720W field.
func (o *ObjsFile) SetThumb720W(v int32) {
	o.Thumb720W = &v
}

// GetThumb80 returns the Thumb80 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb80() string {
	if o == nil || isNil(o.Thumb80) {
		var ret string
		return ret
	}
	return *o.Thumb80
}

// GetThumb80Ok returns a tuple with the Thumb80 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb80Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb80) {
    return nil, false
	}
	return o.Thumb80, true
}

// HasThumb80 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb80() bool {
	if o != nil && !isNil(o.Thumb80) {
		return true
	}

	return false
}

// SetThumb80 gets a reference to the given string and assigns it to the Thumb80 field.
func (o *ObjsFile) SetThumb80(v string) {
	o.Thumb80 = &v
}

// GetThumb800 returns the Thumb800 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb800() string {
	if o == nil || isNil(o.Thumb800) {
		var ret string
		return ret
	}
	return *o.Thumb800
}

// GetThumb800Ok returns a tuple with the Thumb800 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb800Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb800) {
    return nil, false
	}
	return o.Thumb800, true
}

// HasThumb800 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb800() bool {
	if o != nil && !isNil(o.Thumb800) {
		return true
	}

	return false
}

// SetThumb800 gets a reference to the given string and assigns it to the Thumb800 field.
func (o *ObjsFile) SetThumb800(v string) {
	o.Thumb800 = &v
}

// GetThumb800H returns the Thumb800H field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb800H() int32 {
	if o == nil || isNil(o.Thumb800H) {
		var ret int32
		return ret
	}
	return *o.Thumb800H
}

// GetThumb800HOk returns a tuple with the Thumb800H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb800HOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb800H) {
    return nil, false
	}
	return o.Thumb800H, true
}

// HasThumb800H returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb800H() bool {
	if o != nil && !isNil(o.Thumb800H) {
		return true
	}

	return false
}

// SetThumb800H gets a reference to the given int32 and assigns it to the Thumb800H field.
func (o *ObjsFile) SetThumb800H(v int32) {
	o.Thumb800H = &v
}

// GetThumb800W returns the Thumb800W field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb800W() int32 {
	if o == nil || isNil(o.Thumb800W) {
		var ret int32
		return ret
	}
	return *o.Thumb800W
}

// GetThumb800WOk returns a tuple with the Thumb800W field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb800WOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb800W) {
    return nil, false
	}
	return o.Thumb800W, true
}

// HasThumb800W returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb800W() bool {
	if o != nil && !isNil(o.Thumb800W) {
		return true
	}

	return false
}

// SetThumb800W gets a reference to the given int32 and assigns it to the Thumb800W field.
func (o *ObjsFile) SetThumb800W(v int32) {
	o.Thumb800W = &v
}

// GetThumb960 returns the Thumb960 field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb960() string {
	if o == nil || isNil(o.Thumb960) {
		var ret string
		return ret
	}
	return *o.Thumb960
}

// GetThumb960Ok returns a tuple with the Thumb960 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb960Ok() (*string, bool) {
	if o == nil || isNil(o.Thumb960) {
    return nil, false
	}
	return o.Thumb960, true
}

// HasThumb960 returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb960() bool {
	if o != nil && !isNil(o.Thumb960) {
		return true
	}

	return false
}

// SetThumb960 gets a reference to the given string and assigns it to the Thumb960 field.
func (o *ObjsFile) SetThumb960(v string) {
	o.Thumb960 = &v
}

// GetThumb960H returns the Thumb960H field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb960H() int32 {
	if o == nil || isNil(o.Thumb960H) {
		var ret int32
		return ret
	}
	return *o.Thumb960H
}

// GetThumb960HOk returns a tuple with the Thumb960H field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb960HOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb960H) {
    return nil, false
	}
	return o.Thumb960H, true
}

// HasThumb960H returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb960H() bool {
	if o != nil && !isNil(o.Thumb960H) {
		return true
	}

	return false
}

// SetThumb960H gets a reference to the given int32 and assigns it to the Thumb960H field.
func (o *ObjsFile) SetThumb960H(v int32) {
	o.Thumb960H = &v
}

// GetThumb960W returns the Thumb960W field value if set, zero value otherwise.
func (o *ObjsFile) GetThumb960W() int32 {
	if o == nil || isNil(o.Thumb960W) {
		var ret int32
		return ret
	}
	return *o.Thumb960W
}

// GetThumb960WOk returns a tuple with the Thumb960W field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumb960WOk() (*int32, bool) {
	if o == nil || isNil(o.Thumb960W) {
    return nil, false
	}
	return o.Thumb960W, true
}

// HasThumb960W returns a boolean if a field has been set.
func (o *ObjsFile) HasThumb960W() bool {
	if o != nil && !isNil(o.Thumb960W) {
		return true
	}

	return false
}

// SetThumb960W gets a reference to the given int32 and assigns it to the Thumb960W field.
func (o *ObjsFile) SetThumb960W(v int32) {
	o.Thumb960W = &v
}

// GetThumbTiny returns the ThumbTiny field value if set, zero value otherwise.
func (o *ObjsFile) GetThumbTiny() string {
	if o == nil || isNil(o.ThumbTiny) {
		var ret string
		return ret
	}
	return *o.ThumbTiny
}

// GetThumbTinyOk returns a tuple with the ThumbTiny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetThumbTinyOk() (*string, bool) {
	if o == nil || isNil(o.ThumbTiny) {
    return nil, false
	}
	return o.ThumbTiny, true
}

// HasThumbTiny returns a boolean if a field has been set.
func (o *ObjsFile) HasThumbTiny() bool {
	if o != nil && !isNil(o.ThumbTiny) {
		return true
	}

	return false
}

// SetThumbTiny gets a reference to the given string and assigns it to the ThumbTiny field.
func (o *ObjsFile) SetThumbTiny(v string) {
	o.ThumbTiny = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ObjsFile) GetTimestamp() int32 {
	if o == nil || isNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetTimestampOk() (*int32, bool) {
	if o == nil || isNil(o.Timestamp) {
    return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ObjsFile) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *ObjsFile) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ObjsFile) GetTitle() string {
	if o == nil || isNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetTitleOk() (*string, bool) {
	if o == nil || isNil(o.Title) {
    return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ObjsFile) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ObjsFile) SetTitle(v string) {
	o.Title = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ObjsFile) GetUpdated() int32 {
	if o == nil || isNil(o.Updated) {
		var ret int32
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetUpdatedOk() (*int32, bool) {
	if o == nil || isNil(o.Updated) {
    return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ObjsFile) HasUpdated() bool {
	if o != nil && !isNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given int32 and assigns it to the Updated field.
func (o *ObjsFile) SetUpdated(v int32) {
	o.Updated = &v
}

// GetUrlPrivate returns the UrlPrivate field value if set, zero value otherwise.
func (o *ObjsFile) GetUrlPrivate() string {
	if o == nil || isNil(o.UrlPrivate) {
		var ret string
		return ret
	}
	return *o.UrlPrivate
}

// GetUrlPrivateOk returns a tuple with the UrlPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetUrlPrivateOk() (*string, bool) {
	if o == nil || isNil(o.UrlPrivate) {
    return nil, false
	}
	return o.UrlPrivate, true
}

// HasUrlPrivate returns a boolean if a field has been set.
func (o *ObjsFile) HasUrlPrivate() bool {
	if o != nil && !isNil(o.UrlPrivate) {
		return true
	}

	return false
}

// SetUrlPrivate gets a reference to the given string and assigns it to the UrlPrivate field.
func (o *ObjsFile) SetUrlPrivate(v string) {
	o.UrlPrivate = &v
}

// GetUrlPrivateDownload returns the UrlPrivateDownload field value if set, zero value otherwise.
func (o *ObjsFile) GetUrlPrivateDownload() string {
	if o == nil || isNil(o.UrlPrivateDownload) {
		var ret string
		return ret
	}
	return *o.UrlPrivateDownload
}

// GetUrlPrivateDownloadOk returns a tuple with the UrlPrivateDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetUrlPrivateDownloadOk() (*string, bool) {
	if o == nil || isNil(o.UrlPrivateDownload) {
    return nil, false
	}
	return o.UrlPrivateDownload, true
}

// HasUrlPrivateDownload returns a boolean if a field has been set.
func (o *ObjsFile) HasUrlPrivateDownload() bool {
	if o != nil && !isNil(o.UrlPrivateDownload) {
		return true
	}

	return false
}

// SetUrlPrivateDownload gets a reference to the given string and assigns it to the UrlPrivateDownload field.
func (o *ObjsFile) SetUrlPrivateDownload(v string) {
	o.UrlPrivateDownload = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ObjsFile) GetUser() string {
	if o == nil || isNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetUserOk() (*string, bool) {
	if o == nil || isNil(o.User) {
    return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ObjsFile) HasUser() bool {
	if o != nil && !isNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *ObjsFile) SetUser(v string) {
	o.User = &v
}

// GetUserTeam returns the UserTeam field value if set, zero value otherwise.
func (o *ObjsFile) GetUserTeam() string {
	if o == nil || isNil(o.UserTeam) {
		var ret string
		return ret
	}
	return *o.UserTeam
}

// GetUserTeamOk returns a tuple with the UserTeam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetUserTeamOk() (*string, bool) {
	if o == nil || isNil(o.UserTeam) {
    return nil, false
	}
	return o.UserTeam, true
}

// HasUserTeam returns a boolean if a field has been set.
func (o *ObjsFile) HasUserTeam() bool {
	if o != nil && !isNil(o.UserTeam) {
		return true
	}

	return false
}

// SetUserTeam gets a reference to the given string and assigns it to the UserTeam field.
func (o *ObjsFile) SetUserTeam(v string) {
	o.UserTeam = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ObjsFile) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsFile) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ObjsFile) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ObjsFile) SetUsername(v string) {
	o.Username = &v
}

func (o ObjsFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Channels) {
		toSerialize["channels"] = o.Channels
	}
	if !isNil(o.CommentsCount) {
		toSerialize["comments_count"] = o.CommentsCount
	}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.DateDelete) {
		toSerialize["date_delete"] = o.DateDelete
	}
	if !isNil(o.DisplayAsBot) {
		toSerialize["display_as_bot"] = o.DisplayAsBot
	}
	if !isNil(o.Editable) {
		toSerialize["editable"] = o.Editable
	}
	if !isNil(o.Editor) {
		toSerialize["editor"] = o.Editor
	}
	if !isNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !isNil(o.ExternalType) {
		toSerialize["external_type"] = o.ExternalType
	}
	if !isNil(o.ExternalUrl) {
		toSerialize["external_url"] = o.ExternalUrl
	}
	if !isNil(o.Filetype) {
		toSerialize["filetype"] = o.Filetype
	}
	if !isNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !isNil(o.HasRichPreview) {
		toSerialize["has_rich_preview"] = o.HasRichPreview
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ImageExifRotation) {
		toSerialize["image_exif_rotation"] = o.ImageExifRotation
	}
	if !isNil(o.Ims) {
		toSerialize["ims"] = o.Ims
	}
	if !isNil(o.IsExternal) {
		toSerialize["is_external"] = o.IsExternal
	}
	if !isNil(o.IsPublic) {
		toSerialize["is_public"] = o.IsPublic
	}
	if !isNil(o.IsStarred) {
		toSerialize["is_starred"] = o.IsStarred
	}
	if !isNil(o.IsTombstoned) {
		toSerialize["is_tombstoned"] = o.IsTombstoned
	}
	if !isNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !isNil(o.Mimetype) {
		toSerialize["mimetype"] = o.Mimetype
	}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.NonOwnerEditable) {
		toSerialize["non_owner_editable"] = o.NonOwnerEditable
	}
	if !isNil(o.NumStars) {
		toSerialize["num_stars"] = o.NumStars
	}
	if !isNil(o.OriginalH) {
		toSerialize["original_h"] = o.OriginalH
	}
	if !isNil(o.OriginalW) {
		toSerialize["original_w"] = o.OriginalW
	}
	if !isNil(o.Permalink) {
		toSerialize["permalink"] = o.Permalink
	}
	if !isNil(o.PermalinkPublic) {
		toSerialize["permalink_public"] = o.PermalinkPublic
	}
	if !isNil(o.PinnedInfo) {
		toSerialize["pinned_info"] = o.PinnedInfo
	}
	if !isNil(o.PinnedTo) {
		toSerialize["pinned_to"] = o.PinnedTo
	}
	if !isNil(o.PrettyType) {
		toSerialize["pretty_type"] = o.PrettyType
	}
	if !isNil(o.Preview) {
		toSerialize["preview"] = o.Preview
	}
	if !isNil(o.PublicUrlShared) {
		toSerialize["public_url_shared"] = o.PublicUrlShared
	}
	if !isNil(o.Reactions) {
		toSerialize["reactions"] = o.Reactions
	}
	if !isNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	if !isNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !isNil(o.SourceTeam) {
		toSerialize["source_team"] = o.SourceTeam
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.Thumb1024) {
		toSerialize["thumb_1024"] = o.Thumb1024
	}
	if !isNil(o.Thumb1024H) {
		toSerialize["thumb_1024_h"] = o.Thumb1024H
	}
	if !isNil(o.Thumb1024W) {
		toSerialize["thumb_1024_w"] = o.Thumb1024W
	}
	if !isNil(o.Thumb160) {
		toSerialize["thumb_160"] = o.Thumb160
	}
	if !isNil(o.Thumb360) {
		toSerialize["thumb_360"] = o.Thumb360
	}
	if !isNil(o.Thumb360H) {
		toSerialize["thumb_360_h"] = o.Thumb360H
	}
	if !isNil(o.Thumb360W) {
		toSerialize["thumb_360_w"] = o.Thumb360W
	}
	if !isNil(o.Thumb480) {
		toSerialize["thumb_480"] = o.Thumb480
	}
	if !isNil(o.Thumb480H) {
		toSerialize["thumb_480_h"] = o.Thumb480H
	}
	if !isNil(o.Thumb480W) {
		toSerialize["thumb_480_w"] = o.Thumb480W
	}
	if !isNil(o.Thumb64) {
		toSerialize["thumb_64"] = o.Thumb64
	}
	if !isNil(o.Thumb720) {
		toSerialize["thumb_720"] = o.Thumb720
	}
	if !isNil(o.Thumb720H) {
		toSerialize["thumb_720_h"] = o.Thumb720H
	}
	if !isNil(o.Thumb720W) {
		toSerialize["thumb_720_w"] = o.Thumb720W
	}
	if !isNil(o.Thumb80) {
		toSerialize["thumb_80"] = o.Thumb80
	}
	if !isNil(o.Thumb800) {
		toSerialize["thumb_800"] = o.Thumb800
	}
	if !isNil(o.Thumb800H) {
		toSerialize["thumb_800_h"] = o.Thumb800H
	}
	if !isNil(o.Thumb800W) {
		toSerialize["thumb_800_w"] = o.Thumb800W
	}
	if !isNil(o.Thumb960) {
		toSerialize["thumb_960"] = o.Thumb960
	}
	if !isNil(o.Thumb960H) {
		toSerialize["thumb_960_h"] = o.Thumb960H
	}
	if !isNil(o.Thumb960W) {
		toSerialize["thumb_960_w"] = o.Thumb960W
	}
	if !isNil(o.ThumbTiny) {
		toSerialize["thumb_tiny"] = o.ThumbTiny
	}
	if !isNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !isNil(o.UrlPrivate) {
		toSerialize["url_private"] = o.UrlPrivate
	}
	if !isNil(o.UrlPrivateDownload) {
		toSerialize["url_private_download"] = o.UrlPrivateDownload
	}
	if !isNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !isNil(o.UserTeam) {
		toSerialize["user_team"] = o.UserTeam
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableObjsFile struct {
	value *ObjsFile
	isSet bool
}

func (v NullableObjsFile) Get() *ObjsFile {
	return v.value
}

func (v *NullableObjsFile) Set(val *ObjsFile) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsFile) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsFile(val *ObjsFile) *NullableObjsFile {
	return &NullableObjsFile{value: val, isSet: true}
}

func (v NullableObjsFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


