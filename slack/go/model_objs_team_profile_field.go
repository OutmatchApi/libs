/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsTeamProfileField struct for ObjsTeamProfileField
type ObjsTeamProfileField struct {
	FieldName NullableString `json:"field_name,omitempty"`
	Hint string `json:"hint"`
	Id string `json:"id"`
	IsHidden *bool `json:"is_hidden,omitempty"`
	Label string `json:"label"`
	Options []ObjsTeamProfileFieldOptionsInner `json:"options,omitempty"`
	Ordering float32 `json:"ordering"`
	PossibleValues []string `json:"possible_values,omitempty"`
	Type string `json:"type"`
}

// NewObjsTeamProfileField instantiates a new ObjsTeamProfileField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsTeamProfileField(hint string, id string, label string, ordering float32, type_ string) *ObjsTeamProfileField {
	this := ObjsTeamProfileField{}
	this.Hint = hint
	this.Id = id
	this.Label = label
	this.Ordering = ordering
	this.Type = type_
	return &this
}

// NewObjsTeamProfileFieldWithDefaults instantiates a new ObjsTeamProfileField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsTeamProfileFieldWithDefaults() *ObjsTeamProfileField {
	this := ObjsTeamProfileField{}
	return &this
}

// GetFieldName returns the FieldName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsTeamProfileField) GetFieldName() string {
	if o == nil || isNil(o.FieldName.Get()) {
		var ret string
		return ret
	}
	return *o.FieldName.Get()
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsTeamProfileField) GetFieldNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FieldName.Get(), o.FieldName.IsSet()
}

// HasFieldName returns a boolean if a field has been set.
func (o *ObjsTeamProfileField) HasFieldName() bool {
	if o != nil && o.FieldName.IsSet() {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given NullableString and assigns it to the FieldName field.
func (o *ObjsTeamProfileField) SetFieldName(v string) {
	o.FieldName.Set(&v)
}
// SetFieldNameNil sets the value for FieldName to be an explicit nil
func (o *ObjsTeamProfileField) SetFieldNameNil() {
	o.FieldName.Set(nil)
}

// UnsetFieldName ensures that no value is present for FieldName, not even an explicit nil
func (o *ObjsTeamProfileField) UnsetFieldName() {
	o.FieldName.Unset()
}

// GetHint returns the Hint field value
func (o *ObjsTeamProfileField) GetHint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hint
}

// GetHintOk returns a tuple with the Hint field value
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetHintOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Hint, true
}

// SetHint sets field value
func (o *ObjsTeamProfileField) SetHint(v string) {
	o.Hint = v
}

// GetId returns the Id field value
func (o *ObjsTeamProfileField) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjsTeamProfileField) SetId(v string) {
	o.Id = v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *ObjsTeamProfileField) GetIsHidden() bool {
	if o == nil || isNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetIsHiddenOk() (*bool, bool) {
	if o == nil || isNil(o.IsHidden) {
    return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *ObjsTeamProfileField) HasIsHidden() bool {
	if o != nil && !isNil(o.IsHidden) {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *ObjsTeamProfileField) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetLabel returns the Label field value
func (o *ObjsTeamProfileField) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetLabelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ObjsTeamProfileField) SetLabel(v string) {
	o.Label = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ObjsTeamProfileField) GetOptions() []ObjsTeamProfileFieldOptionsInner {
	if o == nil || isNil(o.Options) {
		var ret []ObjsTeamProfileFieldOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetOptionsOk() ([]ObjsTeamProfileFieldOptionsInner, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ObjsTeamProfileField) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ObjsTeamProfileFieldOptionsInner and assigns it to the Options field.
func (o *ObjsTeamProfileField) SetOptions(v []ObjsTeamProfileFieldOptionsInner) {
	o.Options = v
}

// GetOrdering returns the Ordering field value
func (o *ObjsTeamProfileField) GetOrdering() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Ordering
}

// GetOrderingOk returns a tuple with the Ordering field value
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetOrderingOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ordering, true
}

// SetOrdering sets field value
func (o *ObjsTeamProfileField) SetOrdering(v float32) {
	o.Ordering = v
}

// GetPossibleValues returns the PossibleValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsTeamProfileField) GetPossibleValues() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.PossibleValues
}

// GetPossibleValuesOk returns a tuple with the PossibleValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsTeamProfileField) GetPossibleValuesOk() ([]string, bool) {
	if o == nil || isNil(o.PossibleValues) {
    return nil, false
	}
	return o.PossibleValues, true
}

// HasPossibleValues returns a boolean if a field has been set.
func (o *ObjsTeamProfileField) HasPossibleValues() bool {
	if o != nil && isNil(o.PossibleValues) {
		return true
	}

	return false
}

// SetPossibleValues gets a reference to the given []string and assigns it to the PossibleValues field.
func (o *ObjsTeamProfileField) SetPossibleValues(v []string) {
	o.PossibleValues = v
}

// GetType returns the Type field value
func (o *ObjsTeamProfileField) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ObjsTeamProfileField) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ObjsTeamProfileField) SetType(v string) {
	o.Type = v
}

func (o ObjsTeamProfileField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldName.IsSet() {
		toSerialize["field_name"] = o.FieldName.Get()
	}
	if true {
		toSerialize["hint"] = o.Hint
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IsHidden) {
		toSerialize["is_hidden"] = o.IsHidden
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if true {
		toSerialize["ordering"] = o.Ordering
	}
	if o.PossibleValues != nil {
		toSerialize["possible_values"] = o.PossibleValues
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableObjsTeamProfileField struct {
	value *ObjsTeamProfileField
	isSet bool
}

func (v NullableObjsTeamProfileField) Get() *ObjsTeamProfileField {
	return v.value
}

func (v *NullableObjsTeamProfileField) Set(val *ObjsTeamProfileField) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsTeamProfileField) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsTeamProfileField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsTeamProfileField(val *ObjsTeamProfileField) *NullableObjsTeamProfileField {
	return &NullableObjsTeamProfileField{value: val, isSet: true}
}

func (v NullableObjsTeamProfileField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsTeamProfileField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


