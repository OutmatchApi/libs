/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// TeamIntegrationLogsSchema Schema for successful response from team.integrationLogs method
type TeamIntegrationLogsSchema struct {
	Logs []TeamIntegrationLogsSchemaLogsInner `json:"logs"`
	Ok DefsOkTrue `json:"ok"`
	Paging ObjsPaging `json:"paging"`
}

// NewTeamIntegrationLogsSchema instantiates a new TeamIntegrationLogsSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamIntegrationLogsSchema(logs []TeamIntegrationLogsSchemaLogsInner, ok DefsOkTrue, paging ObjsPaging) *TeamIntegrationLogsSchema {
	this := TeamIntegrationLogsSchema{}
	this.Logs = logs
	this.Ok = ok
	this.Paging = paging
	return &this
}

// NewTeamIntegrationLogsSchemaWithDefaults instantiates a new TeamIntegrationLogsSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamIntegrationLogsSchemaWithDefaults() *TeamIntegrationLogsSchema {
	this := TeamIntegrationLogsSchema{}
	return &this
}

// GetLogs returns the Logs field value
func (o *TeamIntegrationLogsSchema) GetLogs() []TeamIntegrationLogsSchemaLogsInner {
	if o == nil {
		var ret []TeamIntegrationLogsSchemaLogsInner
		return ret
	}

	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value
// and a boolean to check if the value has been set.
func (o *TeamIntegrationLogsSchema) GetLogsOk() ([]TeamIntegrationLogsSchemaLogsInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.Logs, true
}

// SetLogs sets field value
func (o *TeamIntegrationLogsSchema) SetLogs(v []TeamIntegrationLogsSchemaLogsInner) {
	o.Logs = v
}

// GetOk returns the Ok field value
func (o *TeamIntegrationLogsSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *TeamIntegrationLogsSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *TeamIntegrationLogsSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetPaging returns the Paging field value
func (o *TeamIntegrationLogsSchema) GetPaging() ObjsPaging {
	if o == nil {
		var ret ObjsPaging
		return ret
	}

	return o.Paging
}

// GetPagingOk returns a tuple with the Paging field value
// and a boolean to check if the value has been set.
func (o *TeamIntegrationLogsSchema) GetPagingOk() (*ObjsPaging, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Paging, true
}

// SetPaging sets field value
func (o *TeamIntegrationLogsSchema) SetPaging(v ObjsPaging) {
	o.Paging = v
}

func (o TeamIntegrationLogsSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["logs"] = o.Logs
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableTeamIntegrationLogsSchema struct {
	value *TeamIntegrationLogsSchema
	isSet bool
}

func (v NullableTeamIntegrationLogsSchema) Get() *TeamIntegrationLogsSchema {
	return v.value
}

func (v *NullableTeamIntegrationLogsSchema) Set(val *TeamIntegrationLogsSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamIntegrationLogsSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamIntegrationLogsSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamIntegrationLogsSchema(val *TeamIntegrationLogsSchema) *NullableTeamIntegrationLogsSchema {
	return &NullableTeamIntegrationLogsSchema{value: val, isSet: true}
}

func (v NullableTeamIntegrationLogsSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamIntegrationLogsSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


