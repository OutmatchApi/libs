/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ConversationsJoinSuccessSchema Schema for successful response from conversations.join method
type ConversationsJoinSuccessSchema struct {
	Channel []ObjsConversationInner `json:"channel"`
	Ok DefsOkTrue `json:"ok"`
	ResponseMetadata *ResponseMetadata `json:"response_metadata,omitempty"`
	Warning *string `json:"warning,omitempty"`
}

// NewConversationsJoinSuccessSchema instantiates a new ConversationsJoinSuccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationsJoinSuccessSchema(channel []ObjsConversationInner, ok DefsOkTrue) *ConversationsJoinSuccessSchema {
	this := ConversationsJoinSuccessSchema{}
	this.Channel = channel
	this.Ok = ok
	return &this
}

// NewConversationsJoinSuccessSchemaWithDefaults instantiates a new ConversationsJoinSuccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationsJoinSuccessSchemaWithDefaults() *ConversationsJoinSuccessSchema {
	this := ConversationsJoinSuccessSchema{}
	return &this
}

// GetChannel returns the Channel field value
func (o *ConversationsJoinSuccessSchema) GetChannel() []ObjsConversationInner {
	if o == nil {
		var ret []ObjsConversationInner
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *ConversationsJoinSuccessSchema) GetChannelOk() ([]ObjsConversationInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.Channel, true
}

// SetChannel sets field value
func (o *ConversationsJoinSuccessSchema) SetChannel(v []ObjsConversationInner) {
	o.Channel = v
}

// GetOk returns the Ok field value
func (o *ConversationsJoinSuccessSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *ConversationsJoinSuccessSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *ConversationsJoinSuccessSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetResponseMetadata returns the ResponseMetadata field value if set, zero value otherwise.
func (o *ConversationsJoinSuccessSchema) GetResponseMetadata() ResponseMetadata {
	if o == nil || isNil(o.ResponseMetadata) {
		var ret ResponseMetadata
		return ret
	}
	return *o.ResponseMetadata
}

// GetResponseMetadataOk returns a tuple with the ResponseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsJoinSuccessSchema) GetResponseMetadataOk() (*ResponseMetadata, bool) {
	if o == nil || isNil(o.ResponseMetadata) {
    return nil, false
	}
	return o.ResponseMetadata, true
}

// HasResponseMetadata returns a boolean if a field has been set.
func (o *ConversationsJoinSuccessSchema) HasResponseMetadata() bool {
	if o != nil && !isNil(o.ResponseMetadata) {
		return true
	}

	return false
}

// SetResponseMetadata gets a reference to the given ResponseMetadata and assigns it to the ResponseMetadata field.
func (o *ConversationsJoinSuccessSchema) SetResponseMetadata(v ResponseMetadata) {
	o.ResponseMetadata = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *ConversationsJoinSuccessSchema) GetWarning() string {
	if o == nil || isNil(o.Warning) {
		var ret string
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationsJoinSuccessSchema) GetWarningOk() (*string, bool) {
	if o == nil || isNil(o.Warning) {
    return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *ConversationsJoinSuccessSchema) HasWarning() bool {
	if o != nil && !isNil(o.Warning) {
		return true
	}

	return false
}

// SetWarning gets a reference to the given string and assigns it to the Warning field.
func (o *ConversationsJoinSuccessSchema) SetWarning(v string) {
	o.Warning = &v
}

func (o ConversationsJoinSuccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if !isNil(o.ResponseMetadata) {
		toSerialize["response_metadata"] = o.ResponseMetadata
	}
	if !isNil(o.Warning) {
		toSerialize["warning"] = o.Warning
	}
	return json.Marshal(toSerialize)
}

type NullableConversationsJoinSuccessSchema struct {
	value *ConversationsJoinSuccessSchema
	isSet bool
}

func (v NullableConversationsJoinSuccessSchema) Get() *ConversationsJoinSuccessSchema {
	return v.value
}

func (v *NullableConversationsJoinSuccessSchema) Set(val *ConversationsJoinSuccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationsJoinSuccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationsJoinSuccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationsJoinSuccessSchema(val *ConversationsJoinSuccessSchema) *NullableConversationsJoinSuccessSchema {
	return &NullableConversationsJoinSuccessSchema{value: val, isSet: true}
}

func (v NullableConversationsJoinSuccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationsJoinSuccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


