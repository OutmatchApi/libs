/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// DeprecationWarning struct for DeprecationWarning
type DeprecationWarning struct {
	Messages []string `json:"messages"`
	Warnings []string `json:"warnings"`
}

// NewDeprecationWarning instantiates a new DeprecationWarning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecationWarning(messages []string, warnings []string) *DeprecationWarning {
	this := DeprecationWarning{}
	this.Messages = messages
	this.Warnings = warnings
	return &this
}

// NewDeprecationWarningWithDefaults instantiates a new DeprecationWarning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecationWarningWithDefaults() *DeprecationWarning {
	this := DeprecationWarning{}
	return &this
}

// GetMessages returns the Messages field value
func (o *DeprecationWarning) GetMessages() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *DeprecationWarning) GetMessagesOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *DeprecationWarning) SetMessages(v []string) {
	o.Messages = v
}

// GetWarnings returns the Warnings field value
func (o *DeprecationWarning) GetWarnings() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *DeprecationWarning) GetWarningsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Warnings, true
}

// SetWarnings sets field value
func (o *DeprecationWarning) SetWarnings(v []string) {
	o.Warnings = v
}

func (o DeprecationWarning) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["messages"] = o.Messages
	}
	if true {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableDeprecationWarning struct {
	value *DeprecationWarning
	isSet bool
}

func (v NullableDeprecationWarning) Get() *DeprecationWarning {
	return v.value
}

func (v *NullableDeprecationWarning) Set(val *DeprecationWarning) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecationWarning) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecationWarning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecationWarning(val *DeprecationWarning) *NullableDeprecationWarning {
	return &NullableDeprecationWarning{value: val, isSet: true}
}

func (v NullableDeprecationWarning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecationWarning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


