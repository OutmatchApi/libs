/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsChannelPurpose struct for ObjsChannelPurpose
type ObjsChannelPurpose struct {
	Creator string `json:"creator"`
	LastSet int32 `json:"last_set"`
	Value string `json:"value"`
}

// NewObjsChannelPurpose instantiates a new ObjsChannelPurpose object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsChannelPurpose(creator string, lastSet int32, value string) *ObjsChannelPurpose {
	this := ObjsChannelPurpose{}
	this.Creator = creator
	this.LastSet = lastSet
	this.Value = value
	return &this
}

// NewObjsChannelPurposeWithDefaults instantiates a new ObjsChannelPurpose object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsChannelPurposeWithDefaults() *ObjsChannelPurpose {
	this := ObjsChannelPurpose{}
	return &this
}

// GetCreator returns the Creator field value
func (o *ObjsChannelPurpose) GetCreator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
func (o *ObjsChannelPurpose) GetCreatorOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Creator, true
}

// SetCreator sets field value
func (o *ObjsChannelPurpose) SetCreator(v string) {
	o.Creator = v
}

// GetLastSet returns the LastSet field value
func (o *ObjsChannelPurpose) GetLastSet() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LastSet
}

// GetLastSetOk returns a tuple with the LastSet field value
// and a boolean to check if the value has been set.
func (o *ObjsChannelPurpose) GetLastSetOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastSet, true
}

// SetLastSet sets field value
func (o *ObjsChannelPurpose) SetLastSet(v int32) {
	o.LastSet = v
}

// GetValue returns the Value field value
func (o *ObjsChannelPurpose) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ObjsChannelPurpose) GetValueOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ObjsChannelPurpose) SetValue(v string) {
	o.Value = v
}

func (o ObjsChannelPurpose) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["creator"] = o.Creator
	}
	if true {
		toSerialize["last_set"] = o.LastSet
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableObjsChannelPurpose struct {
	value *ObjsChannelPurpose
	isSet bool
}

func (v NullableObjsChannelPurpose) Get() *ObjsChannelPurpose {
	return v.value
}

func (v *NullableObjsChannelPurpose) Set(val *ObjsChannelPurpose) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsChannelPurpose) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsChannelPurpose) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsChannelPurpose(val *ObjsChannelPurpose) *NullableObjsChannelPurpose {
	return &NullableObjsChannelPurpose{value: val, isSet: true}
}

func (v NullableObjsChannelPurpose) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsChannelPurpose) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


