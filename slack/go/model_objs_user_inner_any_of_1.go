/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsUserInnerAnyOf1 enterprise user
type ObjsUserInnerAnyOf1 struct {
	// refercing to bug: https://jira.tinyspeck.com/browse/EVALUE-1559
	Color *string `json:"color,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	EnterpriseUser *ObjsEnterpriseUser `json:"enterprise_user,omitempty"`
	Has2fa *bool `json:"has_2fa,omitempty"`
	Id string `json:"id"`
	IsAdmin *bool `json:"is_admin,omitempty"`
	IsAppUser bool `json:"is_app_user"`
	IsBot bool `json:"is_bot"`
	IsExternal *bool `json:"is_external,omitempty"`
	IsForgotten *bool `json:"is_forgotten,omitempty"`
	IsOwner *bool `json:"is_owner,omitempty"`
	IsPrimaryOwner *bool `json:"is_primary_owner,omitempty"`
	IsRestricted *bool `json:"is_restricted,omitempty"`
	IsStranger *bool `json:"is_stranger,omitempty"`
	IsUltraRestricted *bool `json:"is_ultra_restricted,omitempty"`
	Locale *string `json:"locale,omitempty"`
	Name string `json:"name"`
	Presence *string `json:"presence,omitempty"`
	Profile ObjsUserProfile `json:"profile"`
	RealName *string `json:"real_name,omitempty"`
	TeamId *string `json:"team_id,omitempty"`
	TeamProfile *ObjsUserInnerAnyOfTeamProfile `json:"team_profile,omitempty"`
	Teams []string `json:"teams,omitempty"`
	TwoFactorType *string `json:"two_factor_type,omitempty"`
	Tz []ObjsTeamDiscoverableInner `json:"tz,omitempty"`
	TzLabel *string `json:"tz_label,omitempty"`
	TzOffset *float32 `json:"tz_offset,omitempty"`
	Updated float32 `json:"updated"`
}

// NewObjsUserInnerAnyOf1 instantiates a new ObjsUserInnerAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsUserInnerAnyOf1(id string, isAppUser bool, isBot bool, name string, profile ObjsUserProfile, updated float32) *ObjsUserInnerAnyOf1 {
	this := ObjsUserInnerAnyOf1{}
	this.Id = id
	this.IsAppUser = isAppUser
	this.IsBot = isBot
	this.Name = name
	this.Profile = profile
	this.Updated = updated
	return &this
}

// NewObjsUserInnerAnyOf1WithDefaults instantiates a new ObjsUserInnerAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsUserInnerAnyOf1WithDefaults() *ObjsUserInnerAnyOf1 {
	this := ObjsUserInnerAnyOf1{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetColor() string {
	if o == nil || isNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetColorOk() (*string, bool) {
	if o == nil || isNil(o.Color) {
    return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasColor() bool {
	if o != nil && !isNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ObjsUserInnerAnyOf1) SetColor(v string) {
	o.Color = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetDeleted() bool {
	if o == nil || isNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetDeletedOk() (*bool, bool) {
	if o == nil || isNil(o.Deleted) {
    return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasDeleted() bool {
	if o != nil && !isNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *ObjsUserInnerAnyOf1) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEnterpriseUser returns the EnterpriseUser field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetEnterpriseUser() ObjsEnterpriseUser {
	if o == nil || isNil(o.EnterpriseUser) {
		var ret ObjsEnterpriseUser
		return ret
	}
	return *o.EnterpriseUser
}

// GetEnterpriseUserOk returns a tuple with the EnterpriseUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetEnterpriseUserOk() (*ObjsEnterpriseUser, bool) {
	if o == nil || isNil(o.EnterpriseUser) {
    return nil, false
	}
	return o.EnterpriseUser, true
}

// HasEnterpriseUser returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasEnterpriseUser() bool {
	if o != nil && !isNil(o.EnterpriseUser) {
		return true
	}

	return false
}

// SetEnterpriseUser gets a reference to the given ObjsEnterpriseUser and assigns it to the EnterpriseUser field.
func (o *ObjsUserInnerAnyOf1) SetEnterpriseUser(v ObjsEnterpriseUser) {
	o.EnterpriseUser = &v
}

// GetHas2fa returns the Has2fa field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetHas2fa() bool {
	if o == nil || isNil(o.Has2fa) {
		var ret bool
		return ret
	}
	return *o.Has2fa
}

// GetHas2faOk returns a tuple with the Has2fa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetHas2faOk() (*bool, bool) {
	if o == nil || isNil(o.Has2fa) {
    return nil, false
	}
	return o.Has2fa, true
}

// HasHas2fa returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasHas2fa() bool {
	if o != nil && !isNil(o.Has2fa) {
		return true
	}

	return false
}

// SetHas2fa gets a reference to the given bool and assigns it to the Has2fa field.
func (o *ObjsUserInnerAnyOf1) SetHas2fa(v bool) {
	o.Has2fa = &v
}

// GetId returns the Id field value
func (o *ObjsUserInnerAnyOf1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjsUserInnerAnyOf1) SetId(v string) {
	o.Id = v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsAdmin() bool {
	if o == nil || isNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsAdminOk() (*bool, bool) {
	if o == nil || isNil(o.IsAdmin) {
    return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsAdmin() bool {
	if o != nil && !isNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *ObjsUserInnerAnyOf1) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetIsAppUser returns the IsAppUser field value
func (o *ObjsUserInnerAnyOf1) GetIsAppUser() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAppUser
}

// GetIsAppUserOk returns a tuple with the IsAppUser field value
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsAppUserOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsAppUser, true
}

// SetIsAppUser sets field value
func (o *ObjsUserInnerAnyOf1) SetIsAppUser(v bool) {
	o.IsAppUser = v
}

// GetIsBot returns the IsBot field value
func (o *ObjsUserInnerAnyOf1) GetIsBot() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBot
}

// GetIsBotOk returns a tuple with the IsBot field value
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsBotOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsBot, true
}

// SetIsBot sets field value
func (o *ObjsUserInnerAnyOf1) SetIsBot(v bool) {
	o.IsBot = v
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsExternal() bool {
	if o == nil || isNil(o.IsExternal) {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsExternalOk() (*bool, bool) {
	if o == nil || isNil(o.IsExternal) {
    return nil, false
	}
	return o.IsExternal, true
}

// HasIsExternal returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsExternal() bool {
	if o != nil && !isNil(o.IsExternal) {
		return true
	}

	return false
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *ObjsUserInnerAnyOf1) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetIsForgotten returns the IsForgotten field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsForgotten() bool {
	if o == nil || isNil(o.IsForgotten) {
		var ret bool
		return ret
	}
	return *o.IsForgotten
}

// GetIsForgottenOk returns a tuple with the IsForgotten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsForgottenOk() (*bool, bool) {
	if o == nil || isNil(o.IsForgotten) {
    return nil, false
	}
	return o.IsForgotten, true
}

// HasIsForgotten returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsForgotten() bool {
	if o != nil && !isNil(o.IsForgotten) {
		return true
	}

	return false
}

// SetIsForgotten gets a reference to the given bool and assigns it to the IsForgotten field.
func (o *ObjsUserInnerAnyOf1) SetIsForgotten(v bool) {
	o.IsForgotten = &v
}

// GetIsOwner returns the IsOwner field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsOwner() bool {
	if o == nil || isNil(o.IsOwner) {
		var ret bool
		return ret
	}
	return *o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsOwnerOk() (*bool, bool) {
	if o == nil || isNil(o.IsOwner) {
    return nil, false
	}
	return o.IsOwner, true
}

// HasIsOwner returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsOwner() bool {
	if o != nil && !isNil(o.IsOwner) {
		return true
	}

	return false
}

// SetIsOwner gets a reference to the given bool and assigns it to the IsOwner field.
func (o *ObjsUserInnerAnyOf1) SetIsOwner(v bool) {
	o.IsOwner = &v
}

// GetIsPrimaryOwner returns the IsPrimaryOwner field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsPrimaryOwner() bool {
	if o == nil || isNil(o.IsPrimaryOwner) {
		var ret bool
		return ret
	}
	return *o.IsPrimaryOwner
}

// GetIsPrimaryOwnerOk returns a tuple with the IsPrimaryOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsPrimaryOwnerOk() (*bool, bool) {
	if o == nil || isNil(o.IsPrimaryOwner) {
    return nil, false
	}
	return o.IsPrimaryOwner, true
}

// HasIsPrimaryOwner returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsPrimaryOwner() bool {
	if o != nil && !isNil(o.IsPrimaryOwner) {
		return true
	}

	return false
}

// SetIsPrimaryOwner gets a reference to the given bool and assigns it to the IsPrimaryOwner field.
func (o *ObjsUserInnerAnyOf1) SetIsPrimaryOwner(v bool) {
	o.IsPrimaryOwner = &v
}

// GetIsRestricted returns the IsRestricted field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsRestricted() bool {
	if o == nil || isNil(o.IsRestricted) {
		var ret bool
		return ret
	}
	return *o.IsRestricted
}

// GetIsRestrictedOk returns a tuple with the IsRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsRestrictedOk() (*bool, bool) {
	if o == nil || isNil(o.IsRestricted) {
    return nil, false
	}
	return o.IsRestricted, true
}

// HasIsRestricted returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsRestricted() bool {
	if o != nil && !isNil(o.IsRestricted) {
		return true
	}

	return false
}

// SetIsRestricted gets a reference to the given bool and assigns it to the IsRestricted field.
func (o *ObjsUserInnerAnyOf1) SetIsRestricted(v bool) {
	o.IsRestricted = &v
}

// GetIsStranger returns the IsStranger field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsStranger() bool {
	if o == nil || isNil(o.IsStranger) {
		var ret bool
		return ret
	}
	return *o.IsStranger
}

// GetIsStrangerOk returns a tuple with the IsStranger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsStrangerOk() (*bool, bool) {
	if o == nil || isNil(o.IsStranger) {
    return nil, false
	}
	return o.IsStranger, true
}

// HasIsStranger returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsStranger() bool {
	if o != nil && !isNil(o.IsStranger) {
		return true
	}

	return false
}

// SetIsStranger gets a reference to the given bool and assigns it to the IsStranger field.
func (o *ObjsUserInnerAnyOf1) SetIsStranger(v bool) {
	o.IsStranger = &v
}

// GetIsUltraRestricted returns the IsUltraRestricted field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetIsUltraRestricted() bool {
	if o == nil || isNil(o.IsUltraRestricted) {
		var ret bool
		return ret
	}
	return *o.IsUltraRestricted
}

// GetIsUltraRestrictedOk returns a tuple with the IsUltraRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetIsUltraRestrictedOk() (*bool, bool) {
	if o == nil || isNil(o.IsUltraRestricted) {
    return nil, false
	}
	return o.IsUltraRestricted, true
}

// HasIsUltraRestricted returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasIsUltraRestricted() bool {
	if o != nil && !isNil(o.IsUltraRestricted) {
		return true
	}

	return false
}

// SetIsUltraRestricted gets a reference to the given bool and assigns it to the IsUltraRestricted field.
func (o *ObjsUserInnerAnyOf1) SetIsUltraRestricted(v bool) {
	o.IsUltraRestricted = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetLocale() string {
	if o == nil || isNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetLocaleOk() (*string, bool) {
	if o == nil || isNil(o.Locale) {
    return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasLocale() bool {
	if o != nil && !isNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *ObjsUserInnerAnyOf1) SetLocale(v string) {
	o.Locale = &v
}

// GetName returns the Name field value
func (o *ObjsUserInnerAnyOf1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ObjsUserInnerAnyOf1) SetName(v string) {
	o.Name = v
}

// GetPresence returns the Presence field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetPresence() string {
	if o == nil || isNil(o.Presence) {
		var ret string
		return ret
	}
	return *o.Presence
}

// GetPresenceOk returns a tuple with the Presence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetPresenceOk() (*string, bool) {
	if o == nil || isNil(o.Presence) {
    return nil, false
	}
	return o.Presence, true
}

// HasPresence returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasPresence() bool {
	if o != nil && !isNil(o.Presence) {
		return true
	}

	return false
}

// SetPresence gets a reference to the given string and assigns it to the Presence field.
func (o *ObjsUserInnerAnyOf1) SetPresence(v string) {
	o.Presence = &v
}

// GetProfile returns the Profile field value
func (o *ObjsUserInnerAnyOf1) GetProfile() ObjsUserProfile {
	if o == nil {
		var ret ObjsUserProfile
		return ret
	}

	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetProfileOk() (*ObjsUserProfile, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Profile, true
}

// SetProfile sets field value
func (o *ObjsUserInnerAnyOf1) SetProfile(v ObjsUserProfile) {
	o.Profile = v
}

// GetRealName returns the RealName field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetRealName() string {
	if o == nil || isNil(o.RealName) {
		var ret string
		return ret
	}
	return *o.RealName
}

// GetRealNameOk returns a tuple with the RealName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetRealNameOk() (*string, bool) {
	if o == nil || isNil(o.RealName) {
    return nil, false
	}
	return o.RealName, true
}

// HasRealName returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasRealName() bool {
	if o != nil && !isNil(o.RealName) {
		return true
	}

	return false
}

// SetRealName gets a reference to the given string and assigns it to the RealName field.
func (o *ObjsUserInnerAnyOf1) SetRealName(v string) {
	o.RealName = &v
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTeamId() string {
	if o == nil || isNil(o.TeamId) {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTeamIdOk() (*string, bool) {
	if o == nil || isNil(o.TeamId) {
    return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTeamId() bool {
	if o != nil && !isNil(o.TeamId) {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *ObjsUserInnerAnyOf1) SetTeamId(v string) {
	o.TeamId = &v
}

// GetTeamProfile returns the TeamProfile field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTeamProfile() ObjsUserInnerAnyOfTeamProfile {
	if o == nil || isNil(o.TeamProfile) {
		var ret ObjsUserInnerAnyOfTeamProfile
		return ret
	}
	return *o.TeamProfile
}

// GetTeamProfileOk returns a tuple with the TeamProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTeamProfileOk() (*ObjsUserInnerAnyOfTeamProfile, bool) {
	if o == nil || isNil(o.TeamProfile) {
    return nil, false
	}
	return o.TeamProfile, true
}

// HasTeamProfile returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTeamProfile() bool {
	if o != nil && !isNil(o.TeamProfile) {
		return true
	}

	return false
}

// SetTeamProfile gets a reference to the given ObjsUserInnerAnyOfTeamProfile and assigns it to the TeamProfile field.
func (o *ObjsUserInnerAnyOf1) SetTeamProfile(v ObjsUserInnerAnyOfTeamProfile) {
	o.TeamProfile = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTeams() []string {
	if o == nil || isNil(o.Teams) {
		var ret []string
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTeamsOk() ([]string, bool) {
	if o == nil || isNil(o.Teams) {
    return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTeams() bool {
	if o != nil && !isNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []string and assigns it to the Teams field.
func (o *ObjsUserInnerAnyOf1) SetTeams(v []string) {
	o.Teams = v
}

// GetTwoFactorType returns the TwoFactorType field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTwoFactorType() string {
	if o == nil || isNil(o.TwoFactorType) {
		var ret string
		return ret
	}
	return *o.TwoFactorType
}

// GetTwoFactorTypeOk returns a tuple with the TwoFactorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTwoFactorTypeOk() (*string, bool) {
	if o == nil || isNil(o.TwoFactorType) {
    return nil, false
	}
	return o.TwoFactorType, true
}

// HasTwoFactorType returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTwoFactorType() bool {
	if o != nil && !isNil(o.TwoFactorType) {
		return true
	}

	return false
}

// SetTwoFactorType gets a reference to the given string and assigns it to the TwoFactorType field.
func (o *ObjsUserInnerAnyOf1) SetTwoFactorType(v string) {
	o.TwoFactorType = &v
}

// GetTz returns the Tz field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTz() []ObjsTeamDiscoverableInner {
	if o == nil || isNil(o.Tz) {
		var ret []ObjsTeamDiscoverableInner
		return ret
	}
	return o.Tz
}

// GetTzOk returns a tuple with the Tz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTzOk() ([]ObjsTeamDiscoverableInner, bool) {
	if o == nil || isNil(o.Tz) {
    return nil, false
	}
	return o.Tz, true
}

// HasTz returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTz() bool {
	if o != nil && !isNil(o.Tz) {
		return true
	}

	return false
}

// SetTz gets a reference to the given []ObjsTeamDiscoverableInner and assigns it to the Tz field.
func (o *ObjsUserInnerAnyOf1) SetTz(v []ObjsTeamDiscoverableInner) {
	o.Tz = v
}

// GetTzLabel returns the TzLabel field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTzLabel() string {
	if o == nil || isNil(o.TzLabel) {
		var ret string
		return ret
	}
	return *o.TzLabel
}

// GetTzLabelOk returns a tuple with the TzLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTzLabelOk() (*string, bool) {
	if o == nil || isNil(o.TzLabel) {
    return nil, false
	}
	return o.TzLabel, true
}

// HasTzLabel returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTzLabel() bool {
	if o != nil && !isNil(o.TzLabel) {
		return true
	}

	return false
}

// SetTzLabel gets a reference to the given string and assigns it to the TzLabel field.
func (o *ObjsUserInnerAnyOf1) SetTzLabel(v string) {
	o.TzLabel = &v
}

// GetTzOffset returns the TzOffset field value if set, zero value otherwise.
func (o *ObjsUserInnerAnyOf1) GetTzOffset() float32 {
	if o == nil || isNil(o.TzOffset) {
		var ret float32
		return ret
	}
	return *o.TzOffset
}

// GetTzOffsetOk returns a tuple with the TzOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetTzOffsetOk() (*float32, bool) {
	if o == nil || isNil(o.TzOffset) {
    return nil, false
	}
	return o.TzOffset, true
}

// HasTzOffset returns a boolean if a field has been set.
func (o *ObjsUserInnerAnyOf1) HasTzOffset() bool {
	if o != nil && !isNil(o.TzOffset) {
		return true
	}

	return false
}

// SetTzOffset gets a reference to the given float32 and assigns it to the TzOffset field.
func (o *ObjsUserInnerAnyOf1) SetTzOffset(v float32) {
	o.TzOffset = &v
}

// GetUpdated returns the Updated field value
func (o *ObjsUserInnerAnyOf1) GetUpdated() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *ObjsUserInnerAnyOf1) GetUpdatedOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *ObjsUserInnerAnyOf1) SetUpdated(v float32) {
	o.Updated = v
}

func (o ObjsUserInnerAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !isNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !isNil(o.EnterpriseUser) {
		toSerialize["enterprise_user"] = o.EnterpriseUser
	}
	if !isNil(o.Has2fa) {
		toSerialize["has_2fa"] = o.Has2fa
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IsAdmin) {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if true {
		toSerialize["is_app_user"] = o.IsAppUser
	}
	if true {
		toSerialize["is_bot"] = o.IsBot
	}
	if !isNil(o.IsExternal) {
		toSerialize["is_external"] = o.IsExternal
	}
	if !isNil(o.IsForgotten) {
		toSerialize["is_forgotten"] = o.IsForgotten
	}
	if !isNil(o.IsOwner) {
		toSerialize["is_owner"] = o.IsOwner
	}
	if !isNil(o.IsPrimaryOwner) {
		toSerialize["is_primary_owner"] = o.IsPrimaryOwner
	}
	if !isNil(o.IsRestricted) {
		toSerialize["is_restricted"] = o.IsRestricted
	}
	if !isNil(o.IsStranger) {
		toSerialize["is_stranger"] = o.IsStranger
	}
	if !isNil(o.IsUltraRestricted) {
		toSerialize["is_ultra_restricted"] = o.IsUltraRestricted
	}
	if !isNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Presence) {
		toSerialize["presence"] = o.Presence
	}
	if true {
		toSerialize["profile"] = o.Profile
	}
	if !isNil(o.RealName) {
		toSerialize["real_name"] = o.RealName
	}
	if !isNil(o.TeamId) {
		toSerialize["team_id"] = o.TeamId
	}
	if !isNil(o.TeamProfile) {
		toSerialize["team_profile"] = o.TeamProfile
	}
	if !isNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	if !isNil(o.TwoFactorType) {
		toSerialize["two_factor_type"] = o.TwoFactorType
	}
	if !isNil(o.Tz) {
		toSerialize["tz"] = o.Tz
	}
	if !isNil(o.TzLabel) {
		toSerialize["tz_label"] = o.TzLabel
	}
	if !isNil(o.TzOffset) {
		toSerialize["tz_offset"] = o.TzOffset
	}
	if true {
		toSerialize["updated"] = o.Updated
	}
	return json.Marshal(toSerialize)
}

type NullableObjsUserInnerAnyOf1 struct {
	value *ObjsUserInnerAnyOf1
	isSet bool
}

func (v NullableObjsUserInnerAnyOf1) Get() *ObjsUserInnerAnyOf1 {
	return v.value
}

func (v *NullableObjsUserInnerAnyOf1) Set(val *ObjsUserInnerAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsUserInnerAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsUserInnerAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsUserInnerAnyOf1(val *ObjsUserInnerAnyOf1) *NullableObjsUserInnerAnyOf1 {
	return &NullableObjsUserInnerAnyOf1{value: val, isSet: true}
}

func (v NullableObjsUserInnerAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsUserInnerAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


