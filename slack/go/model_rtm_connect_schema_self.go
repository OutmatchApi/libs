/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// RtmConnectSchemaSelf struct for RtmConnectSchemaSelf
type RtmConnectSchemaSelf struct {
	Id string `json:"id"`
	Name string `json:"name"`
}

// NewRtmConnectSchemaSelf instantiates a new RtmConnectSchemaSelf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRtmConnectSchemaSelf(id string, name string) *RtmConnectSchemaSelf {
	this := RtmConnectSchemaSelf{}
	this.Id = id
	this.Name = name
	return &this
}

// NewRtmConnectSchemaSelfWithDefaults instantiates a new RtmConnectSchemaSelf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRtmConnectSchemaSelfWithDefaults() *RtmConnectSchemaSelf {
	this := RtmConnectSchemaSelf{}
	return &this
}

// GetId returns the Id field value
func (o *RtmConnectSchemaSelf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RtmConnectSchemaSelf) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RtmConnectSchemaSelf) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RtmConnectSchemaSelf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RtmConnectSchemaSelf) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RtmConnectSchemaSelf) SetName(v string) {
	o.Name = v
}

func (o RtmConnectSchemaSelf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableRtmConnectSchemaSelf struct {
	value *RtmConnectSchemaSelf
	isSet bool
}

func (v NullableRtmConnectSchemaSelf) Get() *RtmConnectSchemaSelf {
	return v.value
}

func (v *NullableRtmConnectSchemaSelf) Set(val *RtmConnectSchemaSelf) {
	v.value = val
	v.isSet = true
}

func (v NullableRtmConnectSchemaSelf) IsSet() bool {
	return v.isSet
}

func (v *NullableRtmConnectSchemaSelf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRtmConnectSchemaSelf(val *RtmConnectSchemaSelf) *NullableRtmConnectSchemaSelf {
	return &NullableRtmConnectSchemaSelf{value: val, isSet: true}
}

func (v NullableRtmConnectSchemaSelf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRtmConnectSchemaSelf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


