/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// APIMethodUsersGetPresence Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
type APIMethodUsersGetPresence struct {
	AutoAway *bool `json:"auto_away,omitempty"`
	ConnectionCount *int32 `json:"connection_count,omitempty"`
	LastActivity *int32 `json:"last_activity,omitempty"`
	ManualAway *bool `json:"manual_away,omitempty"`
	Ok DefsOkTrue `json:"ok"`
	Online *bool `json:"online,omitempty"`
	Presence string `json:"presence"`
	AdditionalProperties map[string]interface{}
}

type _APIMethodUsersGetPresence APIMethodUsersGetPresence

// NewAPIMethodUsersGetPresence instantiates a new APIMethodUsersGetPresence object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIMethodUsersGetPresence(ok DefsOkTrue, presence string) *APIMethodUsersGetPresence {
	this := APIMethodUsersGetPresence{}
	this.Ok = ok
	this.Presence = presence
	return &this
}

// NewAPIMethodUsersGetPresenceWithDefaults instantiates a new APIMethodUsersGetPresence object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIMethodUsersGetPresenceWithDefaults() *APIMethodUsersGetPresence {
	this := APIMethodUsersGetPresence{}
	return &this
}

// GetAutoAway returns the AutoAway field value if set, zero value otherwise.
func (o *APIMethodUsersGetPresence) GetAutoAway() bool {
	if o == nil || isNil(o.AutoAway) {
		var ret bool
		return ret
	}
	return *o.AutoAway
}

// GetAutoAwayOk returns a tuple with the AutoAway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetAutoAwayOk() (*bool, bool) {
	if o == nil || isNil(o.AutoAway) {
    return nil, false
	}
	return o.AutoAway, true
}

// HasAutoAway returns a boolean if a field has been set.
func (o *APIMethodUsersGetPresence) HasAutoAway() bool {
	if o != nil && !isNil(o.AutoAway) {
		return true
	}

	return false
}

// SetAutoAway gets a reference to the given bool and assigns it to the AutoAway field.
func (o *APIMethodUsersGetPresence) SetAutoAway(v bool) {
	o.AutoAway = &v
}

// GetConnectionCount returns the ConnectionCount field value if set, zero value otherwise.
func (o *APIMethodUsersGetPresence) GetConnectionCount() int32 {
	if o == nil || isNil(o.ConnectionCount) {
		var ret int32
		return ret
	}
	return *o.ConnectionCount
}

// GetConnectionCountOk returns a tuple with the ConnectionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetConnectionCountOk() (*int32, bool) {
	if o == nil || isNil(o.ConnectionCount) {
    return nil, false
	}
	return o.ConnectionCount, true
}

// HasConnectionCount returns a boolean if a field has been set.
func (o *APIMethodUsersGetPresence) HasConnectionCount() bool {
	if o != nil && !isNil(o.ConnectionCount) {
		return true
	}

	return false
}

// SetConnectionCount gets a reference to the given int32 and assigns it to the ConnectionCount field.
func (o *APIMethodUsersGetPresence) SetConnectionCount(v int32) {
	o.ConnectionCount = &v
}

// GetLastActivity returns the LastActivity field value if set, zero value otherwise.
func (o *APIMethodUsersGetPresence) GetLastActivity() int32 {
	if o == nil || isNil(o.LastActivity) {
		var ret int32
		return ret
	}
	return *o.LastActivity
}

// GetLastActivityOk returns a tuple with the LastActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetLastActivityOk() (*int32, bool) {
	if o == nil || isNil(o.LastActivity) {
    return nil, false
	}
	return o.LastActivity, true
}

// HasLastActivity returns a boolean if a field has been set.
func (o *APIMethodUsersGetPresence) HasLastActivity() bool {
	if o != nil && !isNil(o.LastActivity) {
		return true
	}

	return false
}

// SetLastActivity gets a reference to the given int32 and assigns it to the LastActivity field.
func (o *APIMethodUsersGetPresence) SetLastActivity(v int32) {
	o.LastActivity = &v
}

// GetManualAway returns the ManualAway field value if set, zero value otherwise.
func (o *APIMethodUsersGetPresence) GetManualAway() bool {
	if o == nil || isNil(o.ManualAway) {
		var ret bool
		return ret
	}
	return *o.ManualAway
}

// GetManualAwayOk returns a tuple with the ManualAway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetManualAwayOk() (*bool, bool) {
	if o == nil || isNil(o.ManualAway) {
    return nil, false
	}
	return o.ManualAway, true
}

// HasManualAway returns a boolean if a field has been set.
func (o *APIMethodUsersGetPresence) HasManualAway() bool {
	if o != nil && !isNil(o.ManualAway) {
		return true
	}

	return false
}

// SetManualAway gets a reference to the given bool and assigns it to the ManualAway field.
func (o *APIMethodUsersGetPresence) SetManualAway(v bool) {
	o.ManualAway = &v
}

// GetOk returns the Ok field value
func (o *APIMethodUsersGetPresence) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *APIMethodUsersGetPresence) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *APIMethodUsersGetPresence) GetOnline() bool {
	if o == nil || isNil(o.Online) {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetOnlineOk() (*bool, bool) {
	if o == nil || isNil(o.Online) {
    return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *APIMethodUsersGetPresence) HasOnline() bool {
	if o != nil && !isNil(o.Online) {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *APIMethodUsersGetPresence) SetOnline(v bool) {
	o.Online = &v
}

// GetPresence returns the Presence field value
func (o *APIMethodUsersGetPresence) GetPresence() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Presence
}

// GetPresenceOk returns a tuple with the Presence field value
// and a boolean to check if the value has been set.
func (o *APIMethodUsersGetPresence) GetPresenceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Presence, true
}

// SetPresence sets field value
func (o *APIMethodUsersGetPresence) SetPresence(v string) {
	o.Presence = v
}

func (o APIMethodUsersGetPresence) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AutoAway) {
		toSerialize["auto_away"] = o.AutoAway
	}
	if !isNil(o.ConnectionCount) {
		toSerialize["connection_count"] = o.ConnectionCount
	}
	if !isNil(o.LastActivity) {
		toSerialize["last_activity"] = o.LastActivity
	}
	if !isNil(o.ManualAway) {
		toSerialize["manual_away"] = o.ManualAway
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if !isNil(o.Online) {
		toSerialize["online"] = o.Online
	}
	if true {
		toSerialize["presence"] = o.Presence
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *APIMethodUsersGetPresence) UnmarshalJSON(bytes []byte) (err error) {
	varAPIMethodUsersGetPresence := _APIMethodUsersGetPresence{}

	if err = json.Unmarshal(bytes, &varAPIMethodUsersGetPresence); err == nil {
		*o = APIMethodUsersGetPresence(varAPIMethodUsersGetPresence)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "auto_away")
		delete(additionalProperties, "connection_count")
		delete(additionalProperties, "last_activity")
		delete(additionalProperties, "manual_away")
		delete(additionalProperties, "ok")
		delete(additionalProperties, "online")
		delete(additionalProperties, "presence")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAPIMethodUsersGetPresence struct {
	value *APIMethodUsersGetPresence
	isSet bool
}

func (v NullableAPIMethodUsersGetPresence) Get() *APIMethodUsersGetPresence {
	return v.value
}

func (v *NullableAPIMethodUsersGetPresence) Set(val *APIMethodUsersGetPresence) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIMethodUsersGetPresence) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIMethodUsersGetPresence) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIMethodUsersGetPresence(val *APIMethodUsersGetPresence) *NullableAPIMethodUsersGetPresence {
	return &NullableAPIMethodUsersGetPresence{value: val, isSet: true}
}

func (v NullableAPIMethodUsersGetPresence) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIMethodUsersGetPresence) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


