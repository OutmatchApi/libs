/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ConversationIMChannelObjectFromConversationsMethodsSharesInner struct for ConversationIMChannelObjectFromConversationsMethodsSharesInner
type ConversationIMChannelObjectFromConversationsMethodsSharesInner struct {
	DateCreate int32 `json:"date_create"`
	Id string `json:"id"`
	IsActive bool `json:"is_active"`
	Name string `json:"name"`
	Team ObjsTeam `json:"team"`
}

// NewConversationIMChannelObjectFromConversationsMethodsSharesInner instantiates a new ConversationIMChannelObjectFromConversationsMethodsSharesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationIMChannelObjectFromConversationsMethodsSharesInner(dateCreate int32, id string, isActive bool, name string, team ObjsTeam) *ConversationIMChannelObjectFromConversationsMethodsSharesInner {
	this := ConversationIMChannelObjectFromConversationsMethodsSharesInner{}
	this.DateCreate = dateCreate
	this.Id = id
	this.IsActive = isActive
	this.Name = name
	this.Team = team
	return &this
}

// NewConversationIMChannelObjectFromConversationsMethodsSharesInnerWithDefaults instantiates a new ConversationIMChannelObjectFromConversationsMethodsSharesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationIMChannelObjectFromConversationsMethodsSharesInnerWithDefaults() *ConversationIMChannelObjectFromConversationsMethodsSharesInner {
	this := ConversationIMChannelObjectFromConversationsMethodsSharesInner{}
	return &this
}

// GetDateCreate returns the DateCreate field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetDateCreate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DateCreate
}

// GetDateCreateOk returns a tuple with the DateCreate field value
// and a boolean to check if the value has been set.
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetDateCreateOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DateCreate, true
}

// SetDateCreate sets field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) SetDateCreate(v int32) {
	o.DateCreate = v
}

// GetId returns the Id field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) SetId(v string) {
	o.Id = v
}

// GetIsActive returns the IsActive field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetIsActiveOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) SetIsActive(v bool) {
	o.IsActive = v
}

// GetName returns the Name field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) SetName(v string) {
	o.Name = v
}

// GetTeam returns the Team field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetTeam() ObjsTeam {
	if o == nil {
		var ret ObjsTeam
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) GetTeamOk() (*ObjsTeam, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *ConversationIMChannelObjectFromConversationsMethodsSharesInner) SetTeam(v ObjsTeam) {
	o.Team = v
}

func (o ConversationIMChannelObjectFromConversationsMethodsSharesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["date_create"] = o.DateCreate
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["is_active"] = o.IsActive
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["team"] = o.Team
	}
	return json.Marshal(toSerialize)
}

type NullableConversationIMChannelObjectFromConversationsMethodsSharesInner struct {
	value *ConversationIMChannelObjectFromConversationsMethodsSharesInner
	isSet bool
}

func (v NullableConversationIMChannelObjectFromConversationsMethodsSharesInner) Get() *ConversationIMChannelObjectFromConversationsMethodsSharesInner {
	return v.value
}

func (v *NullableConversationIMChannelObjectFromConversationsMethodsSharesInner) Set(val *ConversationIMChannelObjectFromConversationsMethodsSharesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationIMChannelObjectFromConversationsMethodsSharesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationIMChannelObjectFromConversationsMethodsSharesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationIMChannelObjectFromConversationsMethodsSharesInner(val *ConversationIMChannelObjectFromConversationsMethodsSharesInner) *NullableConversationIMChannelObjectFromConversationsMethodsSharesInner {
	return &NullableConversationIMChannelObjectFromConversationsMethodsSharesInner{value: val, isSet: true}
}

func (v NullableConversationIMChannelObjectFromConversationsMethodsSharesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationIMChannelObjectFromConversationsMethodsSharesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


