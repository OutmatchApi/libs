/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ChatGetPermalinkSuccessSchema Schema for successful response chat.getPermalink
type ChatGetPermalinkSuccessSchema struct {
	Channel string `json:"channel"`
	Ok DefsOkTrue `json:"ok"`
	Permalink string `json:"permalink"`
}

// NewChatGetPermalinkSuccessSchema instantiates a new ChatGetPermalinkSuccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatGetPermalinkSuccessSchema(channel string, ok DefsOkTrue, permalink string) *ChatGetPermalinkSuccessSchema {
	this := ChatGetPermalinkSuccessSchema{}
	this.Channel = channel
	this.Ok = ok
	this.Permalink = permalink
	return &this
}

// NewChatGetPermalinkSuccessSchemaWithDefaults instantiates a new ChatGetPermalinkSuccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatGetPermalinkSuccessSchemaWithDefaults() *ChatGetPermalinkSuccessSchema {
	this := ChatGetPermalinkSuccessSchema{}
	return &this
}

// GetChannel returns the Channel field value
func (o *ChatGetPermalinkSuccessSchema) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *ChatGetPermalinkSuccessSchema) GetChannelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *ChatGetPermalinkSuccessSchema) SetChannel(v string) {
	o.Channel = v
}

// GetOk returns the Ok field value
func (o *ChatGetPermalinkSuccessSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *ChatGetPermalinkSuccessSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *ChatGetPermalinkSuccessSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetPermalink returns the Permalink field value
func (o *ChatGetPermalinkSuccessSchema) GetPermalink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permalink
}

// GetPermalinkOk returns a tuple with the Permalink field value
// and a boolean to check if the value has been set.
func (o *ChatGetPermalinkSuccessSchema) GetPermalinkOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Permalink, true
}

// SetPermalink sets field value
func (o *ChatGetPermalinkSuccessSchema) SetPermalink(v string) {
	o.Permalink = v
}

func (o ChatGetPermalinkSuccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["permalink"] = o.Permalink
	}
	return json.Marshal(toSerialize)
}

type NullableChatGetPermalinkSuccessSchema struct {
	value *ChatGetPermalinkSuccessSchema
	isSet bool
}

func (v NullableChatGetPermalinkSuccessSchema) Get() *ChatGetPermalinkSuccessSchema {
	return v.value
}

func (v *NullableChatGetPermalinkSuccessSchema) Set(val *ChatGetPermalinkSuccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableChatGetPermalinkSuccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableChatGetPermalinkSuccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatGetPermalinkSuccessSchema(val *ChatGetPermalinkSuccessSchema) *NullableChatGetPermalinkSuccessSchema {
	return &NullableChatGetPermalinkSuccessSchema{value: val, isSet: true}
}

func (v NullableChatGetPermalinkSuccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatGetPermalinkSuccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


