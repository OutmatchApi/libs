/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ConversationsHistorySuccessSchema Schema for successful response from conversations.history method
type ConversationsHistorySuccessSchema struct {
	ChannelActionsCount int32 `json:"channel_actions_count"`
	ChannelActionsTs []ConversationsHistorySuccessSchemaChannelActionsTsInner `json:"channel_actions_ts"`
	HasMore bool `json:"has_more"`
	Messages []ObjsMessage `json:"messages"`
	Ok DefsOkTrue `json:"ok"`
	PinCount int32 `json:"pin_count"`
}

// NewConversationsHistorySuccessSchema instantiates a new ConversationsHistorySuccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationsHistorySuccessSchema(channelActionsCount int32, channelActionsTs []ConversationsHistorySuccessSchemaChannelActionsTsInner, hasMore bool, messages []ObjsMessage, ok DefsOkTrue, pinCount int32) *ConversationsHistorySuccessSchema {
	this := ConversationsHistorySuccessSchema{}
	this.ChannelActionsCount = channelActionsCount
	this.ChannelActionsTs = channelActionsTs
	this.HasMore = hasMore
	this.Messages = messages
	this.Ok = ok
	this.PinCount = pinCount
	return &this
}

// NewConversationsHistorySuccessSchemaWithDefaults instantiates a new ConversationsHistorySuccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationsHistorySuccessSchemaWithDefaults() *ConversationsHistorySuccessSchema {
	this := ConversationsHistorySuccessSchema{}
	return &this
}

// GetChannelActionsCount returns the ChannelActionsCount field value
func (o *ConversationsHistorySuccessSchema) GetChannelActionsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelActionsCount
}

// GetChannelActionsCountOk returns a tuple with the ChannelActionsCount field value
// and a boolean to check if the value has been set.
func (o *ConversationsHistorySuccessSchema) GetChannelActionsCountOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ChannelActionsCount, true
}

// SetChannelActionsCount sets field value
func (o *ConversationsHistorySuccessSchema) SetChannelActionsCount(v int32) {
	o.ChannelActionsCount = v
}

// GetChannelActionsTs returns the ChannelActionsTs field value
func (o *ConversationsHistorySuccessSchema) GetChannelActionsTs() []ConversationsHistorySuccessSchemaChannelActionsTsInner {
	if o == nil {
		var ret []ConversationsHistorySuccessSchemaChannelActionsTsInner
		return ret
	}

	return o.ChannelActionsTs
}

// GetChannelActionsTsOk returns a tuple with the ChannelActionsTs field value
// and a boolean to check if the value has been set.
func (o *ConversationsHistorySuccessSchema) GetChannelActionsTsOk() ([]ConversationsHistorySuccessSchemaChannelActionsTsInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.ChannelActionsTs, true
}

// SetChannelActionsTs sets field value
func (o *ConversationsHistorySuccessSchema) SetChannelActionsTs(v []ConversationsHistorySuccessSchemaChannelActionsTsInner) {
	o.ChannelActionsTs = v
}

// GetHasMore returns the HasMore field value
func (o *ConversationsHistorySuccessSchema) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *ConversationsHistorySuccessSchema) GetHasMoreOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *ConversationsHistorySuccessSchema) SetHasMore(v bool) {
	o.HasMore = v
}

// GetMessages returns the Messages field value
func (o *ConversationsHistorySuccessSchema) GetMessages() []ObjsMessage {
	if o == nil {
		var ret []ObjsMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *ConversationsHistorySuccessSchema) GetMessagesOk() ([]ObjsMessage, bool) {
	if o == nil {
    return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *ConversationsHistorySuccessSchema) SetMessages(v []ObjsMessage) {
	o.Messages = v
}

// GetOk returns the Ok field value
func (o *ConversationsHistorySuccessSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *ConversationsHistorySuccessSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *ConversationsHistorySuccessSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetPinCount returns the PinCount field value
func (o *ConversationsHistorySuccessSchema) GetPinCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PinCount
}

// GetPinCountOk returns a tuple with the PinCount field value
// and a boolean to check if the value has been set.
func (o *ConversationsHistorySuccessSchema) GetPinCountOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PinCount, true
}

// SetPinCount sets field value
func (o *ConversationsHistorySuccessSchema) SetPinCount(v int32) {
	o.PinCount = v
}

func (o ConversationsHistorySuccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel_actions_count"] = o.ChannelActionsCount
	}
	if true {
		toSerialize["channel_actions_ts"] = o.ChannelActionsTs
	}
	if true {
		toSerialize["has_more"] = o.HasMore
	}
	if true {
		toSerialize["messages"] = o.Messages
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["pin_count"] = o.PinCount
	}
	return json.Marshal(toSerialize)
}

type NullableConversationsHistorySuccessSchema struct {
	value *ConversationsHistorySuccessSchema
	isSet bool
}

func (v NullableConversationsHistorySuccessSchema) Get() *ConversationsHistorySuccessSchema {
	return v.value
}

func (v *NullableConversationsHistorySuccessSchema) Set(val *ConversationsHistorySuccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationsHistorySuccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationsHistorySuccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationsHistorySuccessSchema(val *ConversationsHistorySuccessSchema) *NullableConversationsHistorySuccessSchema {
	return &NullableConversationsHistorySuccessSchema{value: val, isSet: true}
}

func (v NullableConversationsHistorySuccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationsHistorySuccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


