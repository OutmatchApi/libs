/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsEnterpriseUser struct for ObjsEnterpriseUser
type ObjsEnterpriseUser struct {
	EnterpriseId string `json:"enterprise_id"`
	EnterpriseName string `json:"enterprise_name"`
	Id string `json:"id"`
	IsAdmin bool `json:"is_admin"`
	IsOwner bool `json:"is_owner"`
	Teams []string `json:"teams"`
}

// NewObjsEnterpriseUser instantiates a new ObjsEnterpriseUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsEnterpriseUser(enterpriseId string, enterpriseName string, id string, isAdmin bool, isOwner bool, teams []string) *ObjsEnterpriseUser {
	this := ObjsEnterpriseUser{}
	this.EnterpriseId = enterpriseId
	this.EnterpriseName = enterpriseName
	this.Id = id
	this.IsAdmin = isAdmin
	this.IsOwner = isOwner
	this.Teams = teams
	return &this
}

// NewObjsEnterpriseUserWithDefaults instantiates a new ObjsEnterpriseUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsEnterpriseUserWithDefaults() *ObjsEnterpriseUser {
	this := ObjsEnterpriseUser{}
	return &this
}

// GetEnterpriseId returns the EnterpriseId field value
func (o *ObjsEnterpriseUser) GetEnterpriseId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value
// and a boolean to check if the value has been set.
func (o *ObjsEnterpriseUser) GetEnterpriseIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EnterpriseId, true
}

// SetEnterpriseId sets field value
func (o *ObjsEnterpriseUser) SetEnterpriseId(v string) {
	o.EnterpriseId = v
}

// GetEnterpriseName returns the EnterpriseName field value
func (o *ObjsEnterpriseUser) GetEnterpriseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnterpriseName
}

// GetEnterpriseNameOk returns a tuple with the EnterpriseName field value
// and a boolean to check if the value has been set.
func (o *ObjsEnterpriseUser) GetEnterpriseNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EnterpriseName, true
}

// SetEnterpriseName sets field value
func (o *ObjsEnterpriseUser) SetEnterpriseName(v string) {
	o.EnterpriseName = v
}

// GetId returns the Id field value
func (o *ObjsEnterpriseUser) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjsEnterpriseUser) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjsEnterpriseUser) SetId(v string) {
	o.Id = v
}

// GetIsAdmin returns the IsAdmin field value
func (o *ObjsEnterpriseUser) GetIsAdmin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value
// and a boolean to check if the value has been set.
func (o *ObjsEnterpriseUser) GetIsAdminOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsAdmin, true
}

// SetIsAdmin sets field value
func (o *ObjsEnterpriseUser) SetIsAdmin(v bool) {
	o.IsAdmin = v
}

// GetIsOwner returns the IsOwner field value
func (o *ObjsEnterpriseUser) GetIsOwner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value
// and a boolean to check if the value has been set.
func (o *ObjsEnterpriseUser) GetIsOwnerOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsOwner, true
}

// SetIsOwner sets field value
func (o *ObjsEnterpriseUser) SetIsOwner(v bool) {
	o.IsOwner = v
}

// GetTeams returns the Teams field value
func (o *ObjsEnterpriseUser) GetTeams() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value
// and a boolean to check if the value has been set.
func (o *ObjsEnterpriseUser) GetTeamsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Teams, true
}

// SetTeams sets field value
func (o *ObjsEnterpriseUser) SetTeams(v []string) {
	o.Teams = v
}

func (o ObjsEnterpriseUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	if true {
		toSerialize["enterprise_name"] = o.EnterpriseName
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if true {
		toSerialize["is_owner"] = o.IsOwner
	}
	if true {
		toSerialize["teams"] = o.Teams
	}
	return json.Marshal(toSerialize)
}

type NullableObjsEnterpriseUser struct {
	value *ObjsEnterpriseUser
	isSet bool
}

func (v NullableObjsEnterpriseUser) Get() *ObjsEnterpriseUser {
	return v.value
}

func (v *NullableObjsEnterpriseUser) Set(val *ObjsEnterpriseUser) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsEnterpriseUser) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsEnterpriseUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsEnterpriseUser(val *ObjsEnterpriseUser) *NullableObjsEnterpriseUser {
	return &NullableObjsEnterpriseUser{value: val, isSet: true}
}

func (v NullableObjsEnterpriseUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsEnterpriseUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


