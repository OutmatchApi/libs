/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ReactionsListSchema Schema for successful response from reactions.list method
type ReactionsListSchema struct {
	Items [][]ReactionsListSchemaItemsInnerInner `json:"items"`
	Ok DefsOkTrue `json:"ok"`
	Paging *ObjsPaging `json:"paging,omitempty"`
	ResponseMetadata []ObjsResponseMetadataInner `json:"response_metadata,omitempty"`
}

// NewReactionsListSchema instantiates a new ReactionsListSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReactionsListSchema(items [][]ReactionsListSchemaItemsInnerInner, ok DefsOkTrue) *ReactionsListSchema {
	this := ReactionsListSchema{}
	this.Items = items
	this.Ok = ok
	return &this
}

// NewReactionsListSchemaWithDefaults instantiates a new ReactionsListSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReactionsListSchemaWithDefaults() *ReactionsListSchema {
	this := ReactionsListSchema{}
	return &this
}

// GetItems returns the Items field value
func (o *ReactionsListSchema) GetItems() [][]ReactionsListSchemaItemsInnerInner {
	if o == nil {
		var ret [][]ReactionsListSchemaItemsInnerInner
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ReactionsListSchema) GetItemsOk() ([][]ReactionsListSchemaItemsInnerInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ReactionsListSchema) SetItems(v [][]ReactionsListSchemaItemsInnerInner) {
	o.Items = v
}

// GetOk returns the Ok field value
func (o *ReactionsListSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *ReactionsListSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *ReactionsListSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *ReactionsListSchema) GetPaging() ObjsPaging {
	if o == nil || isNil(o.Paging) {
		var ret ObjsPaging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionsListSchema) GetPagingOk() (*ObjsPaging, bool) {
	if o == nil || isNil(o.Paging) {
    return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *ReactionsListSchema) HasPaging() bool {
	if o != nil && !isNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ObjsPaging and assigns it to the Paging field.
func (o *ReactionsListSchema) SetPaging(v ObjsPaging) {
	o.Paging = &v
}

// GetResponseMetadata returns the ResponseMetadata field value if set, zero value otherwise.
func (o *ReactionsListSchema) GetResponseMetadata() []ObjsResponseMetadataInner {
	if o == nil || isNil(o.ResponseMetadata) {
		var ret []ObjsResponseMetadataInner
		return ret
	}
	return o.ResponseMetadata
}

// GetResponseMetadataOk returns a tuple with the ResponseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionsListSchema) GetResponseMetadataOk() ([]ObjsResponseMetadataInner, bool) {
	if o == nil || isNil(o.ResponseMetadata) {
    return nil, false
	}
	return o.ResponseMetadata, true
}

// HasResponseMetadata returns a boolean if a field has been set.
func (o *ReactionsListSchema) HasResponseMetadata() bool {
	if o != nil && !isNil(o.ResponseMetadata) {
		return true
	}

	return false
}

// SetResponseMetadata gets a reference to the given []ObjsResponseMetadataInner and assigns it to the ResponseMetadata field.
func (o *ReactionsListSchema) SetResponseMetadata(v []ObjsResponseMetadataInner) {
	o.ResponseMetadata = v
}

func (o ReactionsListSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if !isNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !isNil(o.ResponseMetadata) {
		toSerialize["response_metadata"] = o.ResponseMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableReactionsListSchema struct {
	value *ReactionsListSchema
	isSet bool
}

func (v NullableReactionsListSchema) Get() *ReactionsListSchema {
	return v.value
}

func (v *NullableReactionsListSchema) Set(val *ReactionsListSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableReactionsListSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableReactionsListSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReactionsListSchema(val *ReactionsListSchema) *NullableReactionsListSchema {
	return &NullableReactionsListSchema{value: val, isSet: true}
}

func (v NullableReactionsListSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReactionsListSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


