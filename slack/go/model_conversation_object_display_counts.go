/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ConversationObjectDisplayCounts struct for ConversationObjectDisplayCounts
type ConversationObjectDisplayCounts struct {
	DisplayCounts int32 `json:"display_counts"`
	GuestCounts int32 `json:"guest_counts"`
}

// NewConversationObjectDisplayCounts instantiates a new ConversationObjectDisplayCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationObjectDisplayCounts(displayCounts int32, guestCounts int32) *ConversationObjectDisplayCounts {
	this := ConversationObjectDisplayCounts{}
	this.DisplayCounts = displayCounts
	this.GuestCounts = guestCounts
	return &this
}

// NewConversationObjectDisplayCountsWithDefaults instantiates a new ConversationObjectDisplayCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationObjectDisplayCountsWithDefaults() *ConversationObjectDisplayCounts {
	this := ConversationObjectDisplayCounts{}
	return &this
}

// GetDisplayCounts returns the DisplayCounts field value
func (o *ConversationObjectDisplayCounts) GetDisplayCounts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DisplayCounts
}

// GetDisplayCountsOk returns a tuple with the DisplayCounts field value
// and a boolean to check if the value has been set.
func (o *ConversationObjectDisplayCounts) GetDisplayCountsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DisplayCounts, true
}

// SetDisplayCounts sets field value
func (o *ConversationObjectDisplayCounts) SetDisplayCounts(v int32) {
	o.DisplayCounts = v
}

// GetGuestCounts returns the GuestCounts field value
func (o *ConversationObjectDisplayCounts) GetGuestCounts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GuestCounts
}

// GetGuestCountsOk returns a tuple with the GuestCounts field value
// and a boolean to check if the value has been set.
func (o *ConversationObjectDisplayCounts) GetGuestCountsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GuestCounts, true
}

// SetGuestCounts sets field value
func (o *ConversationObjectDisplayCounts) SetGuestCounts(v int32) {
	o.GuestCounts = v
}

func (o ConversationObjectDisplayCounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["display_counts"] = o.DisplayCounts
	}
	if true {
		toSerialize["guest_counts"] = o.GuestCounts
	}
	return json.Marshal(toSerialize)
}

type NullableConversationObjectDisplayCounts struct {
	value *ConversationObjectDisplayCounts
	isSet bool
}

func (v NullableConversationObjectDisplayCounts) Get() *ConversationObjectDisplayCounts {
	return v.value
}

func (v *NullableConversationObjectDisplayCounts) Set(val *ConversationObjectDisplayCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationObjectDisplayCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationObjectDisplayCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationObjectDisplayCounts(val *ConversationObjectDisplayCounts) *NullableConversationObjectDisplayCounts {
	return &NullableConversationObjectDisplayCounts{value: val, isSet: true}
}

func (v NullableConversationObjectDisplayCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationObjectDisplayCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


