/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsUserProfileShort struct for ObjsUserProfileShort
type ObjsUserProfileShort struct {
	AvatarHash string `json:"avatar_hash"`
	DisplayName string `json:"display_name"`
	DisplayNameNormalized *string `json:"display_name_normalized,omitempty"`
	FirstName NullableString `json:"first_name"`
	Image72 string `json:"image_72"`
	IsRestricted bool `json:"is_restricted"`
	IsUltraRestricted bool `json:"is_ultra_restricted"`
	Name string `json:"name"`
	RealName string `json:"real_name"`
	RealNameNormalized *string `json:"real_name_normalized,omitempty"`
	Team string `json:"team"`
}

// NewObjsUserProfileShort instantiates a new ObjsUserProfileShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsUserProfileShort(avatarHash string, displayName string, firstName NullableString, image72 string, isRestricted bool, isUltraRestricted bool, name string, realName string, team string) *ObjsUserProfileShort {
	this := ObjsUserProfileShort{}
	this.AvatarHash = avatarHash
	this.DisplayName = displayName
	this.FirstName = firstName
	this.Image72 = image72
	this.IsRestricted = isRestricted
	this.IsUltraRestricted = isUltraRestricted
	this.Name = name
	this.RealName = realName
	this.Team = team
	return &this
}

// NewObjsUserProfileShortWithDefaults instantiates a new ObjsUserProfileShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsUserProfileShortWithDefaults() *ObjsUserProfileShort {
	this := ObjsUserProfileShort{}
	return &this
}

// GetAvatarHash returns the AvatarHash field value
func (o *ObjsUserProfileShort) GetAvatarHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvatarHash
}

// GetAvatarHashOk returns a tuple with the AvatarHash field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetAvatarHashOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AvatarHash, true
}

// SetAvatarHash sets field value
func (o *ObjsUserProfileShort) SetAvatarHash(v string) {
	o.AvatarHash = v
}

// GetDisplayName returns the DisplayName field value
func (o *ObjsUserProfileShort) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetDisplayNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ObjsUserProfileShort) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDisplayNameNormalized returns the DisplayNameNormalized field value if set, zero value otherwise.
func (o *ObjsUserProfileShort) GetDisplayNameNormalized() string {
	if o == nil || isNil(o.DisplayNameNormalized) {
		var ret string
		return ret
	}
	return *o.DisplayNameNormalized
}

// GetDisplayNameNormalizedOk returns a tuple with the DisplayNameNormalized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetDisplayNameNormalizedOk() (*string, bool) {
	if o == nil || isNil(o.DisplayNameNormalized) {
    return nil, false
	}
	return o.DisplayNameNormalized, true
}

// HasDisplayNameNormalized returns a boolean if a field has been set.
func (o *ObjsUserProfileShort) HasDisplayNameNormalized() bool {
	if o != nil && !isNil(o.DisplayNameNormalized) {
		return true
	}

	return false
}

// SetDisplayNameNormalized gets a reference to the given string and assigns it to the DisplayNameNormalized field.
func (o *ObjsUserProfileShort) SetDisplayNameNormalized(v string) {
	o.DisplayNameNormalized = &v
}

// GetFirstName returns the FirstName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ObjsUserProfileShort) GetFirstName() string {
	if o == nil || o.FirstName.Get() == nil {
		var ret string
		return ret
	}

	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfileShort) GetFirstNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// SetFirstName sets field value
func (o *ObjsUserProfileShort) SetFirstName(v string) {
	o.FirstName.Set(&v)
}

// GetImage72 returns the Image72 field value
func (o *ObjsUserProfileShort) GetImage72() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image72
}

// GetImage72Ok returns a tuple with the Image72 field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetImage72Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Image72, true
}

// SetImage72 sets field value
func (o *ObjsUserProfileShort) SetImage72(v string) {
	o.Image72 = v
}

// GetIsRestricted returns the IsRestricted field value
func (o *ObjsUserProfileShort) GetIsRestricted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRestricted
}

// GetIsRestrictedOk returns a tuple with the IsRestricted field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetIsRestrictedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsRestricted, true
}

// SetIsRestricted sets field value
func (o *ObjsUserProfileShort) SetIsRestricted(v bool) {
	o.IsRestricted = v
}

// GetIsUltraRestricted returns the IsUltraRestricted field value
func (o *ObjsUserProfileShort) GetIsUltraRestricted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUltraRestricted
}

// GetIsUltraRestrictedOk returns a tuple with the IsUltraRestricted field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetIsUltraRestrictedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsUltraRestricted, true
}

// SetIsUltraRestricted sets field value
func (o *ObjsUserProfileShort) SetIsUltraRestricted(v bool) {
	o.IsUltraRestricted = v
}

// GetName returns the Name field value
func (o *ObjsUserProfileShort) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ObjsUserProfileShort) SetName(v string) {
	o.Name = v
}

// GetRealName returns the RealName field value
func (o *ObjsUserProfileShort) GetRealName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RealName
}

// GetRealNameOk returns a tuple with the RealName field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetRealNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RealName, true
}

// SetRealName sets field value
func (o *ObjsUserProfileShort) SetRealName(v string) {
	o.RealName = v
}

// GetRealNameNormalized returns the RealNameNormalized field value if set, zero value otherwise.
func (o *ObjsUserProfileShort) GetRealNameNormalized() string {
	if o == nil || isNil(o.RealNameNormalized) {
		var ret string
		return ret
	}
	return *o.RealNameNormalized
}

// GetRealNameNormalizedOk returns a tuple with the RealNameNormalized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetRealNameNormalizedOk() (*string, bool) {
	if o == nil || isNil(o.RealNameNormalized) {
    return nil, false
	}
	return o.RealNameNormalized, true
}

// HasRealNameNormalized returns a boolean if a field has been set.
func (o *ObjsUserProfileShort) HasRealNameNormalized() bool {
	if o != nil && !isNil(o.RealNameNormalized) {
		return true
	}

	return false
}

// SetRealNameNormalized gets a reference to the given string and assigns it to the RealNameNormalized field.
func (o *ObjsUserProfileShort) SetRealNameNormalized(v string) {
	o.RealNameNormalized = &v
}

// GetTeam returns the Team field value
func (o *ObjsUserProfileShort) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfileShort) GetTeamOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *ObjsUserProfileShort) SetTeam(v string) {
	o.Team = v
}

func (o ObjsUserProfileShort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["avatar_hash"] = o.AvatarHash
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if !isNil(o.DisplayNameNormalized) {
		toSerialize["display_name_normalized"] = o.DisplayNameNormalized
	}
	if true {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	if true {
		toSerialize["image_72"] = o.Image72
	}
	if true {
		toSerialize["is_restricted"] = o.IsRestricted
	}
	if true {
		toSerialize["is_ultra_restricted"] = o.IsUltraRestricted
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["real_name"] = o.RealName
	}
	if !isNil(o.RealNameNormalized) {
		toSerialize["real_name_normalized"] = o.RealNameNormalized
	}
	if true {
		toSerialize["team"] = o.Team
	}
	return json.Marshal(toSerialize)
}

type NullableObjsUserProfileShort struct {
	value *ObjsUserProfileShort
	isSet bool
}

func (v NullableObjsUserProfileShort) Get() *ObjsUserProfileShort {
	return v.value
}

func (v *NullableObjsUserProfileShort) Set(val *ObjsUserProfileShort) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsUserProfileShort) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsUserProfileShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsUserProfileShort(val *ObjsUserProfileShort) *NullableObjsUserProfileShort {
	return &NullableObjsUserProfileShort{value: val, isSet: true}
}

func (v NullableObjsUserProfileShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsUserProfileShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


