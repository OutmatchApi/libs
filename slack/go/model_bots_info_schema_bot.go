/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// BotsInfoSchemaBot struct for BotsInfoSchemaBot
type BotsInfoSchemaBot struct {
	AppId string `json:"app_id"`
	Deleted bool `json:"deleted"`
	Icons BotsInfoSchemaBotIcons `json:"icons"`
	Id string `json:"id"`
	Name string `json:"name"`
	Updated int32 `json:"updated"`
	UserId *string `json:"user_id,omitempty"`
}

// NewBotsInfoSchemaBot instantiates a new BotsInfoSchemaBot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBotsInfoSchemaBot(appId string, deleted bool, icons BotsInfoSchemaBotIcons, id string, name string, updated int32) *BotsInfoSchemaBot {
	this := BotsInfoSchemaBot{}
	this.AppId = appId
	this.Deleted = deleted
	this.Icons = icons
	this.Id = id
	this.Name = name
	this.Updated = updated
	return &this
}

// NewBotsInfoSchemaBotWithDefaults instantiates a new BotsInfoSchemaBot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBotsInfoSchemaBotWithDefaults() *BotsInfoSchemaBot {
	this := BotsInfoSchemaBot{}
	return &this
}

// GetAppId returns the AppId field value
func (o *BotsInfoSchemaBot) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetAppIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *BotsInfoSchemaBot) SetAppId(v string) {
	o.AppId = v
}

// GetDeleted returns the Deleted field value
func (o *BotsInfoSchemaBot) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetDeletedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *BotsInfoSchemaBot) SetDeleted(v bool) {
	o.Deleted = v
}

// GetIcons returns the Icons field value
func (o *BotsInfoSchemaBot) GetIcons() BotsInfoSchemaBotIcons {
	if o == nil {
		var ret BotsInfoSchemaBotIcons
		return ret
	}

	return o.Icons
}

// GetIconsOk returns a tuple with the Icons field value
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetIconsOk() (*BotsInfoSchemaBotIcons, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Icons, true
}

// SetIcons sets field value
func (o *BotsInfoSchemaBot) SetIcons(v BotsInfoSchemaBotIcons) {
	o.Icons = v
}

// GetId returns the Id field value
func (o *BotsInfoSchemaBot) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BotsInfoSchemaBot) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BotsInfoSchemaBot) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BotsInfoSchemaBot) SetName(v string) {
	o.Name = v
}

// GetUpdated returns the Updated field value
func (o *BotsInfoSchemaBot) GetUpdated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetUpdatedOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *BotsInfoSchemaBot) SetUpdated(v int32) {
	o.Updated = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *BotsInfoSchemaBot) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotsInfoSchemaBot) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *BotsInfoSchemaBot) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *BotsInfoSchemaBot) SetUserId(v string) {
	o.UserId = &v
}

func (o BotsInfoSchemaBot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if true {
		toSerialize["deleted"] = o.Deleted
	}
	if true {
		toSerialize["icons"] = o.Icons
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["updated"] = o.Updated
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableBotsInfoSchemaBot struct {
	value *BotsInfoSchemaBot
	isSet bool
}

func (v NullableBotsInfoSchemaBot) Get() *BotsInfoSchemaBot {
	return v.value
}

func (v *NullableBotsInfoSchemaBot) Set(val *BotsInfoSchemaBot) {
	v.value = val
	v.isSet = true
}

func (v NullableBotsInfoSchemaBot) IsSet() bool {
	return v.isSet
}

func (v *NullableBotsInfoSchemaBot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBotsInfoSchemaBot(val *BotsInfoSchemaBot) *NullableBotsInfoSchemaBot {
	return &NullableBotsInfoSchemaBot{value: val, isSet: true}
}

func (v NullableBotsInfoSchemaBot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBotsInfoSchemaBot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


