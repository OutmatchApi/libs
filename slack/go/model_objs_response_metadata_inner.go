/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
	"fmt"
)

// ObjsResponseMetadataInner struct for ObjsResponseMetadataInner
type ObjsResponseMetadataInner struct {
	DeprecationWarning *DeprecationWarning
	DeprecationWarningAndPagingStyleTogether *DeprecationWarningAndPagingStyleTogether
	NewPagingStyle *NewPagingStyle
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ObjsResponseMetadataInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into DeprecationWarning
	err = json.Unmarshal(data, &dst.DeprecationWarning);
	if err == nil {
		jsonDeprecationWarning, _ := json.Marshal(dst.DeprecationWarning)
		if string(jsonDeprecationWarning) == "{}" { // empty struct
			dst.DeprecationWarning = nil
		} else {
			return nil // data stored in dst.DeprecationWarning, return on the first match
		}
	} else {
		dst.DeprecationWarning = nil
	}

	// try to unmarshal JSON data into DeprecationWarningAndPagingStyleTogether
	err = json.Unmarshal(data, &dst.DeprecationWarningAndPagingStyleTogether);
	if err == nil {
		jsonDeprecationWarningAndPagingStyleTogether, _ := json.Marshal(dst.DeprecationWarningAndPagingStyleTogether)
		if string(jsonDeprecationWarningAndPagingStyleTogether) == "{}" { // empty struct
			dst.DeprecationWarningAndPagingStyleTogether = nil
		} else {
			return nil // data stored in dst.DeprecationWarningAndPagingStyleTogether, return on the first match
		}
	} else {
		dst.DeprecationWarningAndPagingStyleTogether = nil
	}

	// try to unmarshal JSON data into NewPagingStyle
	err = json.Unmarshal(data, &dst.NewPagingStyle);
	if err == nil {
		jsonNewPagingStyle, _ := json.Marshal(dst.NewPagingStyle)
		if string(jsonNewPagingStyle) == "{}" { // empty struct
			dst.NewPagingStyle = nil
		} else {
			return nil // data stored in dst.NewPagingStyle, return on the first match
		}
	} else {
		dst.NewPagingStyle = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ObjsResponseMetadataInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ObjsResponseMetadataInner) MarshalJSON() ([]byte, error) {
	if src.DeprecationWarning != nil {
		return json.Marshal(&src.DeprecationWarning)
	}

	if src.DeprecationWarningAndPagingStyleTogether != nil {
		return json.Marshal(&src.DeprecationWarningAndPagingStyleTogether)
	}

	if src.NewPagingStyle != nil {
		return json.Marshal(&src.NewPagingStyle)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableObjsResponseMetadataInner struct {
	value *ObjsResponseMetadataInner
	isSet bool
}

func (v NullableObjsResponseMetadataInner) Get() *ObjsResponseMetadataInner {
	return v.value
}

func (v *NullableObjsResponseMetadataInner) Set(val *ObjsResponseMetadataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsResponseMetadataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsResponseMetadataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsResponseMetadataInner(val *ObjsResponseMetadataInner) *NullableObjsResponseMetadataInner {
	return &NullableObjsResponseMetadataInner{value: val, isSet: true}
}

func (v NullableObjsResponseMetadataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsResponseMetadataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


