/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// RtmConnectSchemaTeam struct for RtmConnectSchemaTeam
type RtmConnectSchemaTeam struct {
	Domain string `json:"domain"`
	Id string `json:"id"`
	Name string `json:"name"`
}

// NewRtmConnectSchemaTeam instantiates a new RtmConnectSchemaTeam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRtmConnectSchemaTeam(domain string, id string, name string) *RtmConnectSchemaTeam {
	this := RtmConnectSchemaTeam{}
	this.Domain = domain
	this.Id = id
	this.Name = name
	return &this
}

// NewRtmConnectSchemaTeamWithDefaults instantiates a new RtmConnectSchemaTeam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRtmConnectSchemaTeamWithDefaults() *RtmConnectSchemaTeam {
	this := RtmConnectSchemaTeam{}
	return &this
}

// GetDomain returns the Domain field value
func (o *RtmConnectSchemaTeam) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *RtmConnectSchemaTeam) GetDomainOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *RtmConnectSchemaTeam) SetDomain(v string) {
	o.Domain = v
}

// GetId returns the Id field value
func (o *RtmConnectSchemaTeam) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RtmConnectSchemaTeam) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RtmConnectSchemaTeam) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RtmConnectSchemaTeam) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RtmConnectSchemaTeam) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RtmConnectSchemaTeam) SetName(v string) {
	o.Name = v
}

func (o RtmConnectSchemaTeam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["domain"] = o.Domain
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableRtmConnectSchemaTeam struct {
	value *RtmConnectSchemaTeam
	isSet bool
}

func (v NullableRtmConnectSchemaTeam) Get() *RtmConnectSchemaTeam {
	return v.value
}

func (v *NullableRtmConnectSchemaTeam) Set(val *RtmConnectSchemaTeam) {
	v.value = val
	v.isSet = true
}

func (v NullableRtmConnectSchemaTeam) IsSet() bool {
	return v.isSet
}

func (v *NullableRtmConnectSchemaTeam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRtmConnectSchemaTeam(val *RtmConnectSchemaTeam) *NullableRtmConnectSchemaTeam {
	return &NullableRtmConnectSchemaTeam{value: val, isSet: true}
}

func (v NullableRtmConnectSchemaTeam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRtmConnectSchemaTeam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


