/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ApiPermissionsScopesListSuccessSchema Schema for successful response api.permissions.scopes.list method
type ApiPermissionsScopesListSuccessSchema struct {
	Ok DefsOkTrue `json:"ok"`
	Scopes ApiPermissionsScopesListSuccessSchemaScopes `json:"scopes"`
	AdditionalProperties map[string]interface{}
}

type _ApiPermissionsScopesListSuccessSchema ApiPermissionsScopesListSuccessSchema

// NewApiPermissionsScopesListSuccessSchema instantiates a new ApiPermissionsScopesListSuccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPermissionsScopesListSuccessSchema(ok DefsOkTrue, scopes ApiPermissionsScopesListSuccessSchemaScopes) *ApiPermissionsScopesListSuccessSchema {
	this := ApiPermissionsScopesListSuccessSchema{}
	this.Ok = ok
	this.Scopes = scopes
	return &this
}

// NewApiPermissionsScopesListSuccessSchemaWithDefaults instantiates a new ApiPermissionsScopesListSuccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPermissionsScopesListSuccessSchemaWithDefaults() *ApiPermissionsScopesListSuccessSchema {
	this := ApiPermissionsScopesListSuccessSchema{}
	return &this
}

// GetOk returns the Ok field value
func (o *ApiPermissionsScopesListSuccessSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *ApiPermissionsScopesListSuccessSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *ApiPermissionsScopesListSuccessSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetScopes returns the Scopes field value
func (o *ApiPermissionsScopesListSuccessSchema) GetScopes() ApiPermissionsScopesListSuccessSchemaScopes {
	if o == nil {
		var ret ApiPermissionsScopesListSuccessSchemaScopes
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *ApiPermissionsScopesListSuccessSchema) GetScopesOk() (*ApiPermissionsScopesListSuccessSchemaScopes, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Scopes, true
}

// SetScopes sets field value
func (o *ApiPermissionsScopesListSuccessSchema) SetScopes(v ApiPermissionsScopesListSuccessSchemaScopes) {
	o.Scopes = v
}

func (o ApiPermissionsScopesListSuccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["scopes"] = o.Scopes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ApiPermissionsScopesListSuccessSchema) UnmarshalJSON(bytes []byte) (err error) {
	varApiPermissionsScopesListSuccessSchema := _ApiPermissionsScopesListSuccessSchema{}

	if err = json.Unmarshal(bytes, &varApiPermissionsScopesListSuccessSchema); err == nil {
		*o = ApiPermissionsScopesListSuccessSchema(varApiPermissionsScopesListSuccessSchema)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ok")
		delete(additionalProperties, "scopes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiPermissionsScopesListSuccessSchema struct {
	value *ApiPermissionsScopesListSuccessSchema
	isSet bool
}

func (v NullableApiPermissionsScopesListSuccessSchema) Get() *ApiPermissionsScopesListSuccessSchema {
	return v.value
}

func (v *NullableApiPermissionsScopesListSuccessSchema) Set(val *ApiPermissionsScopesListSuccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPermissionsScopesListSuccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPermissionsScopesListSuccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPermissionsScopesListSuccessSchema(val *ApiPermissionsScopesListSuccessSchema) *NullableApiPermissionsScopesListSuccessSchema {
	return &NullableApiPermissionsScopesListSuccessSchema{value: val, isSet: true}
}

func (v NullableApiPermissionsScopesListSuccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPermissionsScopesListSuccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


