/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsTeamProfileFieldOption struct for ObjsTeamProfileFieldOption
type ObjsTeamProfileFieldOption struct {
	IsCustom NullableBool `json:"is_custom,omitempty"`
	IsMultipleEntry NullableBool `json:"is_multiple_entry,omitempty"`
	IsProtected NullableBool `json:"is_protected,omitempty"`
	IsScim NullableBool `json:"is_scim,omitempty"`
}

// NewObjsTeamProfileFieldOption instantiates a new ObjsTeamProfileFieldOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsTeamProfileFieldOption() *ObjsTeamProfileFieldOption {
	this := ObjsTeamProfileFieldOption{}
	return &this
}

// NewObjsTeamProfileFieldOptionWithDefaults instantiates a new ObjsTeamProfileFieldOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsTeamProfileFieldOptionWithDefaults() *ObjsTeamProfileFieldOption {
	this := ObjsTeamProfileFieldOption{}
	return &this
}

// GetIsCustom returns the IsCustom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsTeamProfileFieldOption) GetIsCustom() bool {
	if o == nil || isNil(o.IsCustom.Get()) {
		var ret bool
		return ret
	}
	return *o.IsCustom.Get()
}

// GetIsCustomOk returns a tuple with the IsCustom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsTeamProfileFieldOption) GetIsCustomOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsCustom.Get(), o.IsCustom.IsSet()
}

// HasIsCustom returns a boolean if a field has been set.
func (o *ObjsTeamProfileFieldOption) HasIsCustom() bool {
	if o != nil && o.IsCustom.IsSet() {
		return true
	}

	return false
}

// SetIsCustom gets a reference to the given NullableBool and assigns it to the IsCustom field.
func (o *ObjsTeamProfileFieldOption) SetIsCustom(v bool) {
	o.IsCustom.Set(&v)
}
// SetIsCustomNil sets the value for IsCustom to be an explicit nil
func (o *ObjsTeamProfileFieldOption) SetIsCustomNil() {
	o.IsCustom.Set(nil)
}

// UnsetIsCustom ensures that no value is present for IsCustom, not even an explicit nil
func (o *ObjsTeamProfileFieldOption) UnsetIsCustom() {
	o.IsCustom.Unset()
}

// GetIsMultipleEntry returns the IsMultipleEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsTeamProfileFieldOption) GetIsMultipleEntry() bool {
	if o == nil || isNil(o.IsMultipleEntry.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMultipleEntry.Get()
}

// GetIsMultipleEntryOk returns a tuple with the IsMultipleEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsTeamProfileFieldOption) GetIsMultipleEntryOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsMultipleEntry.Get(), o.IsMultipleEntry.IsSet()
}

// HasIsMultipleEntry returns a boolean if a field has been set.
func (o *ObjsTeamProfileFieldOption) HasIsMultipleEntry() bool {
	if o != nil && o.IsMultipleEntry.IsSet() {
		return true
	}

	return false
}

// SetIsMultipleEntry gets a reference to the given NullableBool and assigns it to the IsMultipleEntry field.
func (o *ObjsTeamProfileFieldOption) SetIsMultipleEntry(v bool) {
	o.IsMultipleEntry.Set(&v)
}
// SetIsMultipleEntryNil sets the value for IsMultipleEntry to be an explicit nil
func (o *ObjsTeamProfileFieldOption) SetIsMultipleEntryNil() {
	o.IsMultipleEntry.Set(nil)
}

// UnsetIsMultipleEntry ensures that no value is present for IsMultipleEntry, not even an explicit nil
func (o *ObjsTeamProfileFieldOption) UnsetIsMultipleEntry() {
	o.IsMultipleEntry.Unset()
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsTeamProfileFieldOption) GetIsProtected() bool {
	if o == nil || isNil(o.IsProtected.Get()) {
		var ret bool
		return ret
	}
	return *o.IsProtected.Get()
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsTeamProfileFieldOption) GetIsProtectedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsProtected.Get(), o.IsProtected.IsSet()
}

// HasIsProtected returns a boolean if a field has been set.
func (o *ObjsTeamProfileFieldOption) HasIsProtected() bool {
	if o != nil && o.IsProtected.IsSet() {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given NullableBool and assigns it to the IsProtected field.
func (o *ObjsTeamProfileFieldOption) SetIsProtected(v bool) {
	o.IsProtected.Set(&v)
}
// SetIsProtectedNil sets the value for IsProtected to be an explicit nil
func (o *ObjsTeamProfileFieldOption) SetIsProtectedNil() {
	o.IsProtected.Set(nil)
}

// UnsetIsProtected ensures that no value is present for IsProtected, not even an explicit nil
func (o *ObjsTeamProfileFieldOption) UnsetIsProtected() {
	o.IsProtected.Unset()
}

// GetIsScim returns the IsScim field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsTeamProfileFieldOption) GetIsScim() bool {
	if o == nil || isNil(o.IsScim.Get()) {
		var ret bool
		return ret
	}
	return *o.IsScim.Get()
}

// GetIsScimOk returns a tuple with the IsScim field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsTeamProfileFieldOption) GetIsScimOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsScim.Get(), o.IsScim.IsSet()
}

// HasIsScim returns a boolean if a field has been set.
func (o *ObjsTeamProfileFieldOption) HasIsScim() bool {
	if o != nil && o.IsScim.IsSet() {
		return true
	}

	return false
}

// SetIsScim gets a reference to the given NullableBool and assigns it to the IsScim field.
func (o *ObjsTeamProfileFieldOption) SetIsScim(v bool) {
	o.IsScim.Set(&v)
}
// SetIsScimNil sets the value for IsScim to be an explicit nil
func (o *ObjsTeamProfileFieldOption) SetIsScimNil() {
	o.IsScim.Set(nil)
}

// UnsetIsScim ensures that no value is present for IsScim, not even an explicit nil
func (o *ObjsTeamProfileFieldOption) UnsetIsScim() {
	o.IsScim.Unset()
}

func (o ObjsTeamProfileFieldOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsCustom.IsSet() {
		toSerialize["is_custom"] = o.IsCustom.Get()
	}
	if o.IsMultipleEntry.IsSet() {
		toSerialize["is_multiple_entry"] = o.IsMultipleEntry.Get()
	}
	if o.IsProtected.IsSet() {
		toSerialize["is_protected"] = o.IsProtected.Get()
	}
	if o.IsScim.IsSet() {
		toSerialize["is_scim"] = o.IsScim.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableObjsTeamProfileFieldOption struct {
	value *ObjsTeamProfileFieldOption
	isSet bool
}

func (v NullableObjsTeamProfileFieldOption) Get() *ObjsTeamProfileFieldOption {
	return v.value
}

func (v *NullableObjsTeamProfileFieldOption) Set(val *ObjsTeamProfileFieldOption) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsTeamProfileFieldOption) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsTeamProfileFieldOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsTeamProfileFieldOption(val *ObjsTeamProfileFieldOption) *NullableObjsTeamProfileFieldOption {
	return &NullableObjsTeamProfileFieldOption{value: val, isSet: true}
}

func (v NullableObjsTeamProfileFieldOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsTeamProfileFieldOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


