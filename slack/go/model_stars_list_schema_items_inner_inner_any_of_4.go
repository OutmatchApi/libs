/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// StarsListSchemaItemsInnerInnerAnyOf4 struct for StarsListSchemaItemsInnerInnerAnyOf4
type StarsListSchemaItemsInnerInnerAnyOf4 struct {
	Channel string `json:"channel"`
	DateCreate int32 `json:"date_create"`
	Type string `json:"type"`
}

// NewStarsListSchemaItemsInnerInnerAnyOf4 instantiates a new StarsListSchemaItemsInnerInnerAnyOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStarsListSchemaItemsInnerInnerAnyOf4(channel string, dateCreate int32, type_ string) *StarsListSchemaItemsInnerInnerAnyOf4 {
	this := StarsListSchemaItemsInnerInnerAnyOf4{}
	this.Channel = channel
	this.DateCreate = dateCreate
	this.Type = type_
	return &this
}

// NewStarsListSchemaItemsInnerInnerAnyOf4WithDefaults instantiates a new StarsListSchemaItemsInnerInnerAnyOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStarsListSchemaItemsInnerInnerAnyOf4WithDefaults() *StarsListSchemaItemsInnerInnerAnyOf4 {
	this := StarsListSchemaItemsInnerInnerAnyOf4{}
	return &this
}

// GetChannel returns the Channel field value
func (o *StarsListSchemaItemsInnerInnerAnyOf4) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *StarsListSchemaItemsInnerInnerAnyOf4) GetChannelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *StarsListSchemaItemsInnerInnerAnyOf4) SetChannel(v string) {
	o.Channel = v
}

// GetDateCreate returns the DateCreate field value
func (o *StarsListSchemaItemsInnerInnerAnyOf4) GetDateCreate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DateCreate
}

// GetDateCreateOk returns a tuple with the DateCreate field value
// and a boolean to check if the value has been set.
func (o *StarsListSchemaItemsInnerInnerAnyOf4) GetDateCreateOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DateCreate, true
}

// SetDateCreate sets field value
func (o *StarsListSchemaItemsInnerInnerAnyOf4) SetDateCreate(v int32) {
	o.DateCreate = v
}

// GetType returns the Type field value
func (o *StarsListSchemaItemsInnerInnerAnyOf4) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *StarsListSchemaItemsInnerInnerAnyOf4) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *StarsListSchemaItemsInnerInnerAnyOf4) SetType(v string) {
	o.Type = v
}

func (o StarsListSchemaItemsInnerInnerAnyOf4) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if true {
		toSerialize["date_create"] = o.DateCreate
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableStarsListSchemaItemsInnerInnerAnyOf4 struct {
	value *StarsListSchemaItemsInnerInnerAnyOf4
	isSet bool
}

func (v NullableStarsListSchemaItemsInnerInnerAnyOf4) Get() *StarsListSchemaItemsInnerInnerAnyOf4 {
	return v.value
}

func (v *NullableStarsListSchemaItemsInnerInnerAnyOf4) Set(val *StarsListSchemaItemsInnerInnerAnyOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableStarsListSchemaItemsInnerInnerAnyOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableStarsListSchemaItemsInnerInnerAnyOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStarsListSchemaItemsInnerInnerAnyOf4(val *StarsListSchemaItemsInnerInnerAnyOf4) *NullableStarsListSchemaItemsInnerInnerAnyOf4 {
	return &NullableStarsListSchemaItemsInnerInnerAnyOf4{value: val, isSet: true}
}

func (v NullableStarsListSchemaItemsInnerInnerAnyOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStarsListSchemaItemsInnerInnerAnyOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


