/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
	"fmt"
)

// ConversationsRepliesSuccessSchemaMessagesInnerInner struct for ConversationsRepliesSuccessSchemaMessagesInnerInner
type ConversationsRepliesSuccessSchemaMessagesInnerInner struct {
	ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf *ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf
	ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1 *ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ConversationsRepliesSuccessSchemaMessagesInnerInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf
	err = json.Unmarshal(data, &dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf);
	if err == nil {
		jsonConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf, _ := json.Marshal(dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf)
		if string(jsonConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf) == "{}" { // empty struct
			dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf = nil
		} else {
			return nil // data stored in dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf, return on the first match
		}
	} else {
		dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf = nil
	}

	// try to unmarshal JSON data into ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1
	err = json.Unmarshal(data, &dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1);
	if err == nil {
		jsonConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1, _ := json.Marshal(dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1)
		if string(jsonConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1) == "{}" { // empty struct
			dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1 = nil
		} else {
			return nil // data stored in dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1, return on the first match
		}
	} else {
		dst.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ConversationsRepliesSuccessSchemaMessagesInnerInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ConversationsRepliesSuccessSchemaMessagesInnerInner) MarshalJSON() ([]byte, error) {
	if src.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf != nil {
		return json.Marshal(&src.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf)
	}

	if src.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1 != nil {
		return json.Marshal(&src.ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableConversationsRepliesSuccessSchemaMessagesInnerInner struct {
	value *ConversationsRepliesSuccessSchemaMessagesInnerInner
	isSet bool
}

func (v NullableConversationsRepliesSuccessSchemaMessagesInnerInner) Get() *ConversationsRepliesSuccessSchemaMessagesInnerInner {
	return v.value
}

func (v *NullableConversationsRepliesSuccessSchemaMessagesInnerInner) Set(val *ConversationsRepliesSuccessSchemaMessagesInnerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationsRepliesSuccessSchemaMessagesInnerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationsRepliesSuccessSchemaMessagesInnerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationsRepliesSuccessSchemaMessagesInnerInner(val *ConversationsRepliesSuccessSchemaMessagesInnerInner) *NullableConversationsRepliesSuccessSchemaMessagesInnerInner {
	return &NullableConversationsRepliesSuccessSchemaMessagesInnerInner{value: val, isSet: true}
}

func (v NullableConversationsRepliesSuccessSchemaMessagesInnerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationsRepliesSuccessSchemaMessagesInnerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


