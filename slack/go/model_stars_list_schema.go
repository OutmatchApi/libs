/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// StarsListSchema Schema for successful response from stars.list method
type StarsListSchema struct {
	Items [][]StarsListSchemaItemsInnerInner `json:"items"`
	Ok DefsOkTrue `json:"ok"`
	Paging *ObjsPaging `json:"paging,omitempty"`
}

// NewStarsListSchema instantiates a new StarsListSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStarsListSchema(items [][]StarsListSchemaItemsInnerInner, ok DefsOkTrue) *StarsListSchema {
	this := StarsListSchema{}
	this.Items = items
	this.Ok = ok
	return &this
}

// NewStarsListSchemaWithDefaults instantiates a new StarsListSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStarsListSchemaWithDefaults() *StarsListSchema {
	this := StarsListSchema{}
	return &this
}

// GetItems returns the Items field value
func (o *StarsListSchema) GetItems() [][]StarsListSchemaItemsInnerInner {
	if o == nil {
		var ret [][]StarsListSchemaItemsInnerInner
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *StarsListSchema) GetItemsOk() ([][]StarsListSchemaItemsInnerInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *StarsListSchema) SetItems(v [][]StarsListSchemaItemsInnerInner) {
	o.Items = v
}

// GetOk returns the Ok field value
func (o *StarsListSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *StarsListSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *StarsListSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *StarsListSchema) GetPaging() ObjsPaging {
	if o == nil || isNil(o.Paging) {
		var ret ObjsPaging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StarsListSchema) GetPagingOk() (*ObjsPaging, bool) {
	if o == nil || isNil(o.Paging) {
    return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *StarsListSchema) HasPaging() bool {
	if o != nil && !isNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ObjsPaging and assigns it to the Paging field.
func (o *StarsListSchema) SetPaging(v ObjsPaging) {
	o.Paging = &v
}

func (o StarsListSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if !isNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableStarsListSchema struct {
	value *StarsListSchema
	isSet bool
}

func (v NullableStarsListSchema) Get() *StarsListSchema {
	return v.value
}

func (v *NullableStarsListSchema) Set(val *StarsListSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableStarsListSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableStarsListSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStarsListSchema(val *StarsListSchema) *NullableStarsListSchema {
	return &NullableStarsListSchema{value: val, isSet: true}
}

func (v NullableStarsListSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStarsListSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


