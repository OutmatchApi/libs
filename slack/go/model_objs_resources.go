/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsResources struct for ObjsResources
type ObjsResources struct {
	ExcludedIds [][]ObjsResourcesExcludedIdsInnerInner `json:"excluded_ids,omitempty"`
	Ids [][]ObjsResourcesExcludedIdsInnerInner `json:"ids"`
	Wildcard *bool `json:"wildcard,omitempty"`
}

// NewObjsResources instantiates a new ObjsResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsResources(ids [][]ObjsResourcesExcludedIdsInnerInner) *ObjsResources {
	this := ObjsResources{}
	this.Ids = ids
	return &this
}

// NewObjsResourcesWithDefaults instantiates a new ObjsResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsResourcesWithDefaults() *ObjsResources {
	this := ObjsResources{}
	return &this
}

// GetExcludedIds returns the ExcludedIds field value if set, zero value otherwise.
func (o *ObjsResources) GetExcludedIds() [][]ObjsResourcesExcludedIdsInnerInner {
	if o == nil || isNil(o.ExcludedIds) {
		var ret [][]ObjsResourcesExcludedIdsInnerInner
		return ret
	}
	return o.ExcludedIds
}

// GetExcludedIdsOk returns a tuple with the ExcludedIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsResources) GetExcludedIdsOk() ([][]ObjsResourcesExcludedIdsInnerInner, bool) {
	if o == nil || isNil(o.ExcludedIds) {
    return nil, false
	}
	return o.ExcludedIds, true
}

// HasExcludedIds returns a boolean if a field has been set.
func (o *ObjsResources) HasExcludedIds() bool {
	if o != nil && !isNil(o.ExcludedIds) {
		return true
	}

	return false
}

// SetExcludedIds gets a reference to the given [][]ObjsResourcesExcludedIdsInnerInner and assigns it to the ExcludedIds field.
func (o *ObjsResources) SetExcludedIds(v [][]ObjsResourcesExcludedIdsInnerInner) {
	o.ExcludedIds = v
}

// GetIds returns the Ids field value
func (o *ObjsResources) GetIds() [][]ObjsResourcesExcludedIdsInnerInner {
	if o == nil {
		var ret [][]ObjsResourcesExcludedIdsInnerInner
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *ObjsResources) GetIdsOk() ([][]ObjsResourcesExcludedIdsInnerInner, bool) {
	if o == nil {
    return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *ObjsResources) SetIds(v [][]ObjsResourcesExcludedIdsInnerInner) {
	o.Ids = v
}

// GetWildcard returns the Wildcard field value if set, zero value otherwise.
func (o *ObjsResources) GetWildcard() bool {
	if o == nil || isNil(o.Wildcard) {
		var ret bool
		return ret
	}
	return *o.Wildcard
}

// GetWildcardOk returns a tuple with the Wildcard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsResources) GetWildcardOk() (*bool, bool) {
	if o == nil || isNil(o.Wildcard) {
    return nil, false
	}
	return o.Wildcard, true
}

// HasWildcard returns a boolean if a field has been set.
func (o *ObjsResources) HasWildcard() bool {
	if o != nil && !isNil(o.Wildcard) {
		return true
	}

	return false
}

// SetWildcard gets a reference to the given bool and assigns it to the Wildcard field.
func (o *ObjsResources) SetWildcard(v bool) {
	o.Wildcard = &v
}

func (o ObjsResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExcludedIds) {
		toSerialize["excluded_ids"] = o.ExcludedIds
	}
	if true {
		toSerialize["ids"] = o.Ids
	}
	if !isNil(o.Wildcard) {
		toSerialize["wildcard"] = o.Wildcard
	}
	return json.Marshal(toSerialize)
}

type NullableObjsResources struct {
	value *ObjsResources
	isSet bool
}

func (v NullableObjsResources) Get() *ObjsResources {
	return v.value
}

func (v *NullableObjsResources) Set(val *ObjsResources) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsResources) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsResources(val *ObjsResources) *NullableObjsResources {
	return &NullableObjsResources{value: val, isSet: true}
}

func (v NullableObjsResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


