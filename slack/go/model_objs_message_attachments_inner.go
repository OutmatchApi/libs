/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsMessageAttachmentsInner struct for ObjsMessageAttachmentsInner
type ObjsMessageAttachmentsInner struct {
	Fallback *string `json:"fallback,omitempty"`
	Id int32 `json:"id"`
	ImageBytes *int32 `json:"image_bytes,omitempty"`
	ImageHeight *int32 `json:"image_height,omitempty"`
	ImageUrl *string `json:"image_url,omitempty"`
	ImageWidth *int32 `json:"image_width,omitempty"`
}

// NewObjsMessageAttachmentsInner instantiates a new ObjsMessageAttachmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsMessageAttachmentsInner(id int32) *ObjsMessageAttachmentsInner {
	this := ObjsMessageAttachmentsInner{}
	this.Id = id
	return &this
}

// NewObjsMessageAttachmentsInnerWithDefaults instantiates a new ObjsMessageAttachmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsMessageAttachmentsInnerWithDefaults() *ObjsMessageAttachmentsInner {
	this := ObjsMessageAttachmentsInner{}
	return &this
}

// GetFallback returns the Fallback field value if set, zero value otherwise.
func (o *ObjsMessageAttachmentsInner) GetFallback() string {
	if o == nil || isNil(o.Fallback) {
		var ret string
		return ret
	}
	return *o.Fallback
}

// GetFallbackOk returns a tuple with the Fallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsMessageAttachmentsInner) GetFallbackOk() (*string, bool) {
	if o == nil || isNil(o.Fallback) {
    return nil, false
	}
	return o.Fallback, true
}

// HasFallback returns a boolean if a field has been set.
func (o *ObjsMessageAttachmentsInner) HasFallback() bool {
	if o != nil && !isNil(o.Fallback) {
		return true
	}

	return false
}

// SetFallback gets a reference to the given string and assigns it to the Fallback field.
func (o *ObjsMessageAttachmentsInner) SetFallback(v string) {
	o.Fallback = &v
}

// GetId returns the Id field value
func (o *ObjsMessageAttachmentsInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjsMessageAttachmentsInner) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjsMessageAttachmentsInner) SetId(v int32) {
	o.Id = v
}

// GetImageBytes returns the ImageBytes field value if set, zero value otherwise.
func (o *ObjsMessageAttachmentsInner) GetImageBytes() int32 {
	if o == nil || isNil(o.ImageBytes) {
		var ret int32
		return ret
	}
	return *o.ImageBytes
}

// GetImageBytesOk returns a tuple with the ImageBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsMessageAttachmentsInner) GetImageBytesOk() (*int32, bool) {
	if o == nil || isNil(o.ImageBytes) {
    return nil, false
	}
	return o.ImageBytes, true
}

// HasImageBytes returns a boolean if a field has been set.
func (o *ObjsMessageAttachmentsInner) HasImageBytes() bool {
	if o != nil && !isNil(o.ImageBytes) {
		return true
	}

	return false
}

// SetImageBytes gets a reference to the given int32 and assigns it to the ImageBytes field.
func (o *ObjsMessageAttachmentsInner) SetImageBytes(v int32) {
	o.ImageBytes = &v
}

// GetImageHeight returns the ImageHeight field value if set, zero value otherwise.
func (o *ObjsMessageAttachmentsInner) GetImageHeight() int32 {
	if o == nil || isNil(o.ImageHeight) {
		var ret int32
		return ret
	}
	return *o.ImageHeight
}

// GetImageHeightOk returns a tuple with the ImageHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsMessageAttachmentsInner) GetImageHeightOk() (*int32, bool) {
	if o == nil || isNil(o.ImageHeight) {
    return nil, false
	}
	return o.ImageHeight, true
}

// HasImageHeight returns a boolean if a field has been set.
func (o *ObjsMessageAttachmentsInner) HasImageHeight() bool {
	if o != nil && !isNil(o.ImageHeight) {
		return true
	}

	return false
}

// SetImageHeight gets a reference to the given int32 and assigns it to the ImageHeight field.
func (o *ObjsMessageAttachmentsInner) SetImageHeight(v int32) {
	o.ImageHeight = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *ObjsMessageAttachmentsInner) GetImageUrl() string {
	if o == nil || isNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsMessageAttachmentsInner) GetImageUrlOk() (*string, bool) {
	if o == nil || isNil(o.ImageUrl) {
    return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *ObjsMessageAttachmentsInner) HasImageUrl() bool {
	if o != nil && !isNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *ObjsMessageAttachmentsInner) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetImageWidth returns the ImageWidth field value if set, zero value otherwise.
func (o *ObjsMessageAttachmentsInner) GetImageWidth() int32 {
	if o == nil || isNil(o.ImageWidth) {
		var ret int32
		return ret
	}
	return *o.ImageWidth
}

// GetImageWidthOk returns a tuple with the ImageWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsMessageAttachmentsInner) GetImageWidthOk() (*int32, bool) {
	if o == nil || isNil(o.ImageWidth) {
    return nil, false
	}
	return o.ImageWidth, true
}

// HasImageWidth returns a boolean if a field has been set.
func (o *ObjsMessageAttachmentsInner) HasImageWidth() bool {
	if o != nil && !isNil(o.ImageWidth) {
		return true
	}

	return false
}

// SetImageWidth gets a reference to the given int32 and assigns it to the ImageWidth field.
func (o *ObjsMessageAttachmentsInner) SetImageWidth(v int32) {
	o.ImageWidth = &v
}

func (o ObjsMessageAttachmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fallback) {
		toSerialize["fallback"] = o.Fallback
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ImageBytes) {
		toSerialize["image_bytes"] = o.ImageBytes
	}
	if !isNil(o.ImageHeight) {
		toSerialize["image_height"] = o.ImageHeight
	}
	if !isNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if !isNil(o.ImageWidth) {
		toSerialize["image_width"] = o.ImageWidth
	}
	return json.Marshal(toSerialize)
}

type NullableObjsMessageAttachmentsInner struct {
	value *ObjsMessageAttachmentsInner
	isSet bool
}

func (v NullableObjsMessageAttachmentsInner) Get() *ObjsMessageAttachmentsInner {
	return v.value
}

func (v *NullableObjsMessageAttachmentsInner) Set(val *ObjsMessageAttachmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsMessageAttachmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsMessageAttachmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsMessageAttachmentsInner(val *ObjsMessageAttachmentsInner) *NullableObjsMessageAttachmentsInner {
	return &NullableObjsMessageAttachmentsInner{value: val, isSet: true}
}

func (v NullableObjsMessageAttachmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsMessageAttachmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


