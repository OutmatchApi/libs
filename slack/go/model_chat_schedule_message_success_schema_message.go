/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ChatScheduleMessageSuccessSchemaMessage struct for ChatScheduleMessageSuccessSchemaMessage
type ChatScheduleMessageSuccessSchemaMessage struct {
	BotId string `json:"bot_id"`
	BotProfile *ObjsBotProfile `json:"bot_profile,omitempty"`
	Team string `json:"team"`
	Text string `json:"text"`
	Type string `json:"type"`
	User string `json:"user"`
	Username *string `json:"username,omitempty"`
}

// NewChatScheduleMessageSuccessSchemaMessage instantiates a new ChatScheduleMessageSuccessSchemaMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatScheduleMessageSuccessSchemaMessage(botId string, team string, text string, type_ string, user string) *ChatScheduleMessageSuccessSchemaMessage {
	this := ChatScheduleMessageSuccessSchemaMessage{}
	this.BotId = botId
	this.Team = team
	this.Text = text
	this.Type = type_
	this.User = user
	return &this
}

// NewChatScheduleMessageSuccessSchemaMessageWithDefaults instantiates a new ChatScheduleMessageSuccessSchemaMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatScheduleMessageSuccessSchemaMessageWithDefaults() *ChatScheduleMessageSuccessSchemaMessage {
	this := ChatScheduleMessageSuccessSchemaMessage{}
	return &this
}

// GetBotId returns the BotId field value
func (o *ChatScheduleMessageSuccessSchemaMessage) GetBotId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BotId
}

// GetBotIdOk returns a tuple with the BotId field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetBotIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BotId, true
}

// SetBotId sets field value
func (o *ChatScheduleMessageSuccessSchemaMessage) SetBotId(v string) {
	o.BotId = v
}

// GetBotProfile returns the BotProfile field value if set, zero value otherwise.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetBotProfile() ObjsBotProfile {
	if o == nil || isNil(o.BotProfile) {
		var ret ObjsBotProfile
		return ret
	}
	return *o.BotProfile
}

// GetBotProfileOk returns a tuple with the BotProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetBotProfileOk() (*ObjsBotProfile, bool) {
	if o == nil || isNil(o.BotProfile) {
    return nil, false
	}
	return o.BotProfile, true
}

// HasBotProfile returns a boolean if a field has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) HasBotProfile() bool {
	if o != nil && !isNil(o.BotProfile) {
		return true
	}

	return false
}

// SetBotProfile gets a reference to the given ObjsBotProfile and assigns it to the BotProfile field.
func (o *ChatScheduleMessageSuccessSchemaMessage) SetBotProfile(v ObjsBotProfile) {
	o.BotProfile = &v
}

// GetTeam returns the Team field value
func (o *ChatScheduleMessageSuccessSchemaMessage) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetTeamOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *ChatScheduleMessageSuccessSchemaMessage) SetTeam(v string) {
	o.Team = v
}

// GetText returns the Text field value
func (o *ChatScheduleMessageSuccessSchemaMessage) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *ChatScheduleMessageSuccessSchemaMessage) SetText(v string) {
	o.Text = v
}

// GetType returns the Type field value
func (o *ChatScheduleMessageSuccessSchemaMessage) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ChatScheduleMessageSuccessSchemaMessage) SetType(v string) {
	o.Type = v
}

// GetUser returns the User field value
func (o *ChatScheduleMessageSuccessSchemaMessage) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetUserOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ChatScheduleMessageSuccessSchemaMessage) SetUser(v string) {
	o.User = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ChatScheduleMessageSuccessSchemaMessage) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ChatScheduleMessageSuccessSchemaMessage) SetUsername(v string) {
	o.Username = &v
}

func (o ChatScheduleMessageSuccessSchemaMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bot_id"] = o.BotId
	}
	if !isNil(o.BotProfile) {
		toSerialize["bot_profile"] = o.BotProfile
	}
	if true {
		toSerialize["team"] = o.Team
	}
	if true {
		toSerialize["text"] = o.Text
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["user"] = o.User
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableChatScheduleMessageSuccessSchemaMessage struct {
	value *ChatScheduleMessageSuccessSchemaMessage
	isSet bool
}

func (v NullableChatScheduleMessageSuccessSchemaMessage) Get() *ChatScheduleMessageSuccessSchemaMessage {
	return v.value
}

func (v *NullableChatScheduleMessageSuccessSchemaMessage) Set(val *ChatScheduleMessageSuccessSchemaMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableChatScheduleMessageSuccessSchemaMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableChatScheduleMessageSuccessSchemaMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatScheduleMessageSuccessSchemaMessage(val *ChatScheduleMessageSuccessSchemaMessage) *NullableChatScheduleMessageSuccessSchemaMessage {
	return &NullableChatScheduleMessageSuccessSchemaMessage{value: val, isSet: true}
}

func (v NullableChatScheduleMessageSuccessSchemaMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatScheduleMessageSuccessSchemaMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


