/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ChatScheduleMessageSuccessSchema Schema for successful response of chat.scheduleMessage method
type ChatScheduleMessageSuccessSchema struct {
	Channel string `json:"channel"`
	Message ChatScheduleMessageSuccessSchemaMessage `json:"message"`
	Ok DefsOkTrue `json:"ok"`
	PostAt int32 `json:"post_at"`
	ScheduledMessageId string `json:"scheduled_message_id"`
}

// NewChatScheduleMessageSuccessSchema instantiates a new ChatScheduleMessageSuccessSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatScheduleMessageSuccessSchema(channel string, message ChatScheduleMessageSuccessSchemaMessage, ok DefsOkTrue, postAt int32, scheduledMessageId string) *ChatScheduleMessageSuccessSchema {
	this := ChatScheduleMessageSuccessSchema{}
	this.Channel = channel
	this.Message = message
	this.Ok = ok
	this.PostAt = postAt
	this.ScheduledMessageId = scheduledMessageId
	return &this
}

// NewChatScheduleMessageSuccessSchemaWithDefaults instantiates a new ChatScheduleMessageSuccessSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatScheduleMessageSuccessSchemaWithDefaults() *ChatScheduleMessageSuccessSchema {
	this := ChatScheduleMessageSuccessSchema{}
	return &this
}

// GetChannel returns the Channel field value
func (o *ChatScheduleMessageSuccessSchema) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchema) GetChannelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *ChatScheduleMessageSuccessSchema) SetChannel(v string) {
	o.Channel = v
}

// GetMessage returns the Message field value
func (o *ChatScheduleMessageSuccessSchema) GetMessage() ChatScheduleMessageSuccessSchemaMessage {
	if o == nil {
		var ret ChatScheduleMessageSuccessSchemaMessage
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchema) GetMessageOk() (*ChatScheduleMessageSuccessSchemaMessage, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ChatScheduleMessageSuccessSchema) SetMessage(v ChatScheduleMessageSuccessSchemaMessage) {
	o.Message = v
}

// GetOk returns the Ok field value
func (o *ChatScheduleMessageSuccessSchema) GetOk() DefsOkTrue {
	if o == nil {
		var ret DefsOkTrue
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchema) GetOkOk() (*DefsOkTrue, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *ChatScheduleMessageSuccessSchema) SetOk(v DefsOkTrue) {
	o.Ok = v
}

// GetPostAt returns the PostAt field value
func (o *ChatScheduleMessageSuccessSchema) GetPostAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PostAt
}

// GetPostAtOk returns a tuple with the PostAt field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchema) GetPostAtOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PostAt, true
}

// SetPostAt sets field value
func (o *ChatScheduleMessageSuccessSchema) SetPostAt(v int32) {
	o.PostAt = v
}

// GetScheduledMessageId returns the ScheduledMessageId field value
func (o *ChatScheduleMessageSuccessSchema) GetScheduledMessageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScheduledMessageId
}

// GetScheduledMessageIdOk returns a tuple with the ScheduledMessageId field value
// and a boolean to check if the value has been set.
func (o *ChatScheduleMessageSuccessSchema) GetScheduledMessageIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ScheduledMessageId, true
}

// SetScheduledMessageId sets field value
func (o *ChatScheduleMessageSuccessSchema) SetScheduledMessageId(v string) {
	o.ScheduledMessageId = v
}

func (o ChatScheduleMessageSuccessSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["post_at"] = o.PostAt
	}
	if true {
		toSerialize["scheduled_message_id"] = o.ScheduledMessageId
	}
	return json.Marshal(toSerialize)
}

type NullableChatScheduleMessageSuccessSchema struct {
	value *ChatScheduleMessageSuccessSchema
	isSet bool
}

func (v NullableChatScheduleMessageSuccessSchema) Get() *ChatScheduleMessageSuccessSchema {
	return v.value
}

func (v *NullableChatScheduleMessageSuccessSchema) Set(val *ChatScheduleMessageSuccessSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableChatScheduleMessageSuccessSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableChatScheduleMessageSuccessSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatScheduleMessageSuccessSchema(val *ChatScheduleMessageSuccessSchema) *NullableChatScheduleMessageSuccessSchema {
	return &NullableChatScheduleMessageSuccessSchema{value: val, isSet: true}
}

func (v NullableChatScheduleMessageSuccessSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatScheduleMessageSuccessSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


