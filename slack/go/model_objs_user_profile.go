/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

API version: 1.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slack

import (
	"encoding/json"
)

// ObjsUserProfile struct for ObjsUserProfile
type ObjsUserProfile struct {
	AlwaysActive *bool `json:"always_active,omitempty"`
	ApiAppId *string `json:"api_app_id,omitempty"`
	AvatarHash string `json:"avatar_hash"`
	BotId *string `json:"bot_id,omitempty"`
	DisplayName string `json:"display_name"`
	DisplayNameNormalized string `json:"display_name_normalized"`
	Email NullableString `json:"email,omitempty"`
	Fields []map[string]interface{} `json:"fields"`
	FirstName NullableString `json:"first_name,omitempty"`
	GuestExpirationTs NullableInt32 `json:"guest_expiration_ts,omitempty"`
	GuestInvitedBy NullableString `json:"guest_invited_by,omitempty"`
	Image1024 NullableString `json:"image_1024,omitempty"`
	Image192 NullableString `json:"image_192,omitempty"`
	Image24 NullableString `json:"image_24,omitempty"`
	Image32 NullableString `json:"image_32,omitempty"`
	Image48 NullableString `json:"image_48,omitempty"`
	Image512 NullableString `json:"image_512,omitempty"`
	Image72 NullableString `json:"image_72,omitempty"`
	ImageOriginal NullableString `json:"image_original,omitempty"`
	IsAppUser *bool `json:"is_app_user,omitempty"`
	IsCustomImage *bool `json:"is_custom_image,omitempty"`
	IsRestricted NullableBool `json:"is_restricted,omitempty"`
	IsUltraRestricted NullableBool `json:"is_ultra_restricted,omitempty"`
	LastAvatarImageHash *string `json:"last_avatar_image_hash,omitempty"`
	LastName NullableString `json:"last_name,omitempty"`
	MembershipsCount *int32 `json:"memberships_count,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Phone string `json:"phone"`
	Pronouns *string `json:"pronouns,omitempty"`
	RealName string `json:"real_name"`
	RealNameNormalized string `json:"real_name_normalized"`
	Skype string `json:"skype"`
	StatusDefaultEmoji *string `json:"status_default_emoji,omitempty"`
	StatusDefaultText *string `json:"status_default_text,omitempty"`
	StatusDefaultTextCanonical NullableString `json:"status_default_text_canonical,omitempty"`
	StatusEmoji string `json:"status_emoji"`
	StatusExpiration *int32 `json:"status_expiration,omitempty"`
	StatusText string `json:"status_text"`
	StatusTextCanonical NullableString `json:"status_text_canonical,omitempty"`
	Team *string `json:"team,omitempty"`
	Title string `json:"title"`
	Updated *int32 `json:"updated,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	Username NullableString `json:"username,omitempty"`
}

// NewObjsUserProfile instantiates a new ObjsUserProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjsUserProfile(avatarHash string, displayName string, displayNameNormalized string, fields []map[string]interface{}, phone string, realName string, realNameNormalized string, skype string, statusEmoji string, statusText string, title string) *ObjsUserProfile {
	this := ObjsUserProfile{}
	this.AvatarHash = avatarHash
	this.DisplayName = displayName
	this.DisplayNameNormalized = displayNameNormalized
	this.Fields = fields
	this.Phone = phone
	this.RealName = realName
	this.RealNameNormalized = realNameNormalized
	this.Skype = skype
	this.StatusEmoji = statusEmoji
	this.StatusText = statusText
	this.Title = title
	return &this
}

// NewObjsUserProfileWithDefaults instantiates a new ObjsUserProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjsUserProfileWithDefaults() *ObjsUserProfile {
	this := ObjsUserProfile{}
	return &this
}

// GetAlwaysActive returns the AlwaysActive field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetAlwaysActive() bool {
	if o == nil || isNil(o.AlwaysActive) {
		var ret bool
		return ret
	}
	return *o.AlwaysActive
}

// GetAlwaysActiveOk returns a tuple with the AlwaysActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetAlwaysActiveOk() (*bool, bool) {
	if o == nil || isNil(o.AlwaysActive) {
    return nil, false
	}
	return o.AlwaysActive, true
}

// HasAlwaysActive returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasAlwaysActive() bool {
	if o != nil && !isNil(o.AlwaysActive) {
		return true
	}

	return false
}

// SetAlwaysActive gets a reference to the given bool and assigns it to the AlwaysActive field.
func (o *ObjsUserProfile) SetAlwaysActive(v bool) {
	o.AlwaysActive = &v
}

// GetApiAppId returns the ApiAppId field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetApiAppId() string {
	if o == nil || isNil(o.ApiAppId) {
		var ret string
		return ret
	}
	return *o.ApiAppId
}

// GetApiAppIdOk returns a tuple with the ApiAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetApiAppIdOk() (*string, bool) {
	if o == nil || isNil(o.ApiAppId) {
    return nil, false
	}
	return o.ApiAppId, true
}

// HasApiAppId returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasApiAppId() bool {
	if o != nil && !isNil(o.ApiAppId) {
		return true
	}

	return false
}

// SetApiAppId gets a reference to the given string and assigns it to the ApiAppId field.
func (o *ObjsUserProfile) SetApiAppId(v string) {
	o.ApiAppId = &v
}

// GetAvatarHash returns the AvatarHash field value
func (o *ObjsUserProfile) GetAvatarHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvatarHash
}

// GetAvatarHashOk returns a tuple with the AvatarHash field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetAvatarHashOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AvatarHash, true
}

// SetAvatarHash sets field value
func (o *ObjsUserProfile) SetAvatarHash(v string) {
	o.AvatarHash = v
}

// GetBotId returns the BotId field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetBotId() string {
	if o == nil || isNil(o.BotId) {
		var ret string
		return ret
	}
	return *o.BotId
}

// GetBotIdOk returns a tuple with the BotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetBotIdOk() (*string, bool) {
	if o == nil || isNil(o.BotId) {
    return nil, false
	}
	return o.BotId, true
}

// HasBotId returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasBotId() bool {
	if o != nil && !isNil(o.BotId) {
		return true
	}

	return false
}

// SetBotId gets a reference to the given string and assigns it to the BotId field.
func (o *ObjsUserProfile) SetBotId(v string) {
	o.BotId = &v
}

// GetDisplayName returns the DisplayName field value
func (o *ObjsUserProfile) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetDisplayNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ObjsUserProfile) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDisplayNameNormalized returns the DisplayNameNormalized field value
func (o *ObjsUserProfile) GetDisplayNameNormalized() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayNameNormalized
}

// GetDisplayNameNormalizedOk returns a tuple with the DisplayNameNormalized field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetDisplayNameNormalizedOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DisplayNameNormalized, true
}

// SetDisplayNameNormalized sets field value
func (o *ObjsUserProfile) SetDisplayNameNormalized(v string) {
	o.DisplayNameNormalized = v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetEmail() string {
	if o == nil || isNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetEmailOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *ObjsUserProfile) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *ObjsUserProfile) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *ObjsUserProfile) UnsetEmail() {
	o.Email.Unset()
}

// GetFields returns the Fields field value
// If the value is explicit nil, the zero value for []map[string]interface{} will be returned
func (o *ObjsUserProfile) GetFields() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetFieldsOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *ObjsUserProfile) SetFields(v []map[string]interface{}) {
	o.Fields = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetFirstName() string {
	if o == nil || isNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetFirstNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *ObjsUserProfile) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *ObjsUserProfile) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *ObjsUserProfile) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetGuestExpirationTs returns the GuestExpirationTs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetGuestExpirationTs() int32 {
	if o == nil || isNil(o.GuestExpirationTs.Get()) {
		var ret int32
		return ret
	}
	return *o.GuestExpirationTs.Get()
}

// GetGuestExpirationTsOk returns a tuple with the GuestExpirationTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetGuestExpirationTsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.GuestExpirationTs.Get(), o.GuestExpirationTs.IsSet()
}

// HasGuestExpirationTs returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasGuestExpirationTs() bool {
	if o != nil && o.GuestExpirationTs.IsSet() {
		return true
	}

	return false
}

// SetGuestExpirationTs gets a reference to the given NullableInt32 and assigns it to the GuestExpirationTs field.
func (o *ObjsUserProfile) SetGuestExpirationTs(v int32) {
	o.GuestExpirationTs.Set(&v)
}
// SetGuestExpirationTsNil sets the value for GuestExpirationTs to be an explicit nil
func (o *ObjsUserProfile) SetGuestExpirationTsNil() {
	o.GuestExpirationTs.Set(nil)
}

// UnsetGuestExpirationTs ensures that no value is present for GuestExpirationTs, not even an explicit nil
func (o *ObjsUserProfile) UnsetGuestExpirationTs() {
	o.GuestExpirationTs.Unset()
}

// GetGuestInvitedBy returns the GuestInvitedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetGuestInvitedBy() string {
	if o == nil || isNil(o.GuestInvitedBy.Get()) {
		var ret string
		return ret
	}
	return *o.GuestInvitedBy.Get()
}

// GetGuestInvitedByOk returns a tuple with the GuestInvitedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetGuestInvitedByOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.GuestInvitedBy.Get(), o.GuestInvitedBy.IsSet()
}

// HasGuestInvitedBy returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasGuestInvitedBy() bool {
	if o != nil && o.GuestInvitedBy.IsSet() {
		return true
	}

	return false
}

// SetGuestInvitedBy gets a reference to the given NullableString and assigns it to the GuestInvitedBy field.
func (o *ObjsUserProfile) SetGuestInvitedBy(v string) {
	o.GuestInvitedBy.Set(&v)
}
// SetGuestInvitedByNil sets the value for GuestInvitedBy to be an explicit nil
func (o *ObjsUserProfile) SetGuestInvitedByNil() {
	o.GuestInvitedBy.Set(nil)
}

// UnsetGuestInvitedBy ensures that no value is present for GuestInvitedBy, not even an explicit nil
func (o *ObjsUserProfile) UnsetGuestInvitedBy() {
	o.GuestInvitedBy.Unset()
}

// GetImage1024 returns the Image1024 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage1024() string {
	if o == nil || isNil(o.Image1024.Get()) {
		var ret string
		return ret
	}
	return *o.Image1024.Get()
}

// GetImage1024Ok returns a tuple with the Image1024 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage1024Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image1024.Get(), o.Image1024.IsSet()
}

// HasImage1024 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage1024() bool {
	if o != nil && o.Image1024.IsSet() {
		return true
	}

	return false
}

// SetImage1024 gets a reference to the given NullableString and assigns it to the Image1024 field.
func (o *ObjsUserProfile) SetImage1024(v string) {
	o.Image1024.Set(&v)
}
// SetImage1024Nil sets the value for Image1024 to be an explicit nil
func (o *ObjsUserProfile) SetImage1024Nil() {
	o.Image1024.Set(nil)
}

// UnsetImage1024 ensures that no value is present for Image1024, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage1024() {
	o.Image1024.Unset()
}

// GetImage192 returns the Image192 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage192() string {
	if o == nil || isNil(o.Image192.Get()) {
		var ret string
		return ret
	}
	return *o.Image192.Get()
}

// GetImage192Ok returns a tuple with the Image192 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage192Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image192.Get(), o.Image192.IsSet()
}

// HasImage192 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage192() bool {
	if o != nil && o.Image192.IsSet() {
		return true
	}

	return false
}

// SetImage192 gets a reference to the given NullableString and assigns it to the Image192 field.
func (o *ObjsUserProfile) SetImage192(v string) {
	o.Image192.Set(&v)
}
// SetImage192Nil sets the value for Image192 to be an explicit nil
func (o *ObjsUserProfile) SetImage192Nil() {
	o.Image192.Set(nil)
}

// UnsetImage192 ensures that no value is present for Image192, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage192() {
	o.Image192.Unset()
}

// GetImage24 returns the Image24 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage24() string {
	if o == nil || isNil(o.Image24.Get()) {
		var ret string
		return ret
	}
	return *o.Image24.Get()
}

// GetImage24Ok returns a tuple with the Image24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage24Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image24.Get(), o.Image24.IsSet()
}

// HasImage24 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage24() bool {
	if o != nil && o.Image24.IsSet() {
		return true
	}

	return false
}

// SetImage24 gets a reference to the given NullableString and assigns it to the Image24 field.
func (o *ObjsUserProfile) SetImage24(v string) {
	o.Image24.Set(&v)
}
// SetImage24Nil sets the value for Image24 to be an explicit nil
func (o *ObjsUserProfile) SetImage24Nil() {
	o.Image24.Set(nil)
}

// UnsetImage24 ensures that no value is present for Image24, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage24() {
	o.Image24.Unset()
}

// GetImage32 returns the Image32 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage32() string {
	if o == nil || isNil(o.Image32.Get()) {
		var ret string
		return ret
	}
	return *o.Image32.Get()
}

// GetImage32Ok returns a tuple with the Image32 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage32Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image32.Get(), o.Image32.IsSet()
}

// HasImage32 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage32() bool {
	if o != nil && o.Image32.IsSet() {
		return true
	}

	return false
}

// SetImage32 gets a reference to the given NullableString and assigns it to the Image32 field.
func (o *ObjsUserProfile) SetImage32(v string) {
	o.Image32.Set(&v)
}
// SetImage32Nil sets the value for Image32 to be an explicit nil
func (o *ObjsUserProfile) SetImage32Nil() {
	o.Image32.Set(nil)
}

// UnsetImage32 ensures that no value is present for Image32, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage32() {
	o.Image32.Unset()
}

// GetImage48 returns the Image48 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage48() string {
	if o == nil || isNil(o.Image48.Get()) {
		var ret string
		return ret
	}
	return *o.Image48.Get()
}

// GetImage48Ok returns a tuple with the Image48 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage48Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image48.Get(), o.Image48.IsSet()
}

// HasImage48 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage48() bool {
	if o != nil && o.Image48.IsSet() {
		return true
	}

	return false
}

// SetImage48 gets a reference to the given NullableString and assigns it to the Image48 field.
func (o *ObjsUserProfile) SetImage48(v string) {
	o.Image48.Set(&v)
}
// SetImage48Nil sets the value for Image48 to be an explicit nil
func (o *ObjsUserProfile) SetImage48Nil() {
	o.Image48.Set(nil)
}

// UnsetImage48 ensures that no value is present for Image48, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage48() {
	o.Image48.Unset()
}

// GetImage512 returns the Image512 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage512() string {
	if o == nil || isNil(o.Image512.Get()) {
		var ret string
		return ret
	}
	return *o.Image512.Get()
}

// GetImage512Ok returns a tuple with the Image512 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage512Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image512.Get(), o.Image512.IsSet()
}

// HasImage512 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage512() bool {
	if o != nil && o.Image512.IsSet() {
		return true
	}

	return false
}

// SetImage512 gets a reference to the given NullableString and assigns it to the Image512 field.
func (o *ObjsUserProfile) SetImage512(v string) {
	o.Image512.Set(&v)
}
// SetImage512Nil sets the value for Image512 to be an explicit nil
func (o *ObjsUserProfile) SetImage512Nil() {
	o.Image512.Set(nil)
}

// UnsetImage512 ensures that no value is present for Image512, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage512() {
	o.Image512.Unset()
}

// GetImage72 returns the Image72 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImage72() string {
	if o == nil || isNil(o.Image72.Get()) {
		var ret string
		return ret
	}
	return *o.Image72.Get()
}

// GetImage72Ok returns a tuple with the Image72 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImage72Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Image72.Get(), o.Image72.IsSet()
}

// HasImage72 returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImage72() bool {
	if o != nil && o.Image72.IsSet() {
		return true
	}

	return false
}

// SetImage72 gets a reference to the given NullableString and assigns it to the Image72 field.
func (o *ObjsUserProfile) SetImage72(v string) {
	o.Image72.Set(&v)
}
// SetImage72Nil sets the value for Image72 to be an explicit nil
func (o *ObjsUserProfile) SetImage72Nil() {
	o.Image72.Set(nil)
}

// UnsetImage72 ensures that no value is present for Image72, not even an explicit nil
func (o *ObjsUserProfile) UnsetImage72() {
	o.Image72.Unset()
}

// GetImageOriginal returns the ImageOriginal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetImageOriginal() string {
	if o == nil || isNil(o.ImageOriginal.Get()) {
		var ret string
		return ret
	}
	return *o.ImageOriginal.Get()
}

// GetImageOriginalOk returns a tuple with the ImageOriginal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetImageOriginalOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ImageOriginal.Get(), o.ImageOriginal.IsSet()
}

// HasImageOriginal returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasImageOriginal() bool {
	if o != nil && o.ImageOriginal.IsSet() {
		return true
	}

	return false
}

// SetImageOriginal gets a reference to the given NullableString and assigns it to the ImageOriginal field.
func (o *ObjsUserProfile) SetImageOriginal(v string) {
	o.ImageOriginal.Set(&v)
}
// SetImageOriginalNil sets the value for ImageOriginal to be an explicit nil
func (o *ObjsUserProfile) SetImageOriginalNil() {
	o.ImageOriginal.Set(nil)
}

// UnsetImageOriginal ensures that no value is present for ImageOriginal, not even an explicit nil
func (o *ObjsUserProfile) UnsetImageOriginal() {
	o.ImageOriginal.Unset()
}

// GetIsAppUser returns the IsAppUser field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetIsAppUser() bool {
	if o == nil || isNil(o.IsAppUser) {
		var ret bool
		return ret
	}
	return *o.IsAppUser
}

// GetIsAppUserOk returns a tuple with the IsAppUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetIsAppUserOk() (*bool, bool) {
	if o == nil || isNil(o.IsAppUser) {
    return nil, false
	}
	return o.IsAppUser, true
}

// HasIsAppUser returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasIsAppUser() bool {
	if o != nil && !isNil(o.IsAppUser) {
		return true
	}

	return false
}

// SetIsAppUser gets a reference to the given bool and assigns it to the IsAppUser field.
func (o *ObjsUserProfile) SetIsAppUser(v bool) {
	o.IsAppUser = &v
}

// GetIsCustomImage returns the IsCustomImage field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetIsCustomImage() bool {
	if o == nil || isNil(o.IsCustomImage) {
		var ret bool
		return ret
	}
	return *o.IsCustomImage
}

// GetIsCustomImageOk returns a tuple with the IsCustomImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetIsCustomImageOk() (*bool, bool) {
	if o == nil || isNil(o.IsCustomImage) {
    return nil, false
	}
	return o.IsCustomImage, true
}

// HasIsCustomImage returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasIsCustomImage() bool {
	if o != nil && !isNil(o.IsCustomImage) {
		return true
	}

	return false
}

// SetIsCustomImage gets a reference to the given bool and assigns it to the IsCustomImage field.
func (o *ObjsUserProfile) SetIsCustomImage(v bool) {
	o.IsCustomImage = &v
}

// GetIsRestricted returns the IsRestricted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetIsRestricted() bool {
	if o == nil || isNil(o.IsRestricted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRestricted.Get()
}

// GetIsRestrictedOk returns a tuple with the IsRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetIsRestrictedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsRestricted.Get(), o.IsRestricted.IsSet()
}

// HasIsRestricted returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasIsRestricted() bool {
	if o != nil && o.IsRestricted.IsSet() {
		return true
	}

	return false
}

// SetIsRestricted gets a reference to the given NullableBool and assigns it to the IsRestricted field.
func (o *ObjsUserProfile) SetIsRestricted(v bool) {
	o.IsRestricted.Set(&v)
}
// SetIsRestrictedNil sets the value for IsRestricted to be an explicit nil
func (o *ObjsUserProfile) SetIsRestrictedNil() {
	o.IsRestricted.Set(nil)
}

// UnsetIsRestricted ensures that no value is present for IsRestricted, not even an explicit nil
func (o *ObjsUserProfile) UnsetIsRestricted() {
	o.IsRestricted.Unset()
}

// GetIsUltraRestricted returns the IsUltraRestricted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetIsUltraRestricted() bool {
	if o == nil || isNil(o.IsUltraRestricted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsUltraRestricted.Get()
}

// GetIsUltraRestrictedOk returns a tuple with the IsUltraRestricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetIsUltraRestrictedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsUltraRestricted.Get(), o.IsUltraRestricted.IsSet()
}

// HasIsUltraRestricted returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasIsUltraRestricted() bool {
	if o != nil && o.IsUltraRestricted.IsSet() {
		return true
	}

	return false
}

// SetIsUltraRestricted gets a reference to the given NullableBool and assigns it to the IsUltraRestricted field.
func (o *ObjsUserProfile) SetIsUltraRestricted(v bool) {
	o.IsUltraRestricted.Set(&v)
}
// SetIsUltraRestrictedNil sets the value for IsUltraRestricted to be an explicit nil
func (o *ObjsUserProfile) SetIsUltraRestrictedNil() {
	o.IsUltraRestricted.Set(nil)
}

// UnsetIsUltraRestricted ensures that no value is present for IsUltraRestricted, not even an explicit nil
func (o *ObjsUserProfile) UnsetIsUltraRestricted() {
	o.IsUltraRestricted.Unset()
}

// GetLastAvatarImageHash returns the LastAvatarImageHash field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetLastAvatarImageHash() string {
	if o == nil || isNil(o.LastAvatarImageHash) {
		var ret string
		return ret
	}
	return *o.LastAvatarImageHash
}

// GetLastAvatarImageHashOk returns a tuple with the LastAvatarImageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetLastAvatarImageHashOk() (*string, bool) {
	if o == nil || isNil(o.LastAvatarImageHash) {
    return nil, false
	}
	return o.LastAvatarImageHash, true
}

// HasLastAvatarImageHash returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasLastAvatarImageHash() bool {
	if o != nil && !isNil(o.LastAvatarImageHash) {
		return true
	}

	return false
}

// SetLastAvatarImageHash gets a reference to the given string and assigns it to the LastAvatarImageHash field.
func (o *ObjsUserProfile) SetLastAvatarImageHash(v string) {
	o.LastAvatarImageHash = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetLastName() string {
	if o == nil || isNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetLastNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *ObjsUserProfile) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *ObjsUserProfile) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *ObjsUserProfile) UnsetLastName() {
	o.LastName.Unset()
}

// GetMembershipsCount returns the MembershipsCount field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetMembershipsCount() int32 {
	if o == nil || isNil(o.MembershipsCount) {
		var ret int32
		return ret
	}
	return *o.MembershipsCount
}

// GetMembershipsCountOk returns a tuple with the MembershipsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetMembershipsCountOk() (*int32, bool) {
	if o == nil || isNil(o.MembershipsCount) {
    return nil, false
	}
	return o.MembershipsCount, true
}

// HasMembershipsCount returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasMembershipsCount() bool {
	if o != nil && !isNil(o.MembershipsCount) {
		return true
	}

	return false
}

// SetMembershipsCount gets a reference to the given int32 and assigns it to the MembershipsCount field.
func (o *ObjsUserProfile) SetMembershipsCount(v int32) {
	o.MembershipsCount = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ObjsUserProfile) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ObjsUserProfile) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ObjsUserProfile) UnsetName() {
	o.Name.Unset()
}

// GetPhone returns the Phone field value
func (o *ObjsUserProfile) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetPhoneOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *ObjsUserProfile) SetPhone(v string) {
	o.Phone = v
}

// GetPronouns returns the Pronouns field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetPronouns() string {
	if o == nil || isNil(o.Pronouns) {
		var ret string
		return ret
	}
	return *o.Pronouns
}

// GetPronounsOk returns a tuple with the Pronouns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetPronounsOk() (*string, bool) {
	if o == nil || isNil(o.Pronouns) {
    return nil, false
	}
	return o.Pronouns, true
}

// HasPronouns returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasPronouns() bool {
	if o != nil && !isNil(o.Pronouns) {
		return true
	}

	return false
}

// SetPronouns gets a reference to the given string and assigns it to the Pronouns field.
func (o *ObjsUserProfile) SetPronouns(v string) {
	o.Pronouns = &v
}

// GetRealName returns the RealName field value
func (o *ObjsUserProfile) GetRealName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RealName
}

// GetRealNameOk returns a tuple with the RealName field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetRealNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RealName, true
}

// SetRealName sets field value
func (o *ObjsUserProfile) SetRealName(v string) {
	o.RealName = v
}

// GetRealNameNormalized returns the RealNameNormalized field value
func (o *ObjsUserProfile) GetRealNameNormalized() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RealNameNormalized
}

// GetRealNameNormalizedOk returns a tuple with the RealNameNormalized field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetRealNameNormalizedOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RealNameNormalized, true
}

// SetRealNameNormalized sets field value
func (o *ObjsUserProfile) SetRealNameNormalized(v string) {
	o.RealNameNormalized = v
}

// GetSkype returns the Skype field value
func (o *ObjsUserProfile) GetSkype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Skype
}

// GetSkypeOk returns a tuple with the Skype field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetSkypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Skype, true
}

// SetSkype sets field value
func (o *ObjsUserProfile) SetSkype(v string) {
	o.Skype = v
}

// GetStatusDefaultEmoji returns the StatusDefaultEmoji field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetStatusDefaultEmoji() string {
	if o == nil || isNil(o.StatusDefaultEmoji) {
		var ret string
		return ret
	}
	return *o.StatusDefaultEmoji
}

// GetStatusDefaultEmojiOk returns a tuple with the StatusDefaultEmoji field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetStatusDefaultEmojiOk() (*string, bool) {
	if o == nil || isNil(o.StatusDefaultEmoji) {
    return nil, false
	}
	return o.StatusDefaultEmoji, true
}

// HasStatusDefaultEmoji returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasStatusDefaultEmoji() bool {
	if o != nil && !isNil(o.StatusDefaultEmoji) {
		return true
	}

	return false
}

// SetStatusDefaultEmoji gets a reference to the given string and assigns it to the StatusDefaultEmoji field.
func (o *ObjsUserProfile) SetStatusDefaultEmoji(v string) {
	o.StatusDefaultEmoji = &v
}

// GetStatusDefaultText returns the StatusDefaultText field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetStatusDefaultText() string {
	if o == nil || isNil(o.StatusDefaultText) {
		var ret string
		return ret
	}
	return *o.StatusDefaultText
}

// GetStatusDefaultTextOk returns a tuple with the StatusDefaultText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetStatusDefaultTextOk() (*string, bool) {
	if o == nil || isNil(o.StatusDefaultText) {
    return nil, false
	}
	return o.StatusDefaultText, true
}

// HasStatusDefaultText returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasStatusDefaultText() bool {
	if o != nil && !isNil(o.StatusDefaultText) {
		return true
	}

	return false
}

// SetStatusDefaultText gets a reference to the given string and assigns it to the StatusDefaultText field.
func (o *ObjsUserProfile) SetStatusDefaultText(v string) {
	o.StatusDefaultText = &v
}

// GetStatusDefaultTextCanonical returns the StatusDefaultTextCanonical field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetStatusDefaultTextCanonical() string {
	if o == nil || isNil(o.StatusDefaultTextCanonical.Get()) {
		var ret string
		return ret
	}
	return *o.StatusDefaultTextCanonical.Get()
}

// GetStatusDefaultTextCanonicalOk returns a tuple with the StatusDefaultTextCanonical field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetStatusDefaultTextCanonicalOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.StatusDefaultTextCanonical.Get(), o.StatusDefaultTextCanonical.IsSet()
}

// HasStatusDefaultTextCanonical returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasStatusDefaultTextCanonical() bool {
	if o != nil && o.StatusDefaultTextCanonical.IsSet() {
		return true
	}

	return false
}

// SetStatusDefaultTextCanonical gets a reference to the given NullableString and assigns it to the StatusDefaultTextCanonical field.
func (o *ObjsUserProfile) SetStatusDefaultTextCanonical(v string) {
	o.StatusDefaultTextCanonical.Set(&v)
}
// SetStatusDefaultTextCanonicalNil sets the value for StatusDefaultTextCanonical to be an explicit nil
func (o *ObjsUserProfile) SetStatusDefaultTextCanonicalNil() {
	o.StatusDefaultTextCanonical.Set(nil)
}

// UnsetStatusDefaultTextCanonical ensures that no value is present for StatusDefaultTextCanonical, not even an explicit nil
func (o *ObjsUserProfile) UnsetStatusDefaultTextCanonical() {
	o.StatusDefaultTextCanonical.Unset()
}

// GetStatusEmoji returns the StatusEmoji field value
func (o *ObjsUserProfile) GetStatusEmoji() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusEmoji
}

// GetStatusEmojiOk returns a tuple with the StatusEmoji field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetStatusEmojiOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StatusEmoji, true
}

// SetStatusEmoji sets field value
func (o *ObjsUserProfile) SetStatusEmoji(v string) {
	o.StatusEmoji = v
}

// GetStatusExpiration returns the StatusExpiration field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetStatusExpiration() int32 {
	if o == nil || isNil(o.StatusExpiration) {
		var ret int32
		return ret
	}
	return *o.StatusExpiration
}

// GetStatusExpirationOk returns a tuple with the StatusExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetStatusExpirationOk() (*int32, bool) {
	if o == nil || isNil(o.StatusExpiration) {
    return nil, false
	}
	return o.StatusExpiration, true
}

// HasStatusExpiration returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasStatusExpiration() bool {
	if o != nil && !isNil(o.StatusExpiration) {
		return true
	}

	return false
}

// SetStatusExpiration gets a reference to the given int32 and assigns it to the StatusExpiration field.
func (o *ObjsUserProfile) SetStatusExpiration(v int32) {
	o.StatusExpiration = &v
}

// GetStatusText returns the StatusText field value
func (o *ObjsUserProfile) GetStatusText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusText
}

// GetStatusTextOk returns a tuple with the StatusText field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetStatusTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StatusText, true
}

// SetStatusText sets field value
func (o *ObjsUserProfile) SetStatusText(v string) {
	o.StatusText = v
}

// GetStatusTextCanonical returns the StatusTextCanonical field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetStatusTextCanonical() string {
	if o == nil || isNil(o.StatusTextCanonical.Get()) {
		var ret string
		return ret
	}
	return *o.StatusTextCanonical.Get()
}

// GetStatusTextCanonicalOk returns a tuple with the StatusTextCanonical field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetStatusTextCanonicalOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.StatusTextCanonical.Get(), o.StatusTextCanonical.IsSet()
}

// HasStatusTextCanonical returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasStatusTextCanonical() bool {
	if o != nil && o.StatusTextCanonical.IsSet() {
		return true
	}

	return false
}

// SetStatusTextCanonical gets a reference to the given NullableString and assigns it to the StatusTextCanonical field.
func (o *ObjsUserProfile) SetStatusTextCanonical(v string) {
	o.StatusTextCanonical.Set(&v)
}
// SetStatusTextCanonicalNil sets the value for StatusTextCanonical to be an explicit nil
func (o *ObjsUserProfile) SetStatusTextCanonicalNil() {
	o.StatusTextCanonical.Set(nil)
}

// UnsetStatusTextCanonical ensures that no value is present for StatusTextCanonical, not even an explicit nil
func (o *ObjsUserProfile) UnsetStatusTextCanonical() {
	o.StatusTextCanonical.Unset()
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetTeam() string {
	if o == nil || isNil(o.Team) {
		var ret string
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetTeamOk() (*string, bool) {
	if o == nil || isNil(o.Team) {
    return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasTeam() bool {
	if o != nil && !isNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given string and assigns it to the Team field.
func (o *ObjsUserProfile) SetTeam(v string) {
	o.Team = &v
}

// GetTitle returns the Title field value
func (o *ObjsUserProfile) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ObjsUserProfile) SetTitle(v string) {
	o.Title = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetUpdated() int32 {
	if o == nil || isNil(o.Updated) {
		var ret int32
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetUpdatedOk() (*int32, bool) {
	if o == nil || isNil(o.Updated) {
    return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasUpdated() bool {
	if o != nil && !isNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given int32 and assigns it to the Updated field.
func (o *ObjsUserProfile) SetUpdated(v int32) {
	o.Updated = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ObjsUserProfile) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjsUserProfile) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ObjsUserProfile) SetUserId(v string) {
	o.UserId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ObjsUserProfile) GetUsername() string {
	if o == nil || isNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ObjsUserProfile) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *ObjsUserProfile) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *ObjsUserProfile) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *ObjsUserProfile) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *ObjsUserProfile) UnsetUsername() {
	o.Username.Unset()
}

func (o ObjsUserProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AlwaysActive) {
		toSerialize["always_active"] = o.AlwaysActive
	}
	if !isNil(o.ApiAppId) {
		toSerialize["api_app_id"] = o.ApiAppId
	}
	if true {
		toSerialize["avatar_hash"] = o.AvatarHash
	}
	if !isNil(o.BotId) {
		toSerialize["bot_id"] = o.BotId
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["display_name_normalized"] = o.DisplayNameNormalized
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.FirstName.IsSet() {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	if o.GuestExpirationTs.IsSet() {
		toSerialize["guest_expiration_ts"] = o.GuestExpirationTs.Get()
	}
	if o.GuestInvitedBy.IsSet() {
		toSerialize["guest_invited_by"] = o.GuestInvitedBy.Get()
	}
	if o.Image1024.IsSet() {
		toSerialize["image_1024"] = o.Image1024.Get()
	}
	if o.Image192.IsSet() {
		toSerialize["image_192"] = o.Image192.Get()
	}
	if o.Image24.IsSet() {
		toSerialize["image_24"] = o.Image24.Get()
	}
	if o.Image32.IsSet() {
		toSerialize["image_32"] = o.Image32.Get()
	}
	if o.Image48.IsSet() {
		toSerialize["image_48"] = o.Image48.Get()
	}
	if o.Image512.IsSet() {
		toSerialize["image_512"] = o.Image512.Get()
	}
	if o.Image72.IsSet() {
		toSerialize["image_72"] = o.Image72.Get()
	}
	if o.ImageOriginal.IsSet() {
		toSerialize["image_original"] = o.ImageOriginal.Get()
	}
	if !isNil(o.IsAppUser) {
		toSerialize["is_app_user"] = o.IsAppUser
	}
	if !isNil(o.IsCustomImage) {
		toSerialize["is_custom_image"] = o.IsCustomImage
	}
	if o.IsRestricted.IsSet() {
		toSerialize["is_restricted"] = o.IsRestricted.Get()
	}
	if o.IsUltraRestricted.IsSet() {
		toSerialize["is_ultra_restricted"] = o.IsUltraRestricted.Get()
	}
	if !isNil(o.LastAvatarImageHash) {
		toSerialize["last_avatar_image_hash"] = o.LastAvatarImageHash
	}
	if o.LastName.IsSet() {
		toSerialize["last_name"] = o.LastName.Get()
	}
	if !isNil(o.MembershipsCount) {
		toSerialize["memberships_count"] = o.MembershipsCount
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["phone"] = o.Phone
	}
	if !isNil(o.Pronouns) {
		toSerialize["pronouns"] = o.Pronouns
	}
	if true {
		toSerialize["real_name"] = o.RealName
	}
	if true {
		toSerialize["real_name_normalized"] = o.RealNameNormalized
	}
	if true {
		toSerialize["skype"] = o.Skype
	}
	if !isNil(o.StatusDefaultEmoji) {
		toSerialize["status_default_emoji"] = o.StatusDefaultEmoji
	}
	if !isNil(o.StatusDefaultText) {
		toSerialize["status_default_text"] = o.StatusDefaultText
	}
	if o.StatusDefaultTextCanonical.IsSet() {
		toSerialize["status_default_text_canonical"] = o.StatusDefaultTextCanonical.Get()
	}
	if true {
		toSerialize["status_emoji"] = o.StatusEmoji
	}
	if !isNil(o.StatusExpiration) {
		toSerialize["status_expiration"] = o.StatusExpiration
	}
	if true {
		toSerialize["status_text"] = o.StatusText
	}
	if o.StatusTextCanonical.IsSet() {
		toSerialize["status_text_canonical"] = o.StatusTextCanonical.Get()
	}
	if !isNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableObjsUserProfile struct {
	value *ObjsUserProfile
	isSet bool
}

func (v NullableObjsUserProfile) Get() *ObjsUserProfile {
	return v.value
}

func (v *NullableObjsUserProfile) Set(val *ObjsUserProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableObjsUserProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableObjsUserProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjsUserProfile(val *ObjsUserProfile) *NullableObjsUserProfile {
	return &NullableObjsUserProfile{value: val, isSet: true}
}

func (v NullableObjsUserProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjsUserProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


