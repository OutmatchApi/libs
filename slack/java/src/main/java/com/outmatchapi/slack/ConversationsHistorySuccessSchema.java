/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outmatchapi.slack;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outmatchapi.slack.ConversationsHistorySuccessSchemaChannelActionsTsInner;
import com.outmatchapi.slack.DefsOkTrue;
import com.outmatchapi.slack.ObjsMessage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import invalidPackageName.JSON;

/**
 * Schema for successful response from conversations.history method
 */
@ApiModel(description = "Schema for successful response from conversations.history method")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-08T22:09:03.829372Z[Etc/UTC]")
public class ConversationsHistorySuccessSchema {
  public static final String SERIALIZED_NAME_CHANNEL_ACTIONS_COUNT = "channel_actions_count";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ACTIONS_COUNT)
  private Integer channelActionsCount;

  public static final String SERIALIZED_NAME_CHANNEL_ACTIONS_TS = "channel_actions_ts";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ACTIONS_TS)
  private List<ConversationsHistorySuccessSchemaChannelActionsTsInner> channelActionsTs = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_MORE = "has_more";
  @SerializedName(SERIALIZED_NAME_HAS_MORE)
  private Boolean hasMore;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private Set<ObjsMessage> messages = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_OK = "ok";
  @SerializedName(SERIALIZED_NAME_OK)
  private DefsOkTrue ok;

  public static final String SERIALIZED_NAME_PIN_COUNT = "pin_count";
  @SerializedName(SERIALIZED_NAME_PIN_COUNT)
  private Integer pinCount;

  public ConversationsHistorySuccessSchema() {
  }

  public ConversationsHistorySuccessSchema channelActionsCount(Integer channelActionsCount) {
    
    this.channelActionsCount = channelActionsCount;
    return this;
  }

   /**
   * Get channelActionsCount
   * @return channelActionsCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getChannelActionsCount() {
    return channelActionsCount;
  }


  public void setChannelActionsCount(Integer channelActionsCount) {
    this.channelActionsCount = channelActionsCount;
  }


  public ConversationsHistorySuccessSchema channelActionsTs(List<ConversationsHistorySuccessSchemaChannelActionsTsInner> channelActionsTs) {
    
    this.channelActionsTs = channelActionsTs;
    return this;
  }

  public ConversationsHistorySuccessSchema addChannelActionsTsItem(ConversationsHistorySuccessSchemaChannelActionsTsInner channelActionsTsItem) {
    this.channelActionsTs.add(channelActionsTsItem);
    return this;
  }

   /**
   * Get channelActionsTs
   * @return channelActionsTs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<ConversationsHistorySuccessSchemaChannelActionsTsInner> getChannelActionsTs() {
    return channelActionsTs;
  }


  public void setChannelActionsTs(List<ConversationsHistorySuccessSchemaChannelActionsTsInner> channelActionsTs) {
    this.channelActionsTs = channelActionsTs;
  }


  public ConversationsHistorySuccessSchema hasMore(Boolean hasMore) {
    
    this.hasMore = hasMore;
    return this;
  }

   /**
   * Get hasMore
   * @return hasMore
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasMore() {
    return hasMore;
  }


  public void setHasMore(Boolean hasMore) {
    this.hasMore = hasMore;
  }


  public ConversationsHistorySuccessSchema messages(Set<ObjsMessage> messages) {
    
    this.messages = messages;
    return this;
  }

  public ConversationsHistorySuccessSchema addMessagesItem(ObjsMessage messagesItem) {
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Set<ObjsMessage> getMessages() {
    return messages;
  }


  public void setMessages(Set<ObjsMessage> messages) {
    this.messages = messages;
  }


  public ConversationsHistorySuccessSchema ok(DefsOkTrue ok) {
    
    this.ok = ok;
    return this;
  }

   /**
   * Get ok
   * @return ok
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DefsOkTrue getOk() {
    return ok;
  }


  public void setOk(DefsOkTrue ok) {
    this.ok = ok;
  }


  public ConversationsHistorySuccessSchema pinCount(Integer pinCount) {
    
    this.pinCount = pinCount;
    return this;
  }

   /**
   * Get pinCount
   * @return pinCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPinCount() {
    return pinCount;
  }


  public void setPinCount(Integer pinCount) {
    this.pinCount = pinCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationsHistorySuccessSchema conversationsHistorySuccessSchema = (ConversationsHistorySuccessSchema) o;
    return Objects.equals(this.channelActionsCount, conversationsHistorySuccessSchema.channelActionsCount) &&
        Objects.equals(this.channelActionsTs, conversationsHistorySuccessSchema.channelActionsTs) &&
        Objects.equals(this.hasMore, conversationsHistorySuccessSchema.hasMore) &&
        Objects.equals(this.messages, conversationsHistorySuccessSchema.messages) &&
        Objects.equals(this.ok, conversationsHistorySuccessSchema.ok) &&
        Objects.equals(this.pinCount, conversationsHistorySuccessSchema.pinCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelActionsCount, channelActionsTs, hasMore, messages, ok, pinCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsHistorySuccessSchema {\n");
    sb.append("    channelActionsCount: ").append(toIndentedString(channelActionsCount)).append("\n");
    sb.append("    channelActionsTs: ").append(toIndentedString(channelActionsTs)).append("\n");
    sb.append("    hasMore: ").append(toIndentedString(hasMore)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    ok: ").append(toIndentedString(ok)).append("\n");
    sb.append("    pinCount: ").append(toIndentedString(pinCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channel_actions_count");
    openapiFields.add("channel_actions_ts");
    openapiFields.add("has_more");
    openapiFields.add("messages");
    openapiFields.add("ok");
    openapiFields.add("pin_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("channel_actions_count");
    openapiRequiredFields.add("channel_actions_ts");
    openapiRequiredFields.add("has_more");
    openapiRequiredFields.add("messages");
    openapiRequiredFields.add("ok");
    openapiRequiredFields.add("pin_count");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationsHistorySuccessSchema
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ConversationsHistorySuccessSchema.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationsHistorySuccessSchema is not found in the empty JSON string", ConversationsHistorySuccessSchema.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConversationsHistorySuccessSchema.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationsHistorySuccessSchema` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ConversationsHistorySuccessSchema.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("channel_actions_ts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_actions_ts` to be an array in the JSON string but got `%s`", jsonObj.get("channel_actions_ts").toString()));
      }

      JsonArray jsonArraychannelActionsTs = jsonObj.getAsJsonArray("channel_actions_ts");
      // validate the required field `channel_actions_ts` (array)
      for (int i = 0; i < jsonArraychannelActionsTs.size(); i++) {
        ConversationsHistorySuccessSchemaChannelActionsTsInner.validateJsonObject(jsonArraychannelActionsTs.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("messages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
      }

      JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
      // validate the required field `messages` (array)
      for (int i = 0; i < jsonArraymessages.size(); i++) {
        ObjsMessage.validateJsonObject(jsonArraymessages.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationsHistorySuccessSchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationsHistorySuccessSchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationsHistorySuccessSchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationsHistorySuccessSchema.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationsHistorySuccessSchema>() {
           @Override
           public void write(JsonWriter out, ConversationsHistorySuccessSchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationsHistorySuccessSchema read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationsHistorySuccessSchema given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationsHistorySuccessSchema
  * @throws IOException if the JSON string is invalid with respect to ConversationsHistorySuccessSchema
  */
  public static ConversationsHistorySuccessSchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationsHistorySuccessSchema.class);
  }

 /**
  * Convert an instance of ConversationsHistorySuccessSchema to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

