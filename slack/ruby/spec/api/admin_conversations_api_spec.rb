=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::AdminConversationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdminConversationsApi' do
  before do
    # run before each test
    @api_instance = slack::AdminConversationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdminConversationsApi' do
    it 'should create an instance of AdminConversationsApi' do
      expect(@api_instance).to be_instance_of(slack::AdminConversationsApi)
    end
  end

  # unit tests for admin_conversations_archive
  # Archive a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to archive.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsArchiveSchema]
  describe 'admin_conversations_archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_convert_to_private
  # Convert a public channel to a private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to convert to private.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsConvertToPrivateSchema]
  describe 'admin_conversations_convert_to_private test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_create
  # Create a public or private channel-based conversation.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param is_private When &#x60;true&#x60;, creates a private channel instead of a public channel
  # @param name Name of the public or private channel to create.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description Description of the public or private channel to create.
  # @option opts [Boolean] :org_wide When &#x60;true&#x60;, the channel will be available org-wide. Note: if the channel is not &#x60;org_wide&#x3D;true&#x60;, you must specify a &#x60;team_id&#x60; for this channel
  # @option opts [String] :team_id The workspace to create the channel in. Note: this argument is required unless you set &#x60;org_wide&#x3D;true&#x60;.
  # @return [AdminConversationsCreateSchema]
  describe 'admin_conversations_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_delete
  # Delete a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to delete.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsDeleteSchema]
  describe 'admin_conversations_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_disconnect_shared
  # Disconnect a connected channel from one or more workspaces.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to be disconnected from some workspaces.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :leaving_team_ids The team to be removed from the channel. Currently only a single team id can be specified.
  # @return [AdminConversationsRenameSchema]
  describe 'admin_conversations_disconnect_shared test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_get_conversation_prefs
  # Get conversation preferences for a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:read&#x60;
  # @param channel_id The channel to get preferences for.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsGetConversationPrefsSchema]
  describe 'admin_conversations_get_conversation_prefs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_get_teams
  # Get all the workspaces a given public or private channel is connected to within this Enterprise org.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:read&#x60;
  # @param channel_id The channel to determine connected workspaces within the organization for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Set &#x60;cursor&#x60; to &#x60;next_cursor&#x60; returned by the previous call to list items in the next page
  # @option opts [Integer] :limit The maximum number of items to return. Must be between 1 - 1000 both inclusive.
  # @return [AdminConversationsGetTeamsSchema]
  describe 'admin_conversations_get_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_invite
  # Invite a user to a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel that the users will be invited to.
  # @param user_ids The users to invite.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsInviteSchema]
  describe 'admin_conversations_invite test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_rename
  # Rename a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to rename.
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsRenameSchema1]
  describe 'admin_conversations_rename test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_search
  # Search for public or private channels in an Enterprise organization.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:read&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :team_ids Comma separated string of team IDs, signifying the workspaces to search through.
  # @option opts [String] :query Name of the the channel to query by.
  # @option opts [Integer] :limit Maximum number of items to be returned. Must be between 1 - 20 both inclusive. Default is 10.
  # @option opts [String] :cursor Set &#x60;cursor&#x60; to &#x60;next_cursor&#x60; returned by the previous call to list items in the next page.
  # @option opts [String] :search_channel_types The type of channel to include or exclude in the search. For example &#x60;private&#x60; will search private channels, while &#x60;private_exclude&#x60; will exclude them. For a full list of types, check the [Types section](#types).
  # @option opts [String] :sort Possible values are &#x60;relevant&#x60; (search ranking based on what we think is closest), &#x60;name&#x60; (alphabetical), &#x60;member_count&#x60; (number of users in the channel), and &#x60;created&#x60; (date channel was created). You can optionally pair this with the &#x60;sort_dir&#x60; arg to change how it is sorted 
  # @option opts [String] :sort_dir Sort direction. Possible values are &#x60;asc&#x60; for ascending order like (1, 2, 3) or (a, b, c), and &#x60;desc&#x60; for descending order like (3, 2, 1) or (c, b, a)
  # @return [AdminConversationsSearchSchema]
  describe 'admin_conversations_search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_set_conversation_prefs
  # Set the posting permissions for a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to set the prefs for
  # @param prefs The prefs for this channel in a stringified JSON format.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsSetConversationPrefsSchema]
  describe 'admin_conversations_set_conversation_prefs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_set_teams
  # Set the workspaces in an Enterprise grid org that connect to a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The encoded &#x60;channel_id&#x60; to add or remove to workspaces.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :org_channel True if channel has to be converted to an org channel
  # @option opts [String] :target_team_ids A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.
  # @option opts [String] :team_id The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.
  # @return [DefaultSuccessTemplate]
  describe 'admin_conversations_set_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_unarchive
  # Unarchive a public or private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param channel_id The channel to unarchive.
  # @param [Hash] opts the optional parameters
  # @return [AdminConversationsUnarchiveSchema]
  describe 'admin_conversations_unarchive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
