=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::AppsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AppsApi' do
  before do
    # run before each test
    @api_instance = slack::AppsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AppsApi' do
    it 'should create an instance of AppsApi' do
      expect(@api_instance).to be_instance_of(slack::AppsApi)
    end
  end

  # unit tests for apps_event_authorizations_list
  # Get a list of authorizations for the given event context. Each authorization represents an app installation that the event is visible to.
  # @param token Authentication token. Requires scope: &#x60;authorizations:read&#x60;
  # @param event_context 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [DefaultSuccessTemplate]
  describe 'apps_event_authorizations_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_permissions_info
  # Returns list of permissions this app has on a team.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;none&#x60;
  # @return [AppsPermissionsInfoSchema]
  describe 'apps_permissions_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_permissions_request
  # Allows an app to request additional scopes
  # @param token Authentication token. Requires scope: &#x60;none&#x60;
  # @param scopes A comma separated list of scopes to request for
  # @param trigger_id Token used to trigger the permissions API
  # @param [Hash] opts the optional parameters
  # @return [AppsPermissionsRequestSchema]
  describe 'apps_permissions_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_permissions_resources_list
  # Returns list of resource grants this app has on a team.
  # @param token Authentication token. Requires scope: &#x60;none&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Paginate through collections of data by setting the &#x60;cursor&#x60; parameter to a &#x60;next_cursor&#x60; attribute returned by a previous request&#39;s &#x60;response_metadata&#x60;. Default value fetches the first \&quot;page\&quot; of the collection. See [pagination](/docs/pagination) for more detail.
  # @option opts [Integer] :limit The maximum number of items to return.
  # @return [AppsPermissionsResourcesListSuccessSchema]
  describe 'apps_permissions_resources_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_permissions_scopes_list
  # Returns list of scopes this app has on a team.
  # @param token Authentication token. Requires scope: &#x60;none&#x60;
  # @param [Hash] opts the optional parameters
  # @return [ApiPermissionsScopesListSuccessSchema]
  describe 'apps_permissions_scopes_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_permissions_users_list
  # Returns list of user grants and corresponding scopes this app has on a team.
  # @param token Authentication token. Requires scope: &#x60;none&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor Paginate through collections of data by setting the &#x60;cursor&#x60; parameter to a &#x60;next_cursor&#x60; attribute returned by a previous request&#39;s &#x60;response_metadata&#x60;. Default value fetches the first \&quot;page\&quot; of the collection. See [pagination](/docs/pagination) for more detail.
  # @option opts [Integer] :limit The maximum number of items to return.
  # @return [DefaultSuccessTemplate]
  describe 'apps_permissions_users_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_permissions_users_request
  # Enables an app to trigger a permissions modal to grant an app access to a user access scope.
  # @param token Authentication token. Requires scope: &#x60;none&#x60;
  # @param scopes A comma separated list of user scopes to request for
  # @param trigger_id Token used to trigger the request
  # @param user The user this scope is being requested for
  # @param [Hash] opts the optional parameters
  # @return [DefaultSuccessTemplate]
  describe 'apps_permissions_users_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for apps_uninstall
  # Uninstalls your app from a workspace.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;none&#x60;
  # @option opts [String] :client_id Issued when you created your application.
  # @option opts [String] :client_secret Issued when you created your application.
  # @return [AppsUninstallSchema]
  describe 'apps_uninstall test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
