=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::AdminConversationsRestrictAccessApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdminConversationsRestrictAccessApi' do
  before do
    # run before each test
    @api_instance = slack::AdminConversationsRestrictAccessApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdminConversationsRestrictAccessApi' do
    it 'should create an instance of AdminConversationsRestrictAccessApi' do
      expect(@api_instance).to be_instance_of(slack::AdminConversationsRestrictAccessApi)
    end
  end

  # unit tests for admin_conversations_restrict_access_add_group
  # Add an allowlist of IDP groups for accessing a channel
  # @param channel_id The channel to link this group to.
  # @param group_id The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :team_id The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.
  # @return [DefaultSuccessTemplate]
  describe 'admin_conversations_restrict_access_add_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_restrict_access_list_groups
  # List all IDP Groups linked to a channel
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:read&#x60;
  # @param channel_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :team_id The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.
  # @return [DefaultSuccessTemplate]
  describe 'admin_conversations_restrict_access_list_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_conversations_restrict_access_remove_group
  # Remove a linked IDP group linked from a private channel
  # @param channel_id The channel to remove the linked group from.
  # @param group_id The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel.
  # @param team_id The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.
  # @param token Authentication token. Requires scope: &#x60;admin.conversations:write&#x60;
  # @param [Hash] opts the optional parameters
  # @return [DefaultSuccessTemplate]
  describe 'admin_conversations_restrict_access_remove_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
