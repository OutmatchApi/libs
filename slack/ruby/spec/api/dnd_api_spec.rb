=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::DndApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DndApi' do
  before do
    # run before each test
    @api_instance = slack::DndApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DndApi' do
    it 'should create an instance of DndApi' do
      expect(@api_instance).to be_instance_of(slack::DndApi)
    end
  end

  # unit tests for dnd_end_dnd
  # Ends the current user&#39;s Do Not Disturb session immediately.
  # @param token Authentication token. Requires scope: &#x60;dnd:write&#x60;
  # @param [Hash] opts the optional parameters
  # @return [DndEndDndSchema]
  describe 'dnd_end_dnd test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dnd_end_snooze
  # Ends the current user&#39;s snooze mode immediately.
  # @param token Authentication token. Requires scope: &#x60;dnd:write&#x60;
  # @param [Hash] opts the optional parameters
  # @return [DndEndSnoozeSchema]
  describe 'dnd_end_snooze test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dnd_info
  # Retrieves a user&#39;s current Do Not Disturb status.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;dnd:read&#x60;
  # @option opts [String] :user User to fetch status for (defaults to current user)
  # @return [DndInfoSchema]
  describe 'dnd_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dnd_set_snooze
  # Turns on Do Not Disturb mode for the current user, or changes its duration.
  # @param num_minutes Number of minutes, from now, to snooze until.
  # @param token Authentication token. Requires scope: &#x60;dnd:write&#x60;
  # @param [Hash] opts the optional parameters
  # @return [DndSetSnoozeSchema]
  describe 'dnd_set_snooze test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dnd_team_info
  # Retrieves the Do Not Disturb status for up to 50 users on a team.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;dnd:read&#x60;
  # @option opts [String] :users Comma-separated list of users to fetch Do Not Disturb status for
  # @return [DefaultSuccessTemplate]
  describe 'dnd_team_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
