=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::RemindersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RemindersApi' do
  before do
    # run before each test
    @api_instance = slack::RemindersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RemindersApi' do
    it 'should create an instance of RemindersApi' do
      expect(@api_instance).to be_instance_of(slack::RemindersApi)
    end
  end

  # unit tests for reminders_add
  # Creates a reminder.
  # @param token Authentication token. Requires scope: &#x60;reminders:write&#x60;
  # @param text The content of the reminder
  # @param time When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \\\&quot;in 15 minutes,\\\&quot; or \\\&quot;every Thursday\\\&quot;)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.
  # @return [RemindersAddSchema]
  describe 'reminders_add test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reminders_complete
  # Marks a reminder as complete.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;reminders:write&#x60;
  # @option opts [String] :reminder The ID of the reminder to be marked as complete
  # @return [RemindersCompleteSchema]
  describe 'reminders_complete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reminders_delete
  # Deletes a reminder.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;reminders:write&#x60;
  # @option opts [String] :reminder The ID of the reminder
  # @return [RemindersDeleteSchema]
  describe 'reminders_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reminders_info
  # Gets information about a reminder.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;reminders:read&#x60;
  # @option opts [String] :reminder The ID of the reminder
  # @return [RemindersInfoSchema]
  describe 'reminders_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reminders_list
  # Lists all reminders created by or for a given user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;reminders:read&#x60;
  # @return [RemindersListSchema]
  describe 'reminders_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
