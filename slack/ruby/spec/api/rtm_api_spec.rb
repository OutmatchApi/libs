=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::RtmApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RtmApi' do
  before do
    # run before each test
    @api_instance = slack::RtmApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RtmApi' do
    it 'should create an instance of RtmApi' do
      expect(@api_instance).to be_instance_of(slack::RtmApi)
    end
  end

  # unit tests for rtm_connect
  # Starts a Real Time Messaging session.
  # @param token Authentication token. Requires scope: &#x60;rtm:stream&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :batch_presence_aware Batch presence deliveries via subscription. Enabling changes the shape of &#x60;presence_change&#x60; events. See [batch presence](/docs/presence-and-status#batching).
  # @option opts [Boolean] :presence_sub Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions).
  # @return [RtmConnectSchema]
  describe 'rtm_connect test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
