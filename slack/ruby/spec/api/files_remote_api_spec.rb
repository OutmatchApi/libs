=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::FilesRemoteApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FilesRemoteApi' do
  before do
    # run before each test
    @api_instance = slack::FilesRemoteApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesRemoteApi' do
    it 'should create an instance of FilesRemoteApi' do
      expect(@api_instance).to be_instance_of(slack::FilesRemoteApi)
    end
  end

  # unit tests for files_remote_add
  # Adds a file from a remote service
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_id Creator defined GUID for the file.
  # @option opts [String] :external_url URL of the remote file.
  # @option opts [String] :filetype type of file
  # @option opts [String] :indexable_file_contents A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.
  # @option opts [String] :preview_image Preview of the document via &#x60;multipart/form-data&#x60;.
  # @option opts [String] :title Title of the file being shared.
  # @option opts [String] :token Authentication token. Requires scope: &#x60;remote_files:write&#x60;
  # @return [DefaultSuccessTemplate]
  describe 'files_remote_add test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_remote_info
  # Retrieve information about a remote file added to Slack
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;remote_files:read&#x60;
  # @option opts [String] :file Specify a file by providing its ID.
  # @option opts [String] :external_id Creator defined GUID for the file.
  # @return [DefaultSuccessTemplate]
  describe 'files_remote_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_remote_list
  # Retrieve information about a remote file added to Slack
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;remote_files:read&#x60;
  # @option opts [String] :channel Filter files appearing in a specific channel, indicated by its ID.
  # @option opts [Float] :ts_from Filter files created after this timestamp (inclusive).
  # @option opts [Float] :ts_to Filter files created before this timestamp (inclusive).
  # @option opts [Integer] :limit The maximum number of items to return.
  # @option opts [String] :cursor Paginate through collections of data by setting the &#x60;cursor&#x60; parameter to a &#x60;next_cursor&#x60; attribute returned by a previous request&#39;s &#x60;response_metadata&#x60;. Default value fetches the first \&quot;page\&quot; of the collection. See [pagination](/docs/pagination) for more detail.
  # @return [DefaultSuccessTemplate]
  describe 'files_remote_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_remote_remove
  # Remove a remote file.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_id Creator defined GUID for the file.
  # @option opts [String] :file Specify a file by providing its ID.
  # @option opts [String] :token Authentication token. Requires scope: &#x60;remote_files:write&#x60;
  # @return [DefaultSuccessTemplate]
  describe 'files_remote_remove test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_remote_share
  # Share a remote file into a channel.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :token Authentication token. Requires scope: &#x60;remote_files:share&#x60;
  # @option opts [String] :file Specify a file registered with Slack by providing its ID. Either this field or &#x60;external_id&#x60; or both are required.
  # @option opts [String] :external_id The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or &#x60;file&#x60; or both are required.
  # @option opts [String] :channels Comma-separated list of channel IDs where the file will be shared.
  # @return [DefaultSuccessTemplate]
  describe 'files_remote_share test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_remote_update
  # Updates an existing remote file.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_id Creator defined GUID for the file.
  # @option opts [String] :external_url URL of the remote file.
  # @option opts [String] :file Specify a file by providing its ID.
  # @option opts [String] :filetype type of file
  # @option opts [String] :indexable_file_contents File containing contents that can be used to improve searchability for the remote file.
  # @option opts [String] :preview_image Preview of the document via &#x60;multipart/form-data&#x60;.
  # @option opts [String] :title Title of the file being shared.
  # @option opts [String] :token Authentication token. Requires scope: &#x60;remote_files:write&#x60;
  # @return [DefaultSuccessTemplate]
  describe 'files_remote_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
