=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::AdminUsergroupsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AdminUsergroupsApi' do
  before do
    # run before each test
    @api_instance = slack::AdminUsergroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdminUsergroupsApi' do
    it 'should create an instance of AdminUsergroupsApi' do
      expect(@api_instance).to be_instance_of(slack::AdminUsergroupsApi)
    end
  end

  # unit tests for admin_usergroups_add_channels
  # Add one or more default channels to an IDP group.
  # @param token Authentication token. Requires scope: &#x60;admin.usergroups:write&#x60;
  # @param channel_ids Comma separated string of channel IDs.
  # @param usergroup_id ID of the IDP group to add default channels for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :team_id The workspace to add default channels in.
  # @return [DefaultSuccessTemplate]
  describe 'admin_usergroups_add_channels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_usergroups_add_teams
  # Associate one or more default workspaces with an organization-wide IDP group.
  # @param token Authentication token. Requires scope: &#x60;admin.teams:write&#x60;
  # @param team_ids A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.
  # @param usergroup_id An encoded usergroup (IDP Group) ID.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :auto_provision When &#x60;true&#x60;, this method automatically creates new workspace accounts for the IDP group members.
  # @return [DefaultSuccessTemplate]
  describe 'admin_usergroups_add_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_usergroups_list_channels
  # List the channels linked to an org-level IDP group (user group).
  # @param token Authentication token. Requires scope: &#x60;admin.usergroups:read&#x60;
  # @param usergroup_id ID of the IDP group to list default channels for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :team_id ID of the the workspace.
  # @option opts [Boolean] :include_num_members Flag to include or exclude the count of members per channel.
  # @return [DefaultSuccessTemplate]
  describe 'admin_usergroups_list_channels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for admin_usergroups_remove_channels
  # Remove one or more default channels from an org-level IDP group (user group).
  # @param token Authentication token. Requires scope: &#x60;admin.usergroups:write&#x60;
  # @param channel_ids Comma-separated string of channel IDs
  # @param usergroup_id ID of the IDP Group
  # @param [Hash] opts the optional parameters
  # @return [DefaultSuccessTemplate]
  describe 'admin_usergroups_remove_channels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
