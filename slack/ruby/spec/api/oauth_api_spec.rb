=begin
#Slack Web API

#One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for slack::OauthApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OauthApi' do
  before do
    # run before each test
    @api_instance = slack::OauthApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OauthApi' do
    it 'should create an instance of OauthApi' do
      expect(@api_instance).to be_instance_of(slack::OauthApi)
    end
  end

  # unit tests for oauth_access
  # Exchanges a temporary OAuth verifier code for an access token.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_id Issued when you created your application.
  # @option opts [String] :client_secret Issued when you created your application.
  # @option opts [String] :code The &#x60;code&#x60; param returned via the OAuth callback.
  # @option opts [String] :redirect_uri This must match the originally submitted URI (if one was sent).
  # @option opts [Boolean] :single_channel Request the user to add your app only to a single channel. Only valid with a [legacy workspace app](https://api.slack.com/legacy-workspace-apps).
  # @return [DefaultSuccessTemplate]
  describe 'oauth_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for oauth_token
  # Exchanges a temporary OAuth verifier code for a workspace token.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_id Issued when you created your application.
  # @option opts [String] :client_secret Issued when you created your application.
  # @option opts [String] :code The &#x60;code&#x60; param returned via the OAuth callback.
  # @option opts [String] :redirect_uri This must match the originally submitted URI (if one was sent).
  # @option opts [Boolean] :single_channel Request the user to add your app only to a single channel.
  # @return [DefaultSuccessTemplate]
  describe 'oauth_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for oauth_v2_access
  # Exchanges a temporary OAuth verifier code for an access token.
  # @param code The &#x60;code&#x60; param returned via the OAuth callback.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_id Issued when you created your application.
  # @option opts [String] :client_secret Issued when you created your application.
  # @option opts [String] :redirect_uri This must match the originally submitted URI (if one was sent).
  # @return [DefaultSuccessTemplate]
  describe 'oauth_v2_access test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
