/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ObjsTeamProfileField {
    #[serde(rename = "field_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub field_name: Option<Option<String>>,
    #[serde(rename = "hint")]
    pub hint: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "is_hidden", skip_serializing_if = "Option::is_none")]
    pub is_hidden: Option<bool>,
    #[serde(rename = "label")]
    pub label: String,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Vec<crate::models::ObjsTeamProfileFieldOptionsInner>>,
    #[serde(rename = "ordering")]
    pub ordering: f32,
    #[serde(rename = "possible_values", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub possible_values: Option<Option<Vec<String>>>,
    #[serde(rename = "type")]
    pub r#type: RHashType,
}

impl ObjsTeamProfileField {
    pub fn new(hint: String, id: String, label: String, ordering: f32, r#type: RHashType) -> ObjsTeamProfileField {
        ObjsTeamProfileField {
            field_name: None,
            hint,
            id,
            is_hidden: None,
            label,
            options: None,
            ordering,
            possible_values: None,
            r#type,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "text")]
    Text,
    #[serde(rename = "date")]
    Date,
    #[serde(rename = "link")]
    Link,
    #[serde(rename = "mailto")]
    Mailto,
    #[serde(rename = "options_list")]
    OptionsList,
    #[serde(rename = "user")]
    User,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Text
    }
}

