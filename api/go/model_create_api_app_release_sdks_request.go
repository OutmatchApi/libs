/*
Outmatch API

Outmatch API

API version: 0.0.39
Contact: internal@outmatchapi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateApiAppReleaseSdksRequest struct for CreateApiAppReleaseSdksRequest
type CreateApiAppReleaseSdksRequest struct {
	Languages []Language `json:"languages"`
}

// NewCreateApiAppReleaseSdksRequest instantiates a new CreateApiAppReleaseSdksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiAppReleaseSdksRequest(languages []Language) *CreateApiAppReleaseSdksRequest {
	this := CreateApiAppReleaseSdksRequest{}
	this.Languages = languages
	return &this
}

// NewCreateApiAppReleaseSdksRequestWithDefaults instantiates a new CreateApiAppReleaseSdksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiAppReleaseSdksRequestWithDefaults() *CreateApiAppReleaseSdksRequest {
	this := CreateApiAppReleaseSdksRequest{}
	return &this
}

// GetLanguages returns the Languages field value
func (o *CreateApiAppReleaseSdksRequest) GetLanguages() []Language {
	if o == nil {
		var ret []Language
		return ret
	}

	return o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value
// and a boolean to check if the value has been set.
func (o *CreateApiAppReleaseSdksRequest) GetLanguagesOk() ([]Language, bool) {
	if o == nil {
    return nil, false
	}
	return o.Languages, true
}

// SetLanguages sets field value
func (o *CreateApiAppReleaseSdksRequest) SetLanguages(v []Language) {
	o.Languages = v
}

func (o CreateApiAppReleaseSdksRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["languages"] = o.Languages
	}
	return json.Marshal(toSerialize)
}

type NullableCreateApiAppReleaseSdksRequest struct {
	value *CreateApiAppReleaseSdksRequest
	isSet bool
}

func (v NullableCreateApiAppReleaseSdksRequest) Get() *CreateApiAppReleaseSdksRequest {
	return v.value
}

func (v *NullableCreateApiAppReleaseSdksRequest) Set(val *CreateApiAppReleaseSdksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiAppReleaseSdksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiAppReleaseSdksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiAppReleaseSdksRequest(val *CreateApiAppReleaseSdksRequest) *NullableCreateApiAppReleaseSdksRequest {
	return &NullableCreateApiAppReleaseSdksRequest{value: val, isSet: true}
}

func (v NullableCreateApiAppReleaseSdksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiAppReleaseSdksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


