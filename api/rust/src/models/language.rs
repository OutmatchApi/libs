/*
 * Outmatch API
 *
 * Outmatch API
 *
 * The version of the OpenAPI document: 0.0.45
 * Contact: internal@outmatchapi.com
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Language {
    #[serde(rename = "go")]
    Go,
    #[serde(rename = "typescript")]
    Typescript,
    #[serde(rename = "python")]
    Python,
    #[serde(rename = "java")]
    Java,
    #[serde(rename = "kotlin")]
    Kotlin,
    #[serde(rename = "php")]
    Php,
    #[serde(rename = "ruby")]
    Ruby,
    #[serde(rename = "rust")]
    Rust,

}

impl ToString for Language {
    fn to_string(&self) -> String {
        match self {
            Self::Go => String::from("go"),
            Self::Typescript => String::from("typescript"),
            Self::Python => String::from("python"),
            Self::Java => String::from("java"),
            Self::Kotlin => String::from("kotlin"),
            Self::Php => String::from("php"),
            Self::Ruby => String::from("ruby"),
            Self::Rust => String::from("rust"),
        }
    }
}

impl Default for Language {
    fn default() -> Language {
        Self::Go
    }
}




